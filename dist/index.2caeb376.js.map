{"mappings":"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A,kBACA,mBACA,kBACA,kBACA,iBACH,CACD,CACI,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,mBACH,kBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,oBACA,mBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,oBACH,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACH,CACD,CACI,oBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,oBACH,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,mBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,oBACH,mBACA,oBACA,mBACA,oBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,gBACA,mBACA,kBACH,CACD,CACI,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,mBACH,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,EAAG,mBACH,kBACA,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACD,CACI,oBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACH,CACJ,CACD,GAAQ,OAAA,CAAU,CACd,EAAE,CACF,EAAE,CACF,CAAC,EAAK,EAAI,CACV,CACI,kBACA,kBACA,kBACH,CACD,CACI,kBACA,kBACA,mBACA,mBACH,CACD,CACI,kBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACH,CACD,CACI,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACH,CACD,CACI,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACH,CACD,CACI,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACH,CACD,CACI,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACH,CACD,CACI,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACH,CACD,CACI,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,gBACA,gBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACH,CACD,CACI,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACH,CACD,CACI,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACH,CACD,CACI,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBACH,CACD,CACI,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACH,CACD,CACI,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBA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","sources":["<anon>","src/app.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/index.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/_FullInternals.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/_CoreInternals.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Global.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Util.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Node.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Factory.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Validators.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Canvas.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Context.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/DragAndDrop.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Container.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Stage.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/PointerEvents.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Layer.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Shape.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/FastLayer.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Group.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Animation.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/Tween.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Arc.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Arrow.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Line.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Path.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/BezierFunctions.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Circle.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Ellipse.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Image.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Label.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Rect.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/RegularPolygon.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Ring.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Sprite.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Star.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Text.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/TextPath.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Transformer.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/shapes/Wedge.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Blur.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Brighten.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Contrast.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Emboss.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Enhance.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Grayscale.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/HSL.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/HSV.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Invert.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Kaleidoscope.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Mask.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Noise.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Pixelate.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Posterize.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/RGB.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/RGBA.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Sepia.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Solarize.js","node_modules/.pnpm/konva@9.2.0/node_modules/konva/lib/filters/Threshold.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $590c77a791d51802$exports = {};\n\"use strict\";\nObject.defineProperty($590c77a791d51802$exports, \"__esModule\", {\n    value: true\n});\nvar $32614abcc186d4fe$exports = {};\n\"use strict\";\nObject.defineProperty($32614abcc186d4fe$exports, \"__esModule\", {\n    value: true\n});\n$32614abcc186d4fe$exports.Konva = void 0;\nvar $489e46baf1687eb2$exports = {};\n\"use strict\";\nObject.defineProperty($489e46baf1687eb2$exports, \"__esModule\", {\n    value: true\n});\n$489e46baf1687eb2$exports.Konva = void 0;\nvar $3c4258a611a19cfb$exports = {};\n\"use strict\";\nObject.defineProperty($3c4258a611a19cfb$exports, \"__esModule\", {\n    value: true\n});\n$3c4258a611a19cfb$exports._registerNode = $3c4258a611a19cfb$exports.Konva = $3c4258a611a19cfb$exports.glob = void 0;\nvar $3c4258a611a19cfb$var$PI_OVER_180 = Math.PI / 180;\nfunction $3c4258a611a19cfb$var$detectBrowser() {\n    return typeof window !== \"undefined\" && (({}).toString.call(window) === \"[object Window]\" || ({}).toString.call(window) === \"[object global]\");\n}\n$3c4258a611a19cfb$exports.glob = typeof $parcel$global !== \"undefined\" ? $parcel$global : typeof window !== \"undefined\" ? window : typeof WorkerGlobalScope !== \"undefined\" ? self : {};\n$3c4258a611a19cfb$exports.Konva = {\n    _global: $3c4258a611a19cfb$exports.glob,\n    version: \"9.2.0\",\n    isBrowser: $3c4258a611a19cfb$var$detectBrowser(),\n    isUnminified: /param/.test((function(param) {}).toString()),\n    dblClickWindow: 400,\n    getAngle (angle) {\n        return $3c4258a611a19cfb$exports.Konva.angleDeg ? angle * $3c4258a611a19cfb$var$PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: typeof window !== \"undefined\" && window.devicePixelRatio || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [\n        0,\n        1\n    ],\n    isDragging () {\n        return $3c4258a611a19cfb$exports.Konva[\"DD\"].isDragging;\n    },\n    isDragReady () {\n        return !!$3c4258a611a19cfb$exports.Konva[\"DD\"].node;\n    },\n    releaseCanvasOnDestroy: true,\n    document: $3c4258a611a19cfb$exports.glob.document,\n    _injectGlobal (Konva) {\n        $3c4258a611a19cfb$exports.glob.Konva = Konva;\n    }\n};\nconst $3c4258a611a19cfb$var$_registerNode = (NodeClass)=>{\n    $3c4258a611a19cfb$exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\n$3c4258a611a19cfb$exports._registerNode = $3c4258a611a19cfb$var$_registerNode;\n$3c4258a611a19cfb$exports.Konva._injectGlobal($3c4258a611a19cfb$exports.Konva);\n\n\nvar $27d6a996859d86c8$exports = {};\n\"use strict\";\nObject.defineProperty($27d6a996859d86c8$exports, \"__esModule\", {\n    value: true\n});\n$27d6a996859d86c8$exports.Util = $27d6a996859d86c8$exports.Transform = void 0;\n\nclass $27d6a996859d86c8$var$Transform {\n    constructor(m = [\n        1,\n        0,\n        0,\n        1,\n        0,\n        0\n    ]){\n        this.dirty = false;\n        this.m = m && m.slice() || [\n            1,\n            0,\n            0,\n            1,\n            0,\n            0\n        ];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new $27d6a996859d86c8$var$Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5]\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5]\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        } else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        result.rotation = $27d6a996859d86c8$exports.Util._getRotation(result.rotation);\n        return result;\n    }\n}\n$27d6a996859d86c8$exports.Transform = $27d6a996859d86c8$var$Transform;\nvar $27d6a996859d86c8$var$OBJECT_ARRAY = \"[object Array]\", $27d6a996859d86c8$var$OBJECT_NUMBER = \"[object Number]\", $27d6a996859d86c8$var$OBJECT_STRING = \"[object String]\", $27d6a996859d86c8$var$OBJECT_BOOLEAN = \"[object Boolean]\", $27d6a996859d86c8$var$PI_OVER_DEG180 = Math.PI / 180, $27d6a996859d86c8$var$DEG180_OVER_PI = 180 / Math.PI, $27d6a996859d86c8$var$HASH = \"#\", $27d6a996859d86c8$var$EMPTY_STRING = \"\", $27d6a996859d86c8$var$ZERO = \"0\", $27d6a996859d86c8$var$KONVA_WARNING = \"Konva warning: \", $27d6a996859d86c8$var$KONVA_ERROR = \"Konva error: \", $27d6a996859d86c8$var$RGB_PAREN = \"rgb(\", $27d6a996859d86c8$var$COLORS = {\n    aliceblue: [\n        240,\n        248,\n        255\n    ],\n    antiquewhite: [\n        250,\n        235,\n        215\n    ],\n    aqua: [\n        0,\n        255,\n        255\n    ],\n    aquamarine: [\n        127,\n        255,\n        212\n    ],\n    azure: [\n        240,\n        255,\n        255\n    ],\n    beige: [\n        245,\n        245,\n        220\n    ],\n    bisque: [\n        255,\n        228,\n        196\n    ],\n    black: [\n        0,\n        0,\n        0\n    ],\n    blanchedalmond: [\n        255,\n        235,\n        205\n    ],\n    blue: [\n        0,\n        0,\n        255\n    ],\n    blueviolet: [\n        138,\n        43,\n        226\n    ],\n    brown: [\n        165,\n        42,\n        42\n    ],\n    burlywood: [\n        222,\n        184,\n        135\n    ],\n    cadetblue: [\n        95,\n        158,\n        160\n    ],\n    chartreuse: [\n        127,\n        255,\n        0\n    ],\n    chocolate: [\n        210,\n        105,\n        30\n    ],\n    coral: [\n        255,\n        127,\n        80\n    ],\n    cornflowerblue: [\n        100,\n        149,\n        237\n    ],\n    cornsilk: [\n        255,\n        248,\n        220\n    ],\n    crimson: [\n        220,\n        20,\n        60\n    ],\n    cyan: [\n        0,\n        255,\n        255\n    ],\n    darkblue: [\n        0,\n        0,\n        139\n    ],\n    darkcyan: [\n        0,\n        139,\n        139\n    ],\n    darkgoldenrod: [\n        184,\n        132,\n        11\n    ],\n    darkgray: [\n        169,\n        169,\n        169\n    ],\n    darkgreen: [\n        0,\n        100,\n        0\n    ],\n    darkgrey: [\n        169,\n        169,\n        169\n    ],\n    darkkhaki: [\n        189,\n        183,\n        107\n    ],\n    darkmagenta: [\n        139,\n        0,\n        139\n    ],\n    darkolivegreen: [\n        85,\n        107,\n        47\n    ],\n    darkorange: [\n        255,\n        140,\n        0\n    ],\n    darkorchid: [\n        153,\n        50,\n        204\n    ],\n    darkred: [\n        139,\n        0,\n        0\n    ],\n    darksalmon: [\n        233,\n        150,\n        122\n    ],\n    darkseagreen: [\n        143,\n        188,\n        143\n    ],\n    darkslateblue: [\n        72,\n        61,\n        139\n    ],\n    darkslategray: [\n        47,\n        79,\n        79\n    ],\n    darkslategrey: [\n        47,\n        79,\n        79\n    ],\n    darkturquoise: [\n        0,\n        206,\n        209\n    ],\n    darkviolet: [\n        148,\n        0,\n        211\n    ],\n    deeppink: [\n        255,\n        20,\n        147\n    ],\n    deepskyblue: [\n        0,\n        191,\n        255\n    ],\n    dimgray: [\n        105,\n        105,\n        105\n    ],\n    dimgrey: [\n        105,\n        105,\n        105\n    ],\n    dodgerblue: [\n        30,\n        144,\n        255\n    ],\n    firebrick: [\n        178,\n        34,\n        34\n    ],\n    floralwhite: [\n        255,\n        255,\n        240\n    ],\n    forestgreen: [\n        34,\n        139,\n        34\n    ],\n    fuchsia: [\n        255,\n        0,\n        255\n    ],\n    gainsboro: [\n        220,\n        220,\n        220\n    ],\n    ghostwhite: [\n        248,\n        248,\n        255\n    ],\n    gold: [\n        255,\n        215,\n        0\n    ],\n    goldenrod: [\n        218,\n        165,\n        32\n    ],\n    gray: [\n        128,\n        128,\n        128\n    ],\n    green: [\n        0,\n        128,\n        0\n    ],\n    greenyellow: [\n        173,\n        255,\n        47\n    ],\n    grey: [\n        128,\n        128,\n        128\n    ],\n    honeydew: [\n        240,\n        255,\n        240\n    ],\n    hotpink: [\n        255,\n        105,\n        180\n    ],\n    indianred: [\n        205,\n        92,\n        92\n    ],\n    indigo: [\n        75,\n        0,\n        130\n    ],\n    ivory: [\n        255,\n        255,\n        240\n    ],\n    khaki: [\n        240,\n        230,\n        140\n    ],\n    lavender: [\n        230,\n        230,\n        250\n    ],\n    lavenderblush: [\n        255,\n        240,\n        245\n    ],\n    lawngreen: [\n        124,\n        252,\n        0\n    ],\n    lemonchiffon: [\n        255,\n        250,\n        205\n    ],\n    lightblue: [\n        173,\n        216,\n        230\n    ],\n    lightcoral: [\n        240,\n        128,\n        128\n    ],\n    lightcyan: [\n        224,\n        255,\n        255\n    ],\n    lightgoldenrodyellow: [\n        250,\n        250,\n        210\n    ],\n    lightgray: [\n        211,\n        211,\n        211\n    ],\n    lightgreen: [\n        144,\n        238,\n        144\n    ],\n    lightgrey: [\n        211,\n        211,\n        211\n    ],\n    lightpink: [\n        255,\n        182,\n        193\n    ],\n    lightsalmon: [\n        255,\n        160,\n        122\n    ],\n    lightseagreen: [\n        32,\n        178,\n        170\n    ],\n    lightskyblue: [\n        135,\n        206,\n        250\n    ],\n    lightslategray: [\n        119,\n        136,\n        153\n    ],\n    lightslategrey: [\n        119,\n        136,\n        153\n    ],\n    lightsteelblue: [\n        176,\n        196,\n        222\n    ],\n    lightyellow: [\n        255,\n        255,\n        224\n    ],\n    lime: [\n        0,\n        255,\n        0\n    ],\n    limegreen: [\n        50,\n        205,\n        50\n    ],\n    linen: [\n        250,\n        240,\n        230\n    ],\n    magenta: [\n        255,\n        0,\n        255\n    ],\n    maroon: [\n        128,\n        0,\n        0\n    ],\n    mediumaquamarine: [\n        102,\n        205,\n        170\n    ],\n    mediumblue: [\n        0,\n        0,\n        205\n    ],\n    mediumorchid: [\n        186,\n        85,\n        211\n    ],\n    mediumpurple: [\n        147,\n        112,\n        219\n    ],\n    mediumseagreen: [\n        60,\n        179,\n        113\n    ],\n    mediumslateblue: [\n        123,\n        104,\n        238\n    ],\n    mediumspringgreen: [\n        0,\n        250,\n        154\n    ],\n    mediumturquoise: [\n        72,\n        209,\n        204\n    ],\n    mediumvioletred: [\n        199,\n        21,\n        133\n    ],\n    midnightblue: [\n        25,\n        25,\n        112\n    ],\n    mintcream: [\n        245,\n        255,\n        250\n    ],\n    mistyrose: [\n        255,\n        228,\n        225\n    ],\n    moccasin: [\n        255,\n        228,\n        181\n    ],\n    navajowhite: [\n        255,\n        222,\n        173\n    ],\n    navy: [\n        0,\n        0,\n        128\n    ],\n    oldlace: [\n        253,\n        245,\n        230\n    ],\n    olive: [\n        128,\n        128,\n        0\n    ],\n    olivedrab: [\n        107,\n        142,\n        35\n    ],\n    orange: [\n        255,\n        165,\n        0\n    ],\n    orangered: [\n        255,\n        69,\n        0\n    ],\n    orchid: [\n        218,\n        112,\n        214\n    ],\n    palegoldenrod: [\n        238,\n        232,\n        170\n    ],\n    palegreen: [\n        152,\n        251,\n        152\n    ],\n    paleturquoise: [\n        175,\n        238,\n        238\n    ],\n    palevioletred: [\n        219,\n        112,\n        147\n    ],\n    papayawhip: [\n        255,\n        239,\n        213\n    ],\n    peachpuff: [\n        255,\n        218,\n        185\n    ],\n    peru: [\n        205,\n        133,\n        63\n    ],\n    pink: [\n        255,\n        192,\n        203\n    ],\n    plum: [\n        221,\n        160,\n        203\n    ],\n    powderblue: [\n        176,\n        224,\n        230\n    ],\n    purple: [\n        128,\n        0,\n        128\n    ],\n    rebeccapurple: [\n        102,\n        51,\n        153\n    ],\n    red: [\n        255,\n        0,\n        0\n    ],\n    rosybrown: [\n        188,\n        143,\n        143\n    ],\n    royalblue: [\n        65,\n        105,\n        225\n    ],\n    saddlebrown: [\n        139,\n        69,\n        19\n    ],\n    salmon: [\n        250,\n        128,\n        114\n    ],\n    sandybrown: [\n        244,\n        164,\n        96\n    ],\n    seagreen: [\n        46,\n        139,\n        87\n    ],\n    seashell: [\n        255,\n        245,\n        238\n    ],\n    sienna: [\n        160,\n        82,\n        45\n    ],\n    silver: [\n        192,\n        192,\n        192\n    ],\n    skyblue: [\n        135,\n        206,\n        235\n    ],\n    slateblue: [\n        106,\n        90,\n        205\n    ],\n    slategray: [\n        119,\n        128,\n        144\n    ],\n    slategrey: [\n        119,\n        128,\n        144\n    ],\n    snow: [\n        255,\n        255,\n        250\n    ],\n    springgreen: [\n        0,\n        255,\n        127\n    ],\n    steelblue: [\n        70,\n        130,\n        180\n    ],\n    tan: [\n        210,\n        180,\n        140\n    ],\n    teal: [\n        0,\n        128,\n        128\n    ],\n    thistle: [\n        216,\n        191,\n        216\n    ],\n    transparent: [\n        255,\n        255,\n        255,\n        0\n    ],\n    tomato: [\n        255,\n        99,\n        71\n    ],\n    turquoise: [\n        64,\n        224,\n        208\n    ],\n    violet: [\n        238,\n        130,\n        238\n    ],\n    wheat: [\n        245,\n        222,\n        179\n    ],\n    white: [\n        255,\n        255,\n        255\n    ],\n    whitesmoke: [\n        245,\n        245,\n        245\n    ],\n    yellow: [\n        255,\n        255,\n        0\n    ],\n    yellowgreen: [\n        154,\n        205,\n        5\n    ]\n}, $27d6a996859d86c8$var$RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, $27d6a996859d86c8$var$animQueue = [];\nconst $27d6a996859d86c8$var$req = typeof requestAnimationFrame !== \"undefined\" && requestAnimationFrame || function(f) {\n    setTimeout(f, 60);\n};\n$27d6a996859d86c8$exports.Util = {\n    _isElement (obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction (obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject (obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray (obj) {\n        return Object.prototype.toString.call(obj) === $27d6a996859d86c8$var$OBJECT_ARRAY;\n    },\n    _isNumber (obj) {\n        return Object.prototype.toString.call(obj) === $27d6a996859d86c8$var$OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n    },\n    _isString (obj) {\n        return Object.prototype.toString.call(obj) === $27d6a996859d86c8$var$OBJECT_STRING;\n    },\n    _isBoolean (obj) {\n        return Object.prototype.toString.call(obj) === $27d6a996859d86c8$var$OBJECT_BOOLEAN;\n    },\n    isObject (val) {\n        return val instanceof Object;\n    },\n    isValidSelector (selector) {\n        if (typeof selector !== \"string\") return false;\n        var firstChar = selector[0];\n        return firstChar === \"#\" || firstChar === \".\" || firstChar === firstChar.toUpperCase();\n    },\n    _sign (number) {\n        if (number === 0) return 1;\n        if (number > 0) return 1;\n        else return -1;\n    },\n    requestAnimFrame (callback) {\n        $27d6a996859d86c8$var$animQueue.push(callback);\n        if ($27d6a996859d86c8$var$animQueue.length === 1) $27d6a996859d86c8$var$req(function() {\n            const queue = $27d6a996859d86c8$var$animQueue;\n            $27d6a996859d86c8$var$animQueue = [];\n            queue.forEach(function(cb) {\n                cb();\n            });\n        });\n    },\n    createCanvasElement () {\n        var canvas = document.createElement(\"canvas\");\n        try {\n            canvas.style = canvas.style || {};\n        } catch (e) {}\n        return canvas;\n    },\n    createImageElement () {\n        return document.createElement(\"img\");\n    },\n    _isInDocument (el) {\n        while(el = el.parentNode){\n            if (el == document) return true;\n        }\n        return false;\n    },\n    _urlToImage (url, callback) {\n        var imageObj = $27d6a996859d86c8$exports.Util.createImageElement();\n        imageObj.onload = function() {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex (r, g, b) {\n        return (16777216 + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb (hex) {\n        hex = hex.replace($27d6a996859d86c8$var$HASH, $27d6a996859d86c8$var$EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: bigint >> 16 & 255,\n            g: bigint >> 8 & 255,\n            b: bigint & 255\n        };\n    },\n    getRandomColor () {\n        var randColor = (Math.random() * 0xffffff << 0).toString(16);\n        while(randColor.length < 6)randColor = $27d6a996859d86c8$var$ZERO + randColor;\n        return $27d6a996859d86c8$var$HASH + randColor;\n    },\n    getRGB (color) {\n        var rgb;\n        if (color in $27d6a996859d86c8$var$COLORS) {\n            rgb = $27d6a996859d86c8$var$COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2]\n            };\n        } else if (color[0] === $27d6a996859d86c8$var$HASH) return this._hexToRgb(color.substring(1));\n        else if (color.substr(0, 4) === $27d6a996859d86c8$var$RGB_PAREN) {\n            rgb = $27d6a996859d86c8$var$RGB_REGEX.exec(color.replace(/ /g, \"\"));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10)\n            };\n        } else return {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n    },\n    colorToRGBA (str) {\n        str = str || \"black\";\n        return $27d6a996859d86c8$exports.Util._namedColorToRBA(str) || $27d6a996859d86c8$exports.Util._hex3ColorToRGBA(str) || $27d6a996859d86c8$exports.Util._hex4ColorToRGBA(str) || $27d6a996859d86c8$exports.Util._hex6ColorToRGBA(str) || $27d6a996859d86c8$exports.Util._hex8ColorToRGBA(str) || $27d6a996859d86c8$exports.Util._rgbColorToRGBA(str) || $27d6a996859d86c8$exports.Util._rgbaColorToRGBA(str) || $27d6a996859d86c8$exports.Util._hslColorToRGBA(str);\n    },\n    _namedColorToRBA (str) {\n        var c = $27d6a996859d86c8$var$COLORS[str.toLowerCase()];\n        if (!c) return null;\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1\n        };\n    },\n    _rgbColorToRGBA (str) {\n        if (str.indexOf(\"rgb(\") === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1\n            };\n        }\n    },\n    _rgbaColorToRGBA (str) {\n        if (str.indexOf(\"rgba(\") === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index)=>{\n                if (n.slice(-1) === \"%\") return index === 3 ? parseInt(n) / 100 : parseInt(n) / 100 * 255;\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3]\n            };\n        }\n    },\n    _hex8ColorToRGBA (str) {\n        if (str[0] === \"#\" && str.length === 9) return {\n            r: parseInt(str.slice(1, 3), 16),\n            g: parseInt(str.slice(3, 5), 16),\n            b: parseInt(str.slice(5, 7), 16),\n            a: parseInt(str.slice(7, 9), 16) / 0xff\n        };\n    },\n    _hex6ColorToRGBA (str) {\n        if (str[0] === \"#\" && str.length === 7) return {\n            r: parseInt(str.slice(1, 3), 16),\n            g: parseInt(str.slice(3, 5), 16),\n            b: parseInt(str.slice(5, 7), 16),\n            a: 1\n        };\n    },\n    _hex4ColorToRGBA (str) {\n        if (str[0] === \"#\" && str.length === 5) return {\n            r: parseInt(str[1] + str[1], 16),\n            g: parseInt(str[2] + str[2], 16),\n            b: parseInt(str[3] + str[3], 16),\n            a: parseInt(str[4] + str[4], 16) / 0xff\n        };\n    },\n    _hex3ColorToRGBA (str) {\n        if (str[0] === \"#\" && str.length === 4) return {\n            r: parseInt(str[1] + str[1], 16),\n            g: parseInt(str[2] + str[2], 16),\n            b: parseInt(str[3] + str[3], 16),\n            a: 1\n        };\n    },\n    _hslColorToRGBA (str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1\n                };\n            }\n            if (l < 0.5) t2 = l * (1 + s);\n            else t2 = l + s - l * s;\n            const t1 = 2 * l - t2;\n            const rgb = [\n                0,\n                0,\n                0\n            ];\n            for(let i = 0; i < 3; i++){\n                t3 = h + 1 / 3 * -(i - 1);\n                if (t3 < 0) t3++;\n                if (t3 > 1) t3--;\n                if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;\n                else if (2 * t3 < 1) val = t2;\n                else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                else val = t1;\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1\n            };\n        }\n    },\n    haveIntersection (r1, r2) {\n        return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n    },\n    cloneObject (obj) {\n        var retObj = {};\n        for(var key in obj){\n            if (this._isPlainObject(obj[key])) retObj[key] = this.cloneObject(obj[key]);\n            else if (this._isArray(obj[key])) retObj[key] = this.cloneArray(obj[key]);\n            else retObj[key] = obj[key];\n        }\n        return retObj;\n    },\n    cloneArray (arr) {\n        return arr.slice(0);\n    },\n    degToRad (deg) {\n        return deg * $27d6a996859d86c8$var$PI_OVER_DEG180;\n    },\n    radToDeg (rad) {\n        return rad * $27d6a996859d86c8$var$DEG180_OVER_PI;\n    },\n    _degToRad (deg) {\n        $27d6a996859d86c8$exports.Util.warn(\"Util._degToRad is removed. Please use public Util.degToRad instead.\");\n        return $27d6a996859d86c8$exports.Util.degToRad(deg);\n    },\n    _radToDeg (rad) {\n        $27d6a996859d86c8$exports.Util.warn(\"Util._radToDeg is removed. Please use public Util.radToDeg instead.\");\n        return $27d6a996859d86c8$exports.Util.radToDeg(rad);\n    },\n    _getRotation (radians) {\n        return $3c4258a611a19cfb$exports.Konva.angleDeg ? $27d6a996859d86c8$exports.Util.radToDeg(radians) : radians;\n    },\n    _capitalize (str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw (str) {\n        throw new Error($27d6a996859d86c8$var$KONVA_ERROR + str);\n    },\n    error (str) {\n        console.error($27d6a996859d86c8$var$KONVA_ERROR + str);\n    },\n    warn (str) {\n        if (!$3c4258a611a19cfb$exports.Konva.showWarnings) return;\n        console.warn($27d6a996859d86c8$var$KONVA_WARNING + str);\n    },\n    each (obj, func) {\n        for(var key in obj)func(key, obj[key]);\n    },\n    _inRange (val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment (x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        } else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            } else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            } else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [\n            x,\n            y,\n            dist\n        ];\n    },\n    _getProjectionToLine (pt, line, isClosed) {\n        var pc = $27d6a996859d86c8$exports.Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function(p1, i) {\n            if (!isClosed && i === line.length - 1) return;\n            var p2 = line[(i + 1) % line.length];\n            var proj = $27d6a996859d86c8$exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween (startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for(n = 0; n < startArray.length; n += 2)start.push({\n            x: startArray[n],\n            y: startArray[n + 1]\n        });\n        for(n = 0; n < endArray.length; n += 2)end.push({\n            x: endArray[n],\n            y: endArray[n + 1]\n        });\n        var newStart = [];\n        end.forEach(function(point) {\n            var pr = $27d6a996859d86c8$exports.Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify (obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for(var key in obj){\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == \"object\")) continue;\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval || $27d6a996859d86c8$exports.Util._isElement(obj[key])) {\n                if (desc.configurable) delete obj[key];\n                else return null;\n            } else if ($27d6a996859d86c8$exports.Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) delete obj[key];\n                else return null;\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign (target, source) {\n        for(var key in source)target[key] = source[key];\n        return target;\n    },\n    _getFirstPointerId (evt) {\n        if (!evt.touches) return evt.pointerId || 999;\n        else return evt.changedTouches[0].identifier;\n    },\n    releaseCanvas (...canvases) {\n        if (!$3c4258a611a19cfb$exports.Konva.releaseCanvasOnDestroy) return;\n        canvases.forEach((c)=>{\n            c.width = 0;\n            c.height = 0;\n        });\n    },\n    drawRoundedRectPath (context, width, height, cornerRadius) {\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === \"number\") topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.moveTo(topLeft, 0);\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    }\n};\n\n\nvar $03fc3abdfa907317$exports = {};\n\"use strict\";\nObject.defineProperty($03fc3abdfa907317$exports, \"__esModule\", {\n    value: true\n});\n$03fc3abdfa907317$exports.Node = void 0;\n\nvar $9a603088dcd0ec15$exports = {};\n\"use strict\";\nObject.defineProperty($9a603088dcd0ec15$exports, \"__esModule\", {\n    value: true\n});\n$9a603088dcd0ec15$exports.Factory = void 0;\n\nvar $44f336646fbbdff8$exports = {};\n\"use strict\";\nObject.defineProperty($44f336646fbbdff8$exports, \"__esModule\", {\n    value: true\n});\n$44f336646fbbdff8$exports.getComponentValidator = $44f336646fbbdff8$exports.getBooleanValidator = $44f336646fbbdff8$exports.getNumberArrayValidator = $44f336646fbbdff8$exports.getFunctionValidator = $44f336646fbbdff8$exports.getStringOrGradientValidator = $44f336646fbbdff8$exports.getStringValidator = $44f336646fbbdff8$exports.getNumberOrAutoValidator = $44f336646fbbdff8$exports.getNumberOrArrayOfNumbersValidator = $44f336646fbbdff8$exports.getNumberValidator = $44f336646fbbdff8$exports.alphaComponent = $44f336646fbbdff8$exports.RGBComponent = void 0;\n\n\nfunction $44f336646fbbdff8$var$_formatValue(val) {\n    if ($27d6a996859d86c8$exports.Util._isString(val)) return '\"' + val + '\"';\n    if (Object.prototype.toString.call(val) === \"[object Number]\") return val;\n    if ($27d6a996859d86c8$exports.Util._isBoolean(val)) return val;\n    return Object.prototype.toString.call(val);\n}\nfunction $44f336646fbbdff8$var$RGBComponent(val) {\n    if (val > 255) return 255;\n    else if (val < 0) return 0;\n    return Math.round(val);\n}\n$44f336646fbbdff8$exports.RGBComponent = $44f336646fbbdff8$var$RGBComponent;\nfunction $44f336646fbbdff8$var$alphaComponent(val) {\n    if (val > 1) return 1;\n    else if (val < 0.0001) return 0.0001;\n    return val;\n}\n$44f336646fbbdff8$exports.alphaComponent = $44f336646fbbdff8$var$alphaComponent;\nfunction $44f336646fbbdff8$var$getNumberValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        if (!$27d6a996859d86c8$exports.Util._isNumber(val)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getNumberValidator = $44f336646fbbdff8$var$getNumberValidator;\nfunction $44f336646fbbdff8$var$getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        let isNumber = $27d6a996859d86c8$exports.Util._isNumber(val);\n        let isValidArray = $27d6a996859d86c8$exports.Util._isArray(val) && val.length == noOfElements;\n        if (!isNumber && !isValidArray) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + \")\");\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getNumberOrArrayOfNumbersValidator = $44f336646fbbdff8$var$getNumberOrArrayOfNumbersValidator;\nfunction $44f336646fbbdff8$var$getNumberOrAutoValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        var isNumber = $27d6a996859d86c8$exports.Util._isNumber(val);\n        var isAuto = val === \"auto\";\n        if (!(isNumber || isAuto)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getNumberOrAutoValidator = $44f336646fbbdff8$var$getNumberOrAutoValidator;\nfunction $44f336646fbbdff8$var$getStringValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        if (!$27d6a996859d86c8$exports.Util._isString(val)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getStringValidator = $44f336646fbbdff8$var$getStringValidator;\nfunction $44f336646fbbdff8$var$getStringOrGradientValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        const isString = $27d6a996859d86c8$exports.Util._isString(val);\n        const isGradient = Object.prototype.toString.call(val) === \"[object CanvasGradient]\" || val && val.addColorStop;\n        if (!(isString || isGradient)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getStringOrGradientValidator = $44f336646fbbdff8$var$getStringOrGradientValidator;\nfunction $44f336646fbbdff8$var$getFunctionValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        if (!$27d6a996859d86c8$exports.Util._isFunction(val)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getFunctionValidator = $44f336646fbbdff8$var$getFunctionValidator;\nfunction $44f336646fbbdff8$var$getNumberArrayValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n        if (TypedArray && val instanceof TypedArray) return val;\n        if (!$27d6a996859d86c8$exports.Util._isArray(val)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n        else val.forEach(function(item) {\n            if (!$27d6a996859d86c8$exports.Util._isNumber(item)) $27d6a996859d86c8$exports.Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + \". Make sure that all elements are numbers.\");\n        });\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getNumberArrayValidator = $44f336646fbbdff8$var$getNumberArrayValidator;\nfunction $44f336646fbbdff8$var$getBooleanValidator() {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        var isBool = val === true || val === false;\n        if (!isBool) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getBooleanValidator = $44f336646fbbdff8$var$getBooleanValidator;\nfunction $44f336646fbbdff8$var$getComponentValidator(components) {\n    if ($3c4258a611a19cfb$exports.Konva.isUnminified) return function(val, attr) {\n        if (val === undefined || val === null) return val;\n        if (!$27d6a996859d86c8$exports.Util.isObject(val)) $27d6a996859d86c8$exports.Util.warn($44f336646fbbdff8$var$_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n        return val;\n    };\n}\n$44f336646fbbdff8$exports.getComponentValidator = $44f336646fbbdff8$var$getComponentValidator;\n\n\nvar $9a603088dcd0ec15$var$GET = \"get\", $9a603088dcd0ec15$var$SET = \"set\";\n$9a603088dcd0ec15$exports.Factory = {\n    addGetterSetter (constructor, attr, def, validator, after) {\n        $9a603088dcd0ec15$exports.Factory.addGetter(constructor, attr, def);\n        $9a603088dcd0ec15$exports.Factory.addSetter(constructor, attr, validator, after);\n        $9a603088dcd0ec15$exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter (constructor, attr, def) {\n        var method = $9a603088dcd0ec15$var$GET + $27d6a996859d86c8$exports.Util._capitalize(attr);\n        constructor.prototype[method] = constructor.prototype[method] || function() {\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n    },\n    addSetter (constructor, attr, validator, after) {\n        var method = $9a603088dcd0ec15$var$SET + $27d6a996859d86c8$exports.Util._capitalize(attr);\n        if (!constructor.prototype[method]) $9a603088dcd0ec15$exports.Factory.overWriteSetter(constructor, attr, validator, after);\n    },\n    overWriteSetter (constructor, attr, validator, after) {\n        var method = $9a603088dcd0ec15$var$SET + $27d6a996859d86c8$exports.Util._capitalize(attr);\n        constructor.prototype[method] = function(val) {\n            if (validator && val !== undefined && val !== null) val = validator.call(this, val, attr);\n            this._setAttr(attr, val);\n            if (after) after.call(this);\n            return this;\n        };\n    },\n    addComponentsGetterSetter (constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = $27d6a996859d86c8$exports.Util._capitalize, getter = $9a603088dcd0ec15$var$GET + capitalize(attr), setter = $9a603088dcd0ec15$var$SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function() {\n            var ret = {};\n            for(n = 0; n < len; n++){\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = (0, $44f336646fbbdff8$exports.getComponentValidator)(components);\n        constructor.prototype[setter] = function(val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) val = validator.call(this, val);\n            if (basicValidator) basicValidator.call(this, val, attr);\n            for(key in val){\n                if (!val.hasOwnProperty(key)) continue;\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) components.forEach((component)=>{\n                this._setAttr(attr + capitalize(component), undefined);\n            });\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) after.call(this);\n            return this;\n        };\n        $9a603088dcd0ec15$exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter (constructor, attr) {\n        var capitalizedAttr = $27d6a996859d86c8$exports.Util._capitalize(attr), setter = $9a603088dcd0ec15$var$SET + capitalizedAttr, getter = $9a603088dcd0ec15$var$GET + capitalizedAttr;\n        constructor.prototype[attr] = function() {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter (constructor, attr, def, validator) {\n        $27d6a996859d86c8$exports.Util.error(\"Adding deprecated \" + attr);\n        var method = $9a603088dcd0ec15$var$GET + $27d6a996859d86c8$exports.Util._capitalize(attr);\n        var message = attr + \" property is deprecated and will be removed soon. Look at Konva change log for more information.\";\n        constructor.prototype[method] = function() {\n            $27d6a996859d86c8$exports.Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        $9a603088dcd0ec15$exports.Factory.addSetter(constructor, attr, validator, function() {\n            $27d6a996859d86c8$exports.Util.error(message);\n        });\n        $9a603088dcd0ec15$exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat (constructor, methods) {\n        $27d6a996859d86c8$exports.Util.each(methods, function(oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = $9a603088dcd0ec15$var$GET + $27d6a996859d86c8$exports.Util._capitalize(oldMethodName);\n            var oldSetter = $9a603088dcd0ec15$var$SET + $27d6a996859d86c8$exports.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                $27d6a996859d86c8$exports.Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter () {\n        this._filterUpToDate = false;\n    }\n};\n\n\nvar $648854cc6bfe0991$exports = {};\n\"use strict\";\nObject.defineProperty($648854cc6bfe0991$exports, \"__esModule\", {\n    value: true\n});\n$648854cc6bfe0991$exports.HitCanvas = $648854cc6bfe0991$exports.SceneCanvas = $648854cc6bfe0991$exports.Canvas = void 0;\n\nvar $4dca1ff09e7fd160$exports = {};\n\"use strict\";\nObject.defineProperty($4dca1ff09e7fd160$exports, \"__esModule\", {\n    value: true\n});\n$4dca1ff09e7fd160$exports.HitContext = $4dca1ff09e7fd160$exports.SceneContext = $4dca1ff09e7fd160$exports.Context = void 0;\n\n\nfunction $4dca1ff09e7fd160$var$simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = $27d6a996859d86c8$exports.Util, n, val;\n    for(n = 0; n < len; n++){\n        val = arr[n];\n        if (util._isNumber(val)) val = Math.round(val * 1000) / 1000;\n        else if (!util._isString(val)) val = val + \"\";\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar $4dca1ff09e7fd160$var$COMMA = \",\", $4dca1ff09e7fd160$var$OPEN_PAREN = \"(\", $4dca1ff09e7fd160$var$CLOSE_PAREN = \")\", $4dca1ff09e7fd160$var$OPEN_PAREN_BRACKET = \"([\", $4dca1ff09e7fd160$var$CLOSE_BRACKET_PAREN = \"])\", $4dca1ff09e7fd160$var$SEMICOLON = \";\", $4dca1ff09e7fd160$var$DOUBLE_PAREN = \"()\", $4dca1ff09e7fd160$var$EQUALS = \"=\", $4dca1ff09e7fd160$var$CONTEXT_METHODS = [\n    \"arc\",\n    \"arcTo\",\n    \"beginPath\",\n    \"bezierCurveTo\",\n    \"clearRect\",\n    \"clip\",\n    \"closePath\",\n    \"createLinearGradient\",\n    \"createPattern\",\n    \"createRadialGradient\",\n    \"drawImage\",\n    \"ellipse\",\n    \"fill\",\n    \"fillText\",\n    \"getImageData\",\n    \"createImageData\",\n    \"lineTo\",\n    \"moveTo\",\n    \"putImageData\",\n    \"quadraticCurveTo\",\n    \"rect\",\n    \"restore\",\n    \"rotate\",\n    \"save\",\n    \"scale\",\n    \"setLineDash\",\n    \"setTransform\",\n    \"stroke\",\n    \"strokeText\",\n    \"transform\",\n    \"translate\"\n];\nvar $4dca1ff09e7fd160$var$CONTEXT_PROPERTIES = [\n    \"fillStyle\",\n    \"strokeStyle\",\n    \"shadowColor\",\n    \"shadowBlur\",\n    \"shadowOffsetX\",\n    \"shadowOffsetY\",\n    \"lineCap\",\n    \"lineDashOffset\",\n    \"lineJoin\",\n    \"lineWidth\",\n    \"miterLimit\",\n    \"font\",\n    \"textAlign\",\n    \"textBaseline\",\n    \"globalAlpha\",\n    \"globalCompositeOperation\",\n    \"imageSmoothingEnabled\"\n];\nconst $4dca1ff09e7fd160$var$traceArrMax = 100;\nclass $4dca1ff09e7fd160$var$Context {\n    constructor(canvas){\n        this.canvas = canvas;\n        if ($3c4258a611a19cfb$exports.Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) this._fill(shape);\n    }\n    _fill(shape) {}\n    strokeShape(shape) {\n        if (shape.hasStroke()) this._stroke(shape);\n    }\n    _stroke(shape) {}\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        } else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = \"\", n, trace, method, args;\n        for(n = 0; n < len; n++){\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) str += $4dca1ff09e7fd160$var$DOUBLE_PAREN;\n                else if ($27d6a996859d86c8$exports.Util._isArray(args[0])) str += $4dca1ff09e7fd160$var$OPEN_PAREN_BRACKET + args.join($4dca1ff09e7fd160$var$COMMA) + $4dca1ff09e7fd160$var$CLOSE_BRACKET_PAREN;\n                else {\n                    if (rounded) args = args.map((a)=>typeof a === \"number\" ? Math.floor(a) : a);\n                    str += $4dca1ff09e7fd160$var$OPEN_PAREN + args.join($4dca1ff09e7fd160$var$COMMA) + $4dca1ff09e7fd160$var$CLOSE_PAREN;\n                }\n            } else {\n                str += trace.property;\n                if (!relaxed) str += $4dca1ff09e7fd160$var$EQUALS + trace.val;\n            }\n            str += $4dca1ff09e7fd160$var$SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= $4dca1ff09e7fd160$var$traceArrMax) traceArr.shift();\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        else this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) this.setAttr(\"lineCap\", lineCap);\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) this.setAttr(\"globalAlpha\", absOpacity);\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) this.setAttr(\"lineJoin\", lineJoin);\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip(...args) {\n        this._context.clip.apply(this._context, args);\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) return this._context.createImageData(a0, a1);\n        else if (a.length === 1) return this._context.createImageData(a0);\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) _context.drawImage(a0, a1, a2);\n        else if (a.length === 5) _context.drawImage(a0, a1, a2, a3, a4);\n        else if (a.length === 9) _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) return this._context.isPointInPath(path, x, y, fillRule);\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(...args) {\n        this._context.fill.apply(this._context, args);\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) this._context.fillText(text, x, y, maxWidth);\n        else this._context.fillText(text, x, y);\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) this._context.setLineDash(a0);\n        else if (\"mozDash\" in this._context) this._context[\"mozDash\"] = a0;\n        else if (\"webkitLineDash\" in this._context) this._context[\"webkitLineDash\"] = a0;\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) this._context.stroke(path2d);\n        else this._context.stroke();\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = $4dca1ff09e7fd160$var$CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function(methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function() {\n                args = $4dca1ff09e7fd160$var$simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args\n                });\n                return ret;\n            };\n        };\n        for(n = 0; n < len; n++)func($4dca1ff09e7fd160$var$CONTEXT_METHODS[n]);\n        that.setAttr = function() {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === \"shadowOffsetX\" || prop === \"shadowOffsetY\" || prop === \"shadowBlur\") val = val / this.canvas.getPixelRatio();\n            that._trace({\n                property: prop,\n                val: val\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === \"source-over\";\n        if (!def) this.setAttr(\"globalCompositeOperation\", op);\n    }\n}\n$4dca1ff09e7fd160$exports.Context = $4dca1ff09e7fd160$var$Context;\n$4dca1ff09e7fd160$var$CONTEXT_PROPERTIES.forEach(function(prop) {\n    Object.defineProperty($4dca1ff09e7fd160$var$Context.prototype, prop, {\n        get () {\n            return this._context[prop];\n        },\n        set (val) {\n            this._context[prop] = val;\n        }\n    });\n});\nclass $4dca1ff09e7fd160$var$SceneContext extends $4dca1ff09e7fd160$var$Context {\n    constructor(canvas, { willReadFrequently: willReadFrequently = false  } = {}){\n        super(canvas);\n        this._context = canvas._canvas.getContext(\"2d\", {\n            willReadFrequently: willReadFrequently\n        });\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr(\"fillStyle\", fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr(\"fillStyle\", shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr(\"fillStyle\", grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr(\"fillStyle\", grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === \"color\") {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === \"pattern\") {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === \"linear-gradient\") {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === \"radial-gradient\") {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) this._fillColor(shape);\n        else if (hasPattern) this._fillPattern(shape);\n        else if (hasLinearGradient) this._fillLinearGradient(shape);\n        else if (hasRadialGradient) this._fillRadialGradient(shape);\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for(var n = 0; n < colorStops.length; n += 2)grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            this.setAttr(\"strokeStyle\", grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr(\"lineDashOffset\", shape.dashOffset());\n            }\n            this.setAttr(\"lineWidth\", shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) this.setAttr(\"shadowColor\", \"rgba(0,0,0,0)\");\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) this._strokeLinearGradient(shape);\n            else this.setAttr(\"strokeStyle\", shape.stroke());\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) this.restore();\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : \"black\", blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr(\"shadowColor\", color);\n        this.setAttr(\"shadowBlur\", blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr(\"shadowOffsetX\", offset.x * scaleX);\n        this.setAttr(\"shadowOffsetY\", offset.y * scaleY);\n    }\n}\n$4dca1ff09e7fd160$exports.SceneContext = $4dca1ff09e7fd160$var$SceneContext;\nclass $4dca1ff09e7fd160$var$HitContext extends $4dca1ff09e7fd160$var$Context {\n    constructor(canvas){\n        super(canvas);\n        this._context = canvas._canvas.getContext(\"2d\", {\n            willReadFrequently: true\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr(\"fillStyle\", shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) this._stroke(shape);\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === \"auto\" ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr(\"lineWidth\", strokeWidth);\n            this.setAttr(\"strokeStyle\", shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) this.restore();\n        }\n    }\n}\n$4dca1ff09e7fd160$exports.HitContext = $4dca1ff09e7fd160$var$HitContext;\n\n\n\n\n\nvar $648854cc6bfe0991$var$_pixelRatio;\nfunction $648854cc6bfe0991$var$getDevicePixelRatio() {\n    if ($648854cc6bfe0991$var$_pixelRatio) return $648854cc6bfe0991$var$_pixelRatio;\n    var canvas = $27d6a996859d86c8$exports.Util.createCanvasElement();\n    var context = canvas.getContext(\"2d\");\n    $648854cc6bfe0991$var$_pixelRatio = function() {\n        var devicePixelRatio = $3c4258a611a19cfb$exports.Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n        return devicePixelRatio / backingStoreRatio;\n    }();\n    $27d6a996859d86c8$exports.Util.releaseCanvas(canvas);\n    return $648854cc6bfe0991$var$_pixelRatio;\n}\nclass $648854cc6bfe0991$var$Canvas {\n    constructor(config){\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || $3c4258a611a19cfb$exports.Konva.pixelRatio || $648854cc6bfe0991$var$getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = $27d6a996859d86c8$exports.Util.createCanvasElement();\n        this._canvas.style.padding = \"0\";\n        this._canvas.style.margin = \"0\";\n        this._canvas.style.border = \"0\";\n        this._canvas.style.background = \"transparent\";\n        this._canvas.style.position = \"absolute\";\n        this._canvas.style.top = \"0\";\n        this._canvas.style.left = \"0\";\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + \"px\";\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + \"px\";\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        } catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            } catch (err) {\n                $27d6a996859d86c8$exports.Util.error(\"Unable to get data URL. \" + err.message + \" For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.\");\n                return \"\";\n            }\n        }\n    }\n}\n$648854cc6bfe0991$exports.Canvas = $648854cc6bfe0991$var$Canvas;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($648854cc6bfe0991$var$Canvas, \"pixelRatio\", undefined, (0, $44f336646fbbdff8$exports.getNumberValidator)());\nclass $648854cc6bfe0991$var$SceneCanvas extends $648854cc6bfe0991$var$Canvas {\n    constructor(config = {\n        width: 0,\n        height: 0,\n        willReadFrequently: false\n    }){\n        super(config);\n        this.context = new $4dca1ff09e7fd160$exports.SceneContext(this, {\n            willReadFrequently: config.willReadFrequently\n        });\n        this.setSize(config.width, config.height);\n    }\n}\n$648854cc6bfe0991$exports.SceneCanvas = $648854cc6bfe0991$var$SceneCanvas;\nclass $648854cc6bfe0991$var$HitCanvas extends $648854cc6bfe0991$var$Canvas {\n    constructor(config = {\n        width: 0,\n        height: 0\n    }){\n        super(config);\n        this.hitCanvas = true;\n        this.context = new $4dca1ff09e7fd160$exports.HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n$648854cc6bfe0991$exports.HitCanvas = $648854cc6bfe0991$var$HitCanvas;\n\n\n\nvar $ab7119121af4a2ff$exports = {};\n\"use strict\";\nObject.defineProperty($ab7119121af4a2ff$exports, \"__esModule\", {\n    value: true\n});\n$ab7119121af4a2ff$exports.DD = void 0;\n\n\n$ab7119121af4a2ff$exports.DD = {\n    get isDragging () {\n        var flag = false;\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem)=>{\n            if (elem.dragStatus === \"dragging\") flag = true;\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node () {\n        var node;\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem)=>{\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag (evt) {\n        const nodesToFireEvents = [];\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem, key)=>{\n            const { node: node  } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) elem.pointerId = $27d6a996859d86c8$exports.Util._getFirstPointerId(evt);\n            const pos = stage._changedPointerPositions.find((pos)=>pos.id === elem.pointerId);\n            if (!pos) return;\n            if (elem.dragStatus !== \"dragging\") {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) return;\n                node.startDrag({\n                    evt: evt\n                });\n                if (!node.isDragging()) return;\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node)=>{\n            node.fire(\"dragmove\", {\n                type: \"dragmove\",\n                target: node,\n                evt: evt\n            }, true);\n        });\n    },\n    _endDragBefore (evt) {\n        const drawNodes = [];\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem)=>{\n            const { node: node  } = elem;\n            const stage = node.getStage();\n            if (evt) stage.setPointersPositions(evt);\n            const pos = stage._changedPointerPositions.find((pos)=>pos.id === elem.pointerId);\n            if (!pos) return;\n            if (elem.dragStatus === \"dragging\" || elem.dragStatus === \"stopped\") {\n                $ab7119121af4a2ff$exports.DD.justDragged = true;\n                $3c4258a611a19cfb$exports.Konva._mouseListenClick = false;\n                $3c4258a611a19cfb$exports.Konva._touchListenClick = false;\n                $3c4258a611a19cfb$exports.Konva._pointerListenClick = false;\n                elem.dragStatus = \"stopped\";\n            }\n            const drawNode = elem.node.getLayer() || elem.node instanceof $3c4258a611a19cfb$exports.Konva[\"Stage\"] && elem.node;\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) drawNodes.push(drawNode);\n        });\n        drawNodes.forEach((drawNode)=>{\n            drawNode.draw();\n        });\n    },\n    _endDragAfter (evt) {\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem, key)=>{\n            if (elem.dragStatus === \"stopped\") elem.node.fire(\"dragend\", {\n                type: \"dragend\",\n                target: elem.node,\n                evt: evt\n            }, true);\n            if (elem.dragStatus !== \"dragging\") $ab7119121af4a2ff$exports.DD._dragElements.delete(key);\n        });\n    }\n};\nif ($3c4258a611a19cfb$exports.Konva.isBrowser) {\n    window.addEventListener(\"mouseup\", $ab7119121af4a2ff$exports.DD._endDragBefore, true);\n    window.addEventListener(\"touchend\", $ab7119121af4a2ff$exports.DD._endDragBefore, true);\n    window.addEventListener(\"mousemove\", $ab7119121af4a2ff$exports.DD._drag);\n    window.addEventListener(\"touchmove\", $ab7119121af4a2ff$exports.DD._drag);\n    window.addEventListener(\"mouseup\", $ab7119121af4a2ff$exports.DD._endDragAfter, false);\n    window.addEventListener(\"touchend\", $ab7119121af4a2ff$exports.DD._endDragAfter, false);\n}\n\n\n\nvar $03fc3abdfa907317$var$ABSOLUTE_OPACITY = \"absoluteOpacity\", $03fc3abdfa907317$var$ALL_LISTENERS = \"allEventListeners\", $03fc3abdfa907317$var$ABSOLUTE_TRANSFORM = \"absoluteTransform\", $03fc3abdfa907317$var$ABSOLUTE_SCALE = \"absoluteScale\", $03fc3abdfa907317$var$CANVAS = \"canvas\", $03fc3abdfa907317$var$CHANGE = \"Change\", $03fc3abdfa907317$var$CHILDREN = \"children\", $03fc3abdfa907317$var$KONVA = \"konva\", $03fc3abdfa907317$var$LISTENING = \"listening\", $03fc3abdfa907317$var$MOUSEENTER = \"mouseenter\", $03fc3abdfa907317$var$MOUSELEAVE = \"mouseleave\", $03fc3abdfa907317$var$NAME = \"name\", $03fc3abdfa907317$var$SET = \"set\", $03fc3abdfa907317$var$SHAPE = \"Shape\", $03fc3abdfa907317$var$SPACE = \" \", $03fc3abdfa907317$var$STAGE = \"stage\", $03fc3abdfa907317$var$TRANSFORM = \"transform\", $03fc3abdfa907317$var$UPPER_STAGE = \"Stage\", $03fc3abdfa907317$var$VISIBLE = \"visible\", $03fc3abdfa907317$var$TRANSFORM_CHANGE_STR = [\n    \"xChange.konva\",\n    \"yChange.konva\",\n    \"scaleXChange.konva\",\n    \"scaleYChange.konva\",\n    \"skewXChange.konva\",\n    \"skewYChange.konva\",\n    \"rotationChange.konva\",\n    \"offsetXChange.konva\",\n    \"offsetYChange.konva\",\n    \"transformsEnabledChange.konva\"\n].join($03fc3abdfa907317$var$SPACE);\nlet $03fc3abdfa907317$var$idCounter = 1;\nclass $03fc3abdfa907317$var$Node {\n    constructor(config){\n        this._id = $03fc3abdfa907317$var$idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === $03fc3abdfa907317$var$TRANSFORM || attr === $03fc3abdfa907317$var$ABSOLUTE_TRANSFORM) && this._cache.get(attr)) this._cache.get(attr).dirty = true;\n        else if (attr) this._cache.delete(attr);\n        else this._cache.clear();\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === $03fc3abdfa907317$var$TRANSFORM || attr === $03fc3abdfa907317$var$ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || isTransform && cache.dirty === true;\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep)=>dep + \"Change.konva\").join($03fc3abdfa907317$var$SPACE);\n            this.on(depsString, ()=>{\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get($03fc3abdfa907317$var$CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === $03fc3abdfa907317$var$ABSOLUTE_TRANSFORM) this.fire(\"absoluteTransformChange\");\n    }\n    clearCache() {\n        if (this._cache.has($03fc3abdfa907317$var$CANVAS)) {\n            const { scene: scene , filter: filter , hit: hit  } = this._cache.get($03fc3abdfa907317$var$CANVAS);\n            $27d6a996859d86c8$exports.Util.releaseCanvas(scene, filter, hit);\n            this._cache.delete($03fc3abdfa907317$var$CANVAS);\n        }\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) rect = this.getClientRect({\n            skipTransform: true,\n            relativeTo: this.getParent()\n        });\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            $27d6a996859d86c8$exports.Util.error(\"Can not cache the node. Width or height of the node equals 0. Caching is skipped.\");\n            return;\n        }\n        width += offset * 2 + 1;\n        height += offset * 2 + 1;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new $648854cc6bfe0991$exports.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height\n        }), cachedFilterCanvas = new $648854cc6bfe0991$exports.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n            willReadFrequently: true\n        }), cachedHitCanvas = new $648854cc6bfe0991$exports.HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete($03fc3abdfa907317$var$CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr(\"strokeStyle\", \"red\");\n            sceneContext.setAttr(\"lineWidth\", 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set($03fc3abdfa907317$var$CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has($03fc3abdfa907317$var$CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            {\n                x: rect.x,\n                y: rect.y\n            },\n            {\n                x: rect.x + rect.width,\n                y: rect.y\n            },\n            {\n                x: rect.x + rect.width,\n                y: rect.y + rect.height\n            },\n            {\n                x: rect.x,\n                y: rect.y + rect.height\n            }\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function(point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for(n = 0; n < len; n++){\n                        filter = filters[n];\n                        if (typeof filter !== \"function\") {\n                            $27d6a996859d86c8$exports.Util.error(\"Filter should be type of function, but got \" + typeof filter + \" instead. Please check correct filters\");\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                } catch (e) {\n                    $27d6a996859d86c8$exports.Util.error(\"Unable to apply filter. \" + e.message + \" This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.\");\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete($03fc3abdfa907317$var$ALL_LISTENERS);\n        if (arguments.length === 3) return this._delegate.apply(this, arguments);\n        var events = evtStr.split($03fc3abdfa907317$var$SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for(n = 0; n < len; n++){\n            event = events[n];\n            parts = event.split(\".\");\n            baseEvent = parts[0];\n            name = parts[1] || \"\";\n            if (!this.eventListeners[baseEvent]) this.eventListeners[baseEvent] = [];\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || \"\").split($03fc3abdfa907317$var$SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete($03fc3abdfa907317$var$ALL_LISTENERS);\n        if (!evtStr) for(t in this.eventListeners)this._off(t);\n        for(n = 0; n < len; n++){\n            event = events[n];\n            parts = event.split(\".\");\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) this._off(baseEvent, name, callback);\n            } else for(t in this.eventListeners)this._off(t, name, callback);\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function(evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function(evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for(var i = 0; i < targets.length; i++){\n                evt = $27d6a996859d86c8$exports.Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) this.stopDrag();\n        $ab7119121af4a2ff$exports.DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$STAGE);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$VISIBLE);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        this.clearCache();\n        return this;\n    }\n    getAttr(attr) {\n        var method = \"get\" + $27d6a996859d86c8$exports.Util._capitalize(attr);\n        if ($27d6a996859d86c8$exports.Util._isFunction(this[method])) return this[method]();\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while(parent){\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(()=>{\n            var key, method;\n            if (!config) return this;\n            for(key in config){\n                if (key === $03fc3abdfa907317$var$CHILDREN) continue;\n                method = $03fc3abdfa907317$var$SET + $27d6a996859d86c8$exports.Util._capitalize(key);\n                if ($27d6a996859d86c8$exports.Util._isFunction(this[method])) this[method](config[key]);\n                else this._setAttr(key, config[key]);\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache($03fc3abdfa907317$var$LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) return false;\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) return parent._isListening(relativeTo);\n        else return true;\n    }\n    isVisible() {\n        return this._getCache($03fc3abdfa907317$var$VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) return false;\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) return parent._isVisible(relativeTo);\n        else return true;\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) return this._isVisible(top) && this._isListening(top);\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem)=>{\n            if (elem.dragStatus !== \"dragging\") return;\n            else if (elem.node.nodeType === \"Stage\") layerUnderDrag = true;\n            else if (elem.node.getLayer() === layer) layerUnderDrag = true;\n        });\n        var dragSkip = !skipDragCheck && !$3c4258a611a19cfb$exports.Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for(n = 0; n < len; n++){\n                child = children[n];\n                index++;\n                if (child.nodeType !== $03fc3abdfa907317$var$SHAPE) nodes = nodes.concat(child.getChildren().slice());\n                if (child._id === that._id) n = len;\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) addChildren(nodes);\n        }\n        if (that.nodeType !== $03fc3abdfa907317$var$UPPER_STAGE) addChildren(that.getStage().getChildren());\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while(parent){\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache($03fc3abdfa907317$var$TRANSFORM);\n            this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(()=>{\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y()\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) return null;\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) return null;\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while(parent){\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) top = true;\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new $27d6a996859d86c8$exports.Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache($03fc3abdfa907317$var$TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y\n        };\n        this._setTransform(origTrans);\n        this.setPosition({\n            x: pos.x,\n            y: pos.y\n        });\n        this._clearCache($03fc3abdfa907317$var$TRANSFORM);\n        this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for(key in trans)this.attrs[key] = trans[key];\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY()\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) x += changeX;\n        if (changeY !== undefined) y += changeY;\n        this.setPosition({\n            x: x,\n            y: y\n        });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) return;\n        family.unshift(this);\n        while(parent && (!top || parent._id !== top._id)){\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for(n = 0; n < len; n++)func(family[n]);\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            $27d6a996859d86c8$exports.Util.warn(\"Node has no parent. moveToTop function is ignored.\");\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            $27d6a996859d86c8$exports.Util.warn(\"Node has no parent. moveUp function is ignored.\");\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            $27d6a996859d86c8$exports.Util.warn(\"Node has no parent. moveDown function is ignored.\");\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            $27d6a996859d86c8$exports.Util.warn(\"Node has no parent. moveToBottom function is ignored.\");\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            $27d6a996859d86c8$exports.Util.warn(\"Node has no parent. zIndex parameter is ignored.\");\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) $27d6a996859d86c8$exports.Util.warn(\"Unexpected value \" + zIndex + \" for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to \" + (this.parent.children.length - 1) + \".\");\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache($03fc3abdfa907317$var$ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) absOpacity *= parent.getAbsoluteOpacity();\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for(key in attrs){\n            val = attrs[key];\n            nonPlainObject = $27d6a996859d86c8$exports.Util.isObject(val) && !$27d6a996859d86c8$exports.Util._isPlainObject(val) && !$27d6a996859d86c8$exports.Util._isArray(val);\n            if (nonPlainObject) continue;\n            getter = typeof this[key] === \"function\" && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) obj.attrs[key] = val;\n        }\n        obj.className = this.getClassName();\n        return $27d6a996859d86c8$exports.Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) res.push(this);\n        var ancestor = this.parent;\n        while(ancestor){\n            if (ancestor === stopNode) return res;\n            if (ancestor._isMatch(selector)) res.push(ancestor);\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) return false;\n        if (typeof selector === \"function\") return selector(this);\n        var selectorArr = selector.replace(/ /g, \"\").split(\",\"), len = selectorArr.length, n, sel;\n        for(n = 0; n < len; n++){\n            sel = selectorArr[n];\n            if (!$27d6a996859d86c8$exports.Util.isValidSelector(sel)) {\n                $27d6a996859d86c8$exports.Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                $27d6a996859d86c8$exports.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                $27d6a996859d86c8$exports.Util.warn(\"Konva is awesome, right?\");\n            }\n            if (sel.charAt(0) === \"#\") {\n                if (this.id() === sel.slice(1)) return true;\n            } else if (sel.charAt(0) === \".\") {\n                if (this.hasName(sel.slice(1))) return true;\n            } else if (this.className === sel || this.nodeType === sel) return true;\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache($03fc3abdfa907317$var$STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) return parent.getStage();\n        else return undefined;\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) this._fireAndBubble(eventType, evt);\n        else this._fire(eventType, evt);\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) return this._getAbsoluteTransform(top);\n        else return this._getCache($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new $27d6a996859d86c8$exports.Transform();\n            this._eachAncestorReverse(function(node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === \"all\") at.multiply(node.getTransform());\n                else if (transformsEnabled === \"position\") at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n            }, top);\n            return at;\n        } else {\n            at = this._cache.get($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM) || new $27d6a996859d86c8$exports.Transform();\n            if (this.parent) this.parent.getAbsoluteTransform().copyInto(at);\n            else at.reset();\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === \"all\") at.multiply(this.getTransform());\n            else if (transformsEnabled === \"position\") {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while(parent){\n            if (parent._isUnderCache) top = parent;\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache($03fc3abdfa907317$var$TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get($03fc3abdfa907317$var$TRANSFORM) || new $27d6a996859d86c8$exports.Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = $3c4258a611a19cfb$exports.Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) m.translate(x, y);\n        if (rotation !== 0) m.rotate(rotation);\n        if (skewX !== 0 || skewY !== 0) m.skew(skewX, skewY);\n        if (scaleX !== 1 || scaleY !== 1) m.scale(scaleX, scaleY);\n        if (offsetX !== 0 || offsetY !== 0) m.translate(-1 * offsetX, -1 * offsetY);\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = $27d6a996859d86c8$exports.Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for(key in obj)attrs[key] = obj[key];\n        var node = new this.constructor(attrs);\n        for(key in this.eventListeners){\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for(n = 0; n < len; n++){\n                listener = allListeners[n];\n                if (listener.name.indexOf($03fc3abdfa907317$var$KONVA) < 0) {\n                    if (!node.eventListeners[key]) node.eventListeners[key] = [];\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new $648854cc6bfe0991$exports.SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height || Math.ceil(box.height) || (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio\n        }), context = canvas.getContext();\n        if (config.imageSmoothingEnabled === false) context._context.imageSmoothingEnabled = false;\n        context.save();\n        if (x || y) context.translate(-1 * x, -1 * y);\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) config.callback(url);\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject)=>{\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback) delete config.callback;\n                $27d6a996859d86c8$exports.Util._urlToImage(this.toDataURL(config), function(img) {\n                    resolve(img);\n                    callback === null || callback === void 0 || callback(img);\n                });\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject)=>{\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback) delete config.callback;\n                this.toCanvas(config).toBlob((blob)=>{\n                    resolve(blob);\n                    callback === null || callback === void 0 || callback(blob);\n                });\n            } catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height()\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) return this.attrs.dragDistance;\n        else if (this.parent) return this.parent.getDragDistance();\n        else return $3c4258a611a19cfb$exports.Konva.dragDistance;\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for(i = 0; i < evtListeners.length; i++){\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== \"konva\" || name === \"konva\") && (!name || evtName === name) && (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + $03fc3abdfa907317$var$CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + \" \" + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) return false;\n        const fullName = this.name();\n        if (!fullName) return false;\n        var names = (fullName || \"\").split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || \"\").split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(\" \"));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[$03fc3abdfa907317$var$SET + $27d6a996859d86c8$exports.Util._capitalize(attr)];\n        if ($27d6a996859d86c8$exports.Util._isFunction(func)) func.call(this, val);\n        else this._setAttr(attr, val);\n        return this;\n    }\n    _requestDraw() {\n        if ($3c4258a611a19cfb$exports.Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 || drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !$27d6a996859d86c8$exports.Util.isObject(val)) return;\n        if (val === undefined || val === null) delete this.attrs[key];\n        else this.attrs[key] = val;\n        if (this._shouldFireChangeEvents) this._fireChangeEvent(key, oldVal, val);\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) this.attrs[key] = this.getAttr(key);\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === $03fc3abdfa907317$var$SHAPE) evt.target = this;\n        var shouldStop = (eventType === $03fc3abdfa907317$var$MOUSEENTER || eventType === $03fc3abdfa907317$var$MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === \"Stage\" && !compareShape);\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === $03fc3abdfa907317$var$MOUSEENTER || eventType === $03fc3abdfa907317$var$MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n            if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n                if (compareShape && compareShape.parent) this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                else this._fireAndBubble.call(this.parent, eventType, evt);\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        var _a, _b, _c;\n        const allListeners = (_a = this._cache.get($03fc3abdfa907317$var$ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\n        let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\n        if (events === undefined) {\n            events = [];\n            let obj = Object.getPrototypeOf(this);\n            while(obj){\n                const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\n                events.push(...hierarchyEvents);\n                obj = Object.getPrototypeOf(obj);\n            }\n            allListeners[eventType] = events;\n            this._cache.set($03fc3abdfa907317$var$ALL_LISTENERS, allListeners);\n        }\n        return events;\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) for(var i = 0; i < topListeners.length; i++)topListeners[i].handler.call(this, evt);\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) for(var i = 0; i < selfListeners.length; i++)selfListeners[i].handler.call(this, evt);\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n        $ab7119121af4a2ff$exports.DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y\n            },\n            dragStatus: \"ready\",\n            pointerId: pointerId\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!$ab7119121af4a2ff$exports.DD._dragElements.has(this._id)) this._createDragElement(evt);\n        const elem = $ab7119121af4a2ff$exports.DD._dragElements.get(this._id);\n        elem.dragStatus = \"dragging\";\n        this.fire(\"dragstart\", {\n            type: \"dragstart\",\n            target: this,\n            evt: evt && evt.evt\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) return;\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) $27d6a996859d86c8$exports.Util.warn(\"dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.\");\n            else newNodePos = bounded;\n        }\n        if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = $ab7119121af4a2ff$exports.DD._dragElements.get(this._id);\n        if (elem) elem.dragStatus = \"stopped\";\n        $ab7119121af4a2ff$exports.DD._endDragBefore(evt);\n        $ab7119121af4a2ff$exports.DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr(\"draggable\", draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = $ab7119121af4a2ff$exports.DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === \"dragging\" : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on(\"mousedown.konva touchstart.konva\", function(evt) {\n            var shouldCheckButton = evt.evt[\"button\"] !== undefined;\n            var canDrag = !shouldCheckButton || $3c4258a611a19cfb$exports.Konva.dragButtons.indexOf(evt.evt[\"button\"]) >= 0;\n            if (!canDrag) return;\n            if (this.isDragging()) return;\n            var hasDraggingChild = false;\n            $ab7119121af4a2ff$exports.DD._dragElements.forEach((elem)=>{\n                if (this.isAncestorOf(elem.node)) hasDraggingChild = true;\n            });\n            if (!hasDraggingChild) this._createDragElement(evt);\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) this._listenDrag();\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) return;\n            const dragElement = $ab7119121af4a2ff$exports.DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === \"dragging\";\n            const isReady = dragElement && dragElement.dragStatus === \"ready\";\n            if (isDragging) this.stopDrag();\n            else if (isReady) $ab7119121af4a2ff$exports.DD._dragElements.delete(this._id);\n        }\n    }\n    _dragCleanup() {\n        this.off(\"mousedown.konva\");\n        this.off(\"touchstart.konva\");\n    }\n    isClientRectOnScreen(margin = {\n        x: 0,\n        y: 0\n    }) {\n        const stage = this.getStage();\n        if (!stage) return false;\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y\n        };\n        return $27d6a996859d86c8$exports.Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if ($27d6a996859d86c8$exports.Util._isString(data)) data = JSON.parse(data);\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = $03fc3abdfa907317$var$Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) obj.attrs.container = container;\n        if (!$3c4258a611a19cfb$exports.Konva[className]) {\n            $27d6a996859d86c8$exports.Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n            className = \"Shape\";\n        }\n        const Class = $3c4258a611a19cfb$exports.Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for(n = 0; n < len; n++)no.add($03fc3abdfa907317$var$Node._createNode(children[n]));\n        }\n        return no;\n    }\n}\n$03fc3abdfa907317$exports.Node = $03fc3abdfa907317$var$Node;\n$03fc3abdfa907317$var$Node.prototype.nodeType = \"Node\";\n$03fc3abdfa907317$var$Node.prototype._attrsAffectingSize = [];\n$03fc3abdfa907317$var$Node.prototype.eventListeners = {};\n$03fc3abdfa907317$var$Node.prototype.on.call($03fc3abdfa907317$var$Node.prototype, $03fc3abdfa907317$var$TRANSFORM_CHANGE_STR, function() {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache($03fc3abdfa907317$var$TRANSFORM);\n    this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_TRANSFORM);\n});\n$03fc3abdfa907317$var$Node.prototype.on.call($03fc3abdfa907317$var$Node.prototype, \"visibleChange.konva\", function() {\n    this._clearSelfAndDescendantCache($03fc3abdfa907317$var$VISIBLE);\n});\n$03fc3abdfa907317$var$Node.prototype.on.call($03fc3abdfa907317$var$Node.prototype, \"listeningChange.konva\", function() {\n    this._clearSelfAndDescendantCache($03fc3abdfa907317$var$LISTENING);\n});\n$03fc3abdfa907317$var$Node.prototype.on.call($03fc3abdfa907317$var$Node.prototype, \"opacityChange.konva\", function() {\n    this._clearSelfAndDescendantCache($03fc3abdfa907317$var$ABSOLUTE_OPACITY);\n});\nconst $03fc3abdfa907317$var$addGetterSetter = $9a603088dcd0ec15$exports.Factory.addGetterSetter;\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"zIndex\");\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"absolutePosition\");\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"position\");\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"x\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"y\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"globalCompositeOperation\", \"source-over\", (0, $44f336646fbbdff8$exports.getStringValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"opacity\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"name\", \"\", (0, $44f336646fbbdff8$exports.getStringValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"id\", \"\", (0, $44f336646fbbdff8$exports.getStringValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"rotation\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($03fc3abdfa907317$var$Node, \"scale\", [\n    \"x\",\n    \"y\"\n]);\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"scaleX\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"scaleY\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($03fc3abdfa907317$var$Node, \"skew\", [\n    \"x\",\n    \"y\"\n]);\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"skewX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"skewY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($03fc3abdfa907317$var$Node, \"offset\", [\n    \"x\",\n    \"y\"\n]);\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"offsetX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"offsetY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"dragDistance\", null, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"width\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"height\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"listening\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"preventDefault\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"filters\", null, function(val) {\n    this._filterUpToDate = false;\n    return val;\n});\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"visible\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"transformsEnabled\", \"all\", (0, $44f336646fbbdff8$exports.getStringValidator)());\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"size\");\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"dragBoundFunc\");\n$03fc3abdfa907317$var$addGetterSetter($03fc3abdfa907317$var$Node, \"draggable\", false, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.backCompat($03fc3abdfa907317$var$Node, {\n    rotateDeg: \"rotate\",\n    setRotationDeg: \"setRotation\",\n    getRotationDeg: \"getRotation\"\n});\n\n\nvar $50e33e7b8fd8ffb7$exports = {};\n\"use strict\";\nObject.defineProperty($50e33e7b8fd8ffb7$exports, \"__esModule\", {\n    value: true\n});\n$50e33e7b8fd8ffb7$exports.Container = void 0;\n\n\n\nclass $50e33e7b8fd8ffb7$var$Container extends $03fc3abdfa907317$exports.Node {\n    constructor(){\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) return this.children || [];\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function(child) {\n            if (filterFunc(child)) results.push(child);\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child)=>{\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child)=>{\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (children.length === 0) return this;\n        if (children.length > 1) {\n            for(var i = 0; i < children.length; i++)this.add(children[i]);\n            return this;\n        }\n        const child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire(\"add\", {\n            child: child\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) this.destroyChildren();\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node)=>{\n            const valid = node._isMatch(selector);\n            if (valid) retArr.push(node);\n            if (valid && findOne) return true;\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children){\n            shouldStop = fn(child);\n            if (shouldStop) return true;\n            if (!child.hasChildren()) continue;\n            shouldStop = child._descendants(fn);\n            if (shouldStop) return true;\n        }\n        return false;\n    }\n    toObject() {\n        var obj = $03fc3abdfa907317$exports.Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child)=>{\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while(parent){\n            if (parent._id === this._id) return true;\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = $03fc3abdfa907317$exports.Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function(no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find(\"Shape\").forEach(function(shape) {\n            if (shape.isVisible() && shape.intersects(pos)) arr.push(shape);\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) return;\n        (_a = this.children) === null || _a === void 0 || _a.forEach(function(node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 || _a.forEach(function(child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer && layer.getCanvas(), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) return this;\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        } else this._drawChildren(\"drawScene\", canvas, top);\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) return this;\n        var layer = this.getLayer(), canvas = can || layer && layer.hitCanvas, context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        } else this._drawChildren(\"drawHit\", canvas, top);\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = clipWidth && clipHeight || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            let clipArgs;\n            if (clipFunc) clipArgs = clipFunc.call(this, context, this);\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip.apply(context, clipArgs);\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache && this.globalCompositeOperation() !== \"source-over\" && drawMethod === \"drawScene\";\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 || _a.forEach(function(child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) context.restore();\n        if (hasClip) context.restore();\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 || _a.forEach(function(child) {\n            if (!child.visible()) return;\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke\n            });\n            if (rect.width === 0 && rect.height === 0) return;\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            } else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find(\"Shape\");\n        var hasVisible = false;\n        for(var i = 0; i < shapes.length; i++){\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) selfRect = {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n        else selfRect = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        if (!skipTransform) return this._transformedRect(selfRect, relativeTo);\n        return selfRect;\n    }\n}\n$50e33e7b8fd8ffb7$exports.Container = $50e33e7b8fd8ffb7$var$Container;\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clip\", [\n    \"x\",\n    \"y\",\n    \"width\",\n    \"height\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clipX\", undefined, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clipY\", undefined, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clipWidth\", undefined, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clipHeight\", undefined, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($50e33e7b8fd8ffb7$var$Container, \"clipFunc\");\n\n\nvar $69c01c495bcf49b7$exports = {};\n\"use strict\";\nObject.defineProperty($69c01c495bcf49b7$exports, \"__esModule\", {\n    value: true\n});\n$69c01c495bcf49b7$exports.Stage = $69c01c495bcf49b7$exports.stages = void 0;\n\n\n\n\n\n\n\nvar $fb730314bff2d43b$exports = {};\n\"use strict\";\nObject.defineProperty($fb730314bff2d43b$exports, \"__esModule\", {\n    value: true\n});\n$fb730314bff2d43b$exports.releaseCapture = $fb730314bff2d43b$exports.setPointerCapture = $fb730314bff2d43b$exports.hasPointerCapture = $fb730314bff2d43b$exports.createEvent = $fb730314bff2d43b$exports.getCapturedShape = void 0;\n\nconst $fb730314bff2d43b$var$Captures = new Map();\nconst $fb730314bff2d43b$var$SUPPORT_POINTER_EVENTS = $3c4258a611a19cfb$exports.Konva._global[\"PointerEvent\"] !== undefined;\nfunction $fb730314bff2d43b$var$getCapturedShape(pointerId) {\n    return $fb730314bff2d43b$var$Captures.get(pointerId);\n}\n$fb730314bff2d43b$exports.getCapturedShape = $fb730314bff2d43b$var$getCapturedShape;\nfunction $fb730314bff2d43b$var$createEvent(evt) {\n    return {\n        evt: evt,\n        pointerId: evt.pointerId\n    };\n}\n$fb730314bff2d43b$exports.createEvent = $fb730314bff2d43b$var$createEvent;\nfunction $fb730314bff2d43b$var$hasPointerCapture(pointerId, shape) {\n    return $fb730314bff2d43b$var$Captures.get(pointerId) === shape;\n}\n$fb730314bff2d43b$exports.hasPointerCapture = $fb730314bff2d43b$var$hasPointerCapture;\nfunction $fb730314bff2d43b$var$setPointerCapture(pointerId, shape) {\n    $fb730314bff2d43b$var$releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage) return;\n    $fb730314bff2d43b$var$Captures.set(pointerId, shape);\n    if ($fb730314bff2d43b$var$SUPPORT_POINTER_EVENTS) shape._fire(\"gotpointercapture\", $fb730314bff2d43b$var$createEvent(new PointerEvent(\"gotpointercapture\")));\n}\n$fb730314bff2d43b$exports.setPointerCapture = $fb730314bff2d43b$var$setPointerCapture;\nfunction $fb730314bff2d43b$var$releaseCapture(pointerId, target) {\n    const shape = $fb730314bff2d43b$var$Captures.get(pointerId);\n    if (!shape) return;\n    const stage = shape.getStage();\n    stage && stage.content;\n    $fb730314bff2d43b$var$Captures.delete(pointerId);\n    if ($fb730314bff2d43b$var$SUPPORT_POINTER_EVENTS) shape._fire(\"lostpointercapture\", $fb730314bff2d43b$var$createEvent(new PointerEvent(\"lostpointercapture\")));\n}\n$fb730314bff2d43b$exports.releaseCapture = $fb730314bff2d43b$var$releaseCapture;\n\n\nvar $69c01c495bcf49b7$var$STAGE = \"Stage\", $69c01c495bcf49b7$var$STRING = \"string\", $69c01c495bcf49b7$var$PX = \"px\", $69c01c495bcf49b7$var$MOUSEOUT = \"mouseout\", $69c01c495bcf49b7$var$MOUSELEAVE = \"mouseleave\", $69c01c495bcf49b7$var$MOUSEOVER = \"mouseover\", $69c01c495bcf49b7$var$MOUSEENTER = \"mouseenter\", $69c01c495bcf49b7$var$MOUSEMOVE = \"mousemove\", $69c01c495bcf49b7$var$MOUSEDOWN = \"mousedown\", $69c01c495bcf49b7$var$MOUSEUP = \"mouseup\", $69c01c495bcf49b7$var$POINTERMOVE = \"pointermove\", $69c01c495bcf49b7$var$POINTERDOWN = \"pointerdown\", $69c01c495bcf49b7$var$POINTERUP = \"pointerup\", $69c01c495bcf49b7$var$POINTERCANCEL = \"pointercancel\", $69c01c495bcf49b7$var$LOSTPOINTERCAPTURE = \"lostpointercapture\", $69c01c495bcf49b7$var$POINTEROUT = \"pointerout\", $69c01c495bcf49b7$var$POINTERLEAVE = \"pointerleave\", $69c01c495bcf49b7$var$POINTEROVER = \"pointerover\", $69c01c495bcf49b7$var$POINTERENTER = \"pointerenter\", $69c01c495bcf49b7$var$CONTEXTMENU = \"contextmenu\", $69c01c495bcf49b7$var$TOUCHSTART = \"touchstart\", $69c01c495bcf49b7$var$TOUCHEND = \"touchend\", $69c01c495bcf49b7$var$TOUCHMOVE = \"touchmove\", $69c01c495bcf49b7$var$TOUCHCANCEL = \"touchcancel\", $69c01c495bcf49b7$var$WHEEL = \"wheel\", $69c01c495bcf49b7$var$MAX_LAYERS_NUMBER = 5, $69c01c495bcf49b7$var$EVENTS = [\n    [\n        $69c01c495bcf49b7$var$MOUSEENTER,\n        \"_pointerenter\"\n    ],\n    [\n        $69c01c495bcf49b7$var$MOUSEDOWN,\n        \"_pointerdown\"\n    ],\n    [\n        $69c01c495bcf49b7$var$MOUSEMOVE,\n        \"_pointermove\"\n    ],\n    [\n        $69c01c495bcf49b7$var$MOUSEUP,\n        \"_pointerup\"\n    ],\n    [\n        $69c01c495bcf49b7$var$MOUSELEAVE,\n        \"_pointerleave\"\n    ],\n    [\n        $69c01c495bcf49b7$var$TOUCHSTART,\n        \"_pointerdown\"\n    ],\n    [\n        $69c01c495bcf49b7$var$TOUCHMOVE,\n        \"_pointermove\"\n    ],\n    [\n        $69c01c495bcf49b7$var$TOUCHEND,\n        \"_pointerup\"\n    ],\n    [\n        $69c01c495bcf49b7$var$TOUCHCANCEL,\n        \"_pointercancel\"\n    ],\n    [\n        $69c01c495bcf49b7$var$MOUSEOVER,\n        \"_pointerover\"\n    ],\n    [\n        $69c01c495bcf49b7$var$WHEEL,\n        \"_wheel\"\n    ],\n    [\n        $69c01c495bcf49b7$var$CONTEXTMENU,\n        \"_contextmenu\"\n    ],\n    [\n        $69c01c495bcf49b7$var$POINTERDOWN,\n        \"_pointerdown\"\n    ],\n    [\n        $69c01c495bcf49b7$var$POINTERMOVE,\n        \"_pointermove\"\n    ],\n    [\n        $69c01c495bcf49b7$var$POINTERUP,\n        \"_pointerup\"\n    ],\n    [\n        $69c01c495bcf49b7$var$POINTERCANCEL,\n        \"_pointercancel\"\n    ],\n    [\n        $69c01c495bcf49b7$var$LOSTPOINTERCAPTURE,\n        \"_lostpointercapture\"\n    ]\n];\nconst $69c01c495bcf49b7$var$EVENTS_MAP = {\n    mouse: {\n        [$69c01c495bcf49b7$var$POINTEROUT]: $69c01c495bcf49b7$var$MOUSEOUT,\n        [$69c01c495bcf49b7$var$POINTERLEAVE]: $69c01c495bcf49b7$var$MOUSELEAVE,\n        [$69c01c495bcf49b7$var$POINTEROVER]: $69c01c495bcf49b7$var$MOUSEOVER,\n        [$69c01c495bcf49b7$var$POINTERENTER]: $69c01c495bcf49b7$var$MOUSEENTER,\n        [$69c01c495bcf49b7$var$POINTERMOVE]: $69c01c495bcf49b7$var$MOUSEMOVE,\n        [$69c01c495bcf49b7$var$POINTERDOWN]: $69c01c495bcf49b7$var$MOUSEDOWN,\n        [$69c01c495bcf49b7$var$POINTERUP]: $69c01c495bcf49b7$var$MOUSEUP,\n        [$69c01c495bcf49b7$var$POINTERCANCEL]: \"mousecancel\",\n        pointerclick: \"click\",\n        pointerdblclick: \"dblclick\"\n    },\n    touch: {\n        [$69c01c495bcf49b7$var$POINTEROUT]: \"touchout\",\n        [$69c01c495bcf49b7$var$POINTERLEAVE]: \"touchleave\",\n        [$69c01c495bcf49b7$var$POINTEROVER]: \"touchover\",\n        [$69c01c495bcf49b7$var$POINTERENTER]: \"touchenter\",\n        [$69c01c495bcf49b7$var$POINTERMOVE]: $69c01c495bcf49b7$var$TOUCHMOVE,\n        [$69c01c495bcf49b7$var$POINTERDOWN]: $69c01c495bcf49b7$var$TOUCHSTART,\n        [$69c01c495bcf49b7$var$POINTERUP]: $69c01c495bcf49b7$var$TOUCHEND,\n        [$69c01c495bcf49b7$var$POINTERCANCEL]: $69c01c495bcf49b7$var$TOUCHCANCEL,\n        pointerclick: \"tap\",\n        pointerdblclick: \"dbltap\"\n    },\n    pointer: {\n        [$69c01c495bcf49b7$var$POINTEROUT]: $69c01c495bcf49b7$var$POINTEROUT,\n        [$69c01c495bcf49b7$var$POINTERLEAVE]: $69c01c495bcf49b7$var$POINTERLEAVE,\n        [$69c01c495bcf49b7$var$POINTEROVER]: $69c01c495bcf49b7$var$POINTEROVER,\n        [$69c01c495bcf49b7$var$POINTERENTER]: $69c01c495bcf49b7$var$POINTERENTER,\n        [$69c01c495bcf49b7$var$POINTERMOVE]: $69c01c495bcf49b7$var$POINTERMOVE,\n        [$69c01c495bcf49b7$var$POINTERDOWN]: $69c01c495bcf49b7$var$POINTERDOWN,\n        [$69c01c495bcf49b7$var$POINTERUP]: $69c01c495bcf49b7$var$POINTERUP,\n        [$69c01c495bcf49b7$var$POINTERCANCEL]: $69c01c495bcf49b7$var$POINTERCANCEL,\n        pointerclick: \"pointerclick\",\n        pointerdblclick: \"pointerdblclick\"\n    }\n};\nconst $69c01c495bcf49b7$var$getEventType = (type)=>{\n    if (type.indexOf(\"pointer\") >= 0) return \"pointer\";\n    if (type.indexOf(\"touch\") >= 0) return \"touch\";\n    return \"mouse\";\n};\nconst $69c01c495bcf49b7$var$getEventsMap = (eventType)=>{\n    const type = $69c01c495bcf49b7$var$getEventType(eventType);\n    if (type === \"pointer\") return $3c4258a611a19cfb$exports.Konva.pointerEventsEnabled && $69c01c495bcf49b7$var$EVENTS_MAP.pointer;\n    if (type === \"touch\") return $69c01c495bcf49b7$var$EVENTS_MAP.touch;\n    if (type === \"mouse\") return $69c01c495bcf49b7$var$EVENTS_MAP.mouse;\n};\nfunction $69c01c495bcf49b7$var$checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) $27d6a996859d86c8$exports.Util.warn(\"Stage does not support clipping. Please use clip for Layers or Groups.\");\n    return attrs;\n}\nconst $69c01c495bcf49b7$var$NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\n$69c01c495bcf49b7$exports.stages = [];\nclass $69c01c495bcf49b7$var$Stage extends $50e33e7b8fd8ffb7$exports.Container {\n    constructor(config){\n        super($69c01c495bcf49b7$var$checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        $69c01c495bcf49b7$exports.stages.push(this);\n        this.on(\"widthChange.konva heightChange.konva\", this._resizeDOM);\n        this.on(\"visibleChange.konva\", this._checkVisibility);\n        this.on(\"clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva\", ()=>{\n            $69c01c495bcf49b7$var$checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === \"Layer\";\n        const isFastLayer = child.getType() === \"FastLayer\";\n        const valid = isLayer || isFastLayer;\n        if (!valid) $27d6a996859d86c8$exports.Util.throw(\"You may only add layers to the stage.\");\n    }\n    _checkVisibility() {\n        if (!this.content) return;\n        const style = this.visible() ? \"\" : \"none\";\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === $69c01c495bcf49b7$var$STRING) {\n            if (container.charAt(0) === \".\") {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            } else {\n                var id;\n                if (container.charAt(0) !== \"#\") id = container;\n                else id = container.slice(1);\n                container = document.getElementById(id);\n            }\n            if (!container) throw \"Can not find container in document with id \" + id;\n        }\n        this._setAttr(\"container\", container);\n        if (this.content) {\n            if (this.content.parentElement) this.content.parentElement.removeChild(this.content);\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for(n = 0; n < len; n++)layers[n].clear();\n        return this;\n    }\n    clone(obj) {\n        if (!obj) obj = {};\n        obj.container = typeof document !== \"undefined\" && document.createElement(\"div\");\n        return $50e33e7b8fd8ffb7$exports.Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && $27d6a996859d86c8$exports.Util._isInDocument(content)) this.container().removeChild(content);\n        var index = $69c01c495bcf49b7$exports.stages.indexOf(this);\n        if (index > -1) $69c01c495bcf49b7$exports.stages.splice(index, 1);\n        $27d6a996859d86c8$exports.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            $27d6a996859d86c8$exports.Util.warn($69c01c495bcf49b7$var$NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p)=>p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new $648854cc6bfe0991$exports.SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) _context.translate(-1 * config.x, -1 * config.y);\n        layers.forEach(function(layer) {\n            if (!layer.isVisible()) return;\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) return null;\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for(n = end; n >= 0; n--){\n            const shape = layers[n].getIntersection(pos);\n            if (shape) return shape;\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + $69c01c495bcf49b7$var$PX;\n            this.content.style.height = height + $69c01c495bcf49b7$var$PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer)=>{\n            layer.setSize({\n                width: width,\n                height: height\n            });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for(var i = 0; i < arguments.length; i++)this.add(arguments[i]);\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > $69c01c495bcf49b7$var$MAX_LAYERS_NUMBER) $27d6a996859d86c8$exports.Util.warn(\"The stage has \" + length + \" layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.\");\n        layer.setSize({\n            width: this.width(),\n            height: this.height()\n        });\n        layer.draw();\n        if ($3c4258a611a19cfb$exports.Konva.isBrowser) this.content.appendChild(layer.canvas._canvas);\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return $fb730314bff2d43b$exports.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        $fb730314bff2d43b$exports.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        $fb730314bff2d43b$exports.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!$3c4258a611a19cfb$exports.Konva.isBrowser) return;\n        $69c01c495bcf49b7$var$EVENTS.forEach(([event, methodName])=>{\n            this.content.addEventListener(event, (evt)=>{\n                this[methodName](evt);\n            }, {\n                passive: false\n            });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + \"targetShape\"];\n        if (shape && !shape.getStage()) shape = null;\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        const eventType = $69c01c495bcf49b7$var$getEventType(evt.type);\n        if (!events) return;\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !$ab7119121af4a2ff$exports.DD.isDragging || $3c4258a611a19cfb$exports.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, {\n                evt: evt\n            });\n            targetShape._fireAndBubble(events.pointerleave, {\n                evt: evt\n            });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n            this[eventType + \"targetShape\"] = null;\n        } else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        const eventType = $69c01c495bcf49b7$var$getEventType(evt.type);\n        if (!events) return;\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos)=>{\n            var shape = this.getIntersection(pos);\n            $ab7119121af4a2ff$exports.DD.justDragged = false;\n            $3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"ListenClick\"] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) return;\n            if ($3c4258a611a19cfb$exports.Konva.capturePointerEventsEnabled) shape.setPointerCapture(pos.id);\n            this[eventType + \"ClickStartShape\"] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf(\"touch\") >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) evt.preventDefault();\n        });\n        if (!triggeredOnShape) this._fire(events.pointerdown, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId: this._pointerPositions[0].id\n        });\n    }\n    _pointermove(evt) {\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        const eventType = $69c01c495bcf49b7$var$getEventType(evt.type);\n        if (!events) return;\n        if ($ab7119121af4a2ff$exports.DD.isDragging && $ab7119121af4a2ff$exports.DD.node.preventDefault() && evt.cancelable) evt.preventDefault();\n        this.setPointersPositions(evt);\n        var eventsEnabled = !$ab7119121af4a2ff$exports.DD.isDragging || $3c4258a611a19cfb$exports.Konva.hitOnDragEnabled;\n        if (!eventsEnabled) return;\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos)=>{\n            const shape = $fb730314bff2d43b$exports.getCapturedShape(pos.id) || this.getIntersection(pos);\n            const pointerId = pos.id;\n            const event = {\n                evt: evt,\n                pointerId: pointerId\n            };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) return;\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + \"targetShape\"] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            } else if (targetShape) {\n                this._fire(events.pointerover, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n                this[eventType + \"targetShape\"] = null;\n            }\n        });\n        if (!triggeredOnShape) this._fire(events.pointermove, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId: this._changedPointerPositions[0].id\n        });\n    }\n    _pointerup(evt) {\n        const events = $69c01c495bcf49b7$var$getEventsMap(evt.type);\n        const eventType = $69c01c495bcf49b7$var$getEventType(evt.type);\n        if (!events) return;\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + \"ClickStartShape\"];\n        const clickEndShape = this[eventType + \"ClickEndShape\"];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos)=>{\n            const shape = $fb730314bff2d43b$exports.getCapturedShape(pos.id) || this.getIntersection(pos);\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) return;\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = {\n                evt: evt,\n                pointerId: pointerId\n            };\n            let fireDblClick = false;\n            if ($3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"InDblClickWindow\"]) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + \"DblTimeout\"]);\n            } else if (!$ab7119121af4a2ff$exports.DD.justDragged) {\n                $3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"InDblClickWindow\"] = true;\n                clearTimeout(this[eventType + \"DblTimeout\"]);\n            }\n            this[eventType + \"DblTimeout\"] = setTimeout(function() {\n                $3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"InDblClickWindow\"] = false;\n            }, $3c4258a611a19cfb$exports.Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + \"ClickEndShape\"] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if ($3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"ListenClick\"] && clickStartShape && clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                }\n            } else {\n                this[eventType + \"ClickEndShape\"] = null;\n                if ($3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"ListenClick\"]) this._fire(events.pointerclick, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n                if (fireDblClick) this._fire(events.pointerdblclick, {\n                    evt: evt,\n                    target: this,\n                    currentTarget: this,\n                    pointerId: pointerId\n                });\n            }\n        });\n        if (!triggeredOnShape) this._fire(events.pointerup, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId: this._changedPointerPositions[0].id\n        });\n        $3c4258a611a19cfb$exports.Konva[\"_\" + eventType + \"ListenClick\"] = false;\n        if (evt.cancelable && eventType !== \"touch\") evt.preventDefault();\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) shape._fireAndBubble($69c01c495bcf49b7$var$CONTEXTMENU, {\n            evt: evt\n        });\n        else this._fire($69c01c495bcf49b7$var$CONTEXTMENU, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n        });\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) shape._fireAndBubble($69c01c495bcf49b7$var$WHEEL, {\n            evt: evt\n        });\n        else this._fire($69c01c495bcf49b7$var$WHEEL, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n        });\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = $fb730314bff2d43b$exports.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n        if (shape) shape._fireAndBubble($69c01c495bcf49b7$var$POINTERUP, $fb730314bff2d43b$exports.createEvent(evt));\n        $fb730314bff2d43b$exports.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        $fb730314bff2d43b$exports.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch)=>{\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch)=>{\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n                });\n            });\n        } else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y\n            };\n            this._pointerPositions = [\n                {\n                    x: x,\n                    y: y,\n                    id: $27d6a996859d86c8$exports.Util._getFirstPointerId(evt)\n                }\n            ];\n            this._changedPointerPositions = [\n                {\n                    x: x,\n                    y: y,\n                    id: $27d6a996859d86c8$exports.Util._getFirstPointerId(evt)\n                }\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        $27d6a996859d86c8$exports.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) return {\n            top: 0,\n            left: 0,\n            scaleX: 1,\n            scaleY: 1\n        };\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new $648854cc6bfe0991$exports.SceneCanvas({\n            width: this.width(),\n            height: this.height()\n        });\n        this.bufferHitCanvas = new $648854cc6bfe0991$exports.HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height()\n        });\n        if (!$3c4258a611a19cfb$exports.Konva.isBrowser) return;\n        var container = this.container();\n        if (!container) throw \"Stage has no container. A container is required.\";\n        container.innerHTML = \"\";\n        this.content = document.createElement(\"div\");\n        this.content.style.position = \"relative\";\n        this.content.style.userSelect = \"none\";\n        this.content.className = \"konvajs-content\";\n        this.content.setAttribute(\"role\", \"presentation\");\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        $27d6a996859d86c8$exports.Util.warn(\"Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.\");\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function(layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\n$69c01c495bcf49b7$exports.Stage = $69c01c495bcf49b7$var$Stage;\n$69c01c495bcf49b7$var$Stage.prototype.nodeType = $69c01c495bcf49b7$var$STAGE;\n(0, $3c4258a611a19cfb$exports._registerNode)($69c01c495bcf49b7$var$Stage);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($69c01c495bcf49b7$var$Stage, \"container\");\n\n\nvar $cd8daa9108e9dd62$exports = {};\n\"use strict\";\nObject.defineProperty($cd8daa9108e9dd62$exports, \"__esModule\", {\n    value: true\n});\n$cd8daa9108e9dd62$exports.Layer = void 0;\n\n\n\n\n\n\nvar $8173247af08db530$exports = {};\n\"use strict\";\nObject.defineProperty($8173247af08db530$exports, \"__esModule\", {\n    value: true\n});\n$8173247af08db530$exports.Shape = $8173247af08db530$exports.shapes = void 0;\n\n\n\n\n\n\n\nvar $8173247af08db530$var$HAS_SHADOW = \"hasShadow\";\nvar $8173247af08db530$var$SHADOW_RGBA = \"shadowRGBA\";\nvar $8173247af08db530$var$patternImage = \"patternImage\";\nvar $8173247af08db530$var$linearGradient = \"linearGradient\";\nvar $8173247af08db530$var$radialGradient = \"radialGradient\";\nlet $8173247af08db530$var$dummyContext;\nfunction $8173247af08db530$var$getDummyContext() {\n    if ($8173247af08db530$var$dummyContext) return $8173247af08db530$var$dummyContext;\n    $8173247af08db530$var$dummyContext = $27d6a996859d86c8$exports.Util.createCanvasElement().getContext(\"2d\");\n    return $8173247af08db530$var$dummyContext;\n}\n$8173247af08db530$exports.shapes = {};\nfunction $8173247af08db530$var$_fillFunc(context) {\n    const fillRule = this.attrs.fillRule;\n    if (fillRule) context.fill(fillRule);\n    else context.fill();\n}\nfunction $8173247af08db530$var$_strokeFunc(context) {\n    context.stroke();\n}\nfunction $8173247af08db530$var$_fillFuncHit(context) {\n    context.fill();\n}\nfunction $8173247af08db530$var$_strokeFuncHit(context) {\n    context.stroke();\n}\nfunction $8173247af08db530$var$_clearHasShadowCache() {\n    this._clearCache($8173247af08db530$var$HAS_SHADOW);\n}\nfunction $8173247af08db530$var$_clearGetShadowRGBACache() {\n    this._clearCache($8173247af08db530$var$SHADOW_RGBA);\n}\nfunction $8173247af08db530$var$_clearFillPatternCache() {\n    this._clearCache($8173247af08db530$var$patternImage);\n}\nfunction $8173247af08db530$var$_clearLinearGradientCache() {\n    this._clearCache($8173247af08db530$var$linearGradient);\n}\nfunction $8173247af08db530$var$_clearRadialGradientCache() {\n    this._clearCache($8173247af08db530$var$radialGradient);\n}\nclass $8173247af08db530$var$Shape extends $03fc3abdfa907317$exports.Node {\n    constructor(config){\n        super(config);\n        let key;\n        while(true){\n            key = $27d6a996859d86c8$exports.Util.getRandomColor();\n            if (key && !(key in $8173247af08db530$exports.shapes)) break;\n        }\n        this.colorKey = key;\n        $8173247af08db530$exports.shapes[key] = this;\n    }\n    getContext() {\n        $27d6a996859d86c8$exports.Util.warn(\"shape.getContext() method is deprecated. Please do not use it.\");\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        $27d6a996859d86c8$exports.Util.warn(\"shape.getCanvas() method is deprecated. Please do not use it.\");\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this[\"_sceneFunc\"];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this[\"_hitFunc\"];\n    }\n    hasShadow() {\n        return this._getCache($8173247af08db530$var$HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return this.shadowEnabled() && this.shadowOpacity() !== 0 && !!(this.shadowColor() || this.shadowBlur() || this.shadowOffsetX() || this.shadowOffsetY());\n    }\n    _getFillPattern() {\n        return this._getCache($8173247af08db530$var$patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = $8173247af08db530$var$getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || \"repeat\");\n            if (pattern && pattern.setTransform) {\n                const tr = new $27d6a996859d86c8$exports.Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate($3c4258a611a19cfb$exports.Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === \"undefined\" ? {\n                    a: m[0],\n                    b: m[1],\n                    c: m[2],\n                    d: m[3],\n                    e: m[4],\n                    f: m[5]\n                } : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache($8173247af08db530$var$linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = $8173247af08db530$var$getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for(var n = 0; n < colorStops.length; n += 2)grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache($8173247af08db530$var$radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = $8173247af08db530$var$getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for(var n = 0; n < colorStops.length; n += 2)grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache($8173247af08db530$var$SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (!this.hasShadow()) return;\n        var rgba = $27d6a996859d86c8$exports.Util.colorToRGBA(this.shadowColor());\n        if (rgba) return \"rgba(\" + rgba.r + \",\" + rgba.g + \",\" + rgba.b + \",\" + rgba.a * (this.shadowOpacity() || 1) + \")\";\n    }\n    hasFill() {\n        return this._calculate(\"hasFill\", [\n            \"fillEnabled\",\n            \"fill\",\n            \"fillPatternImage\",\n            \"fillLinearGradientColorStops\",\n            \"fillRadialGradientColorStops\"\n        ], ()=>{\n            return this.fillEnabled() && !!(this.fill() || this.fillPatternImage() || this.fillLinearGradientColorStops() || this.fillRadialGradientColorStops());\n        });\n    }\n    hasStroke() {\n        return this._calculate(\"hasStroke\", [\n            \"strokeEnabled\",\n            \"strokeWidth\",\n            \"stroke\",\n            \"strokeLinearGradientColorStops\"\n        ], ()=>{\n            return this.strokeEnabled() && this.strokeWidth() && !!(this.stroke() || this.strokeLinearGradientColorStops());\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === \"auto\") return this.hasStroke();\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        $03fc3abdfa907317$exports.Node.prototype.destroy.call(this);\n        delete $8173247af08db530$exports.shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) return false;\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) return false;\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) return true;\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) return true;\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        $27d6a996859d86c8$exports.Util.warn(\"strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.\");\n        if (val) this.hitStrokeWidth(\"auto\");\n        else this.hitStrokeWidth(0);\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) return false;\n        else return true;\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = applyStroke && this.strokeWidth() || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = applyShadow && this.shadowBlur() || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetX, 0) + fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) + Math.min(shadowOffsetY, 0) + fillRect.y\n        };\n        if (!skipTransform) return this._transformedRect(rect, relativeTo);\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) return this;\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) return this;\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) context._applyShadow(this);\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        } else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) context._applyShadow(this);\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) return this;\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) $27d6a996859d86c8$exports.Util.warn(\"Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()\");\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) return this;\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = $27d6a996859d86c8$exports.Util._hexToRgb(this.colorKey);\n            for(i = 0; i < len; i += 4){\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                } else hitData[i + 3] = 0;\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        } catch (e) {\n            $27d6a996859d86c8$exports.Util.error(\"Unable to draw hit graph from cached scene canvas. \" + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return $fb730314bff2d43b$exports.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        $fb730314bff2d43b$exports.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        $fb730314bff2d43b$exports.releaseCapture(pointerId, this);\n    }\n}\n$8173247af08db530$exports.Shape = $8173247af08db530$var$Shape;\n$8173247af08db530$var$Shape.prototype._fillFunc = $8173247af08db530$var$_fillFunc;\n$8173247af08db530$var$Shape.prototype._strokeFunc = $8173247af08db530$var$_strokeFunc;\n$8173247af08db530$var$Shape.prototype._fillFuncHit = $8173247af08db530$var$_fillFuncHit;\n$8173247af08db530$var$Shape.prototype._strokeFuncHit = $8173247af08db530$var$_strokeFuncHit;\n$8173247af08db530$var$Shape.prototype._centroid = false;\n$8173247af08db530$var$Shape.prototype.nodeType = \"Shape\";\n(0, $3c4258a611a19cfb$exports._registerNode)($8173247af08db530$var$Shape);\n$8173247af08db530$var$Shape.prototype.eventListeners = {};\n$8173247af08db530$var$Shape.prototype.on.call($8173247af08db530$var$Shape.prototype, \"shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva\", $8173247af08db530$var$_clearHasShadowCache);\n$8173247af08db530$var$Shape.prototype.on.call($8173247af08db530$var$Shape.prototype, \"shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva\", $8173247af08db530$var$_clearGetShadowRGBACache);\n$8173247af08db530$var$Shape.prototype.on.call($8173247af08db530$var$Shape.prototype, \"fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva\", $8173247af08db530$var$_clearFillPatternCache);\n$8173247af08db530$var$Shape.prototype.on.call($8173247af08db530$var$Shape.prototype, \"fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva\", $8173247af08db530$var$_clearLinearGradientCache);\n$8173247af08db530$var$Shape.prototype.on.call($8173247af08db530$var$Shape.prototype, \"fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva\", $8173247af08db530$var$_clearRadialGradientCache);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"stroke\", undefined, (0, $44f336646fbbdff8$exports.getStringOrGradientValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeWidth\", 2, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillAfterStrokeEnabled\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"hitStrokeWidth\", \"auto\", (0, $44f336646fbbdff8$exports.getNumberOrAutoValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeHitEnabled\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"perfectDrawEnabled\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowForStrokeEnabled\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"lineJoin\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"lineCap\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"sceneFunc\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"hitFunc\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"dash\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"dashOffset\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowColor\", undefined, (0, $44f336646fbbdff8$exports.getStringValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowBlur\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowOpacity\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"shadowOffset\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowOffsetX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowOffsetY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternImage\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fill\", undefined, (0, $44f336646fbbdff8$exports.getStringOrGradientValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientColorStops\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientColorStops\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientStartRadius\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientEndRadius\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientColorStops\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternRepeat\", \"repeat\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"shadowEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"dashEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeScaleEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPriority\", \"color\");\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillPatternOffset\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternOffsetX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternOffsetY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillPatternScale\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternScaleX\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternScaleY\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientStartPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientStartPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientStartPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientStartPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientStartPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientStartPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientEndPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientEndPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientEndPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientEndPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillLinearGradientEndPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"strokeLinearGradientEndPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientStartPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientStartPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientStartPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientEndPoint\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientEndPointX\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRadialGradientEndPointY\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillPatternRotation\", 0);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8173247af08db530$var$Shape, \"fillRule\", undefined, (0, $44f336646fbbdff8$exports.getStringValidator)());\n$9a603088dcd0ec15$exports.Factory.backCompat($8173247af08db530$var$Shape, {\n    dashArray: \"dash\",\n    getDashArray: \"getDash\",\n    setDashArray: \"getDash\",\n    drawFunc: \"sceneFunc\",\n    getDrawFunc: \"getSceneFunc\",\n    setDrawFunc: \"setSceneFunc\",\n    drawHitFunc: \"hitFunc\",\n    getDrawHitFunc: \"getHitFunc\",\n    setDrawHitFunc: \"setHitFunc\"\n});\n\n\n\nvar $cd8daa9108e9dd62$var$HASH = \"#\", $cd8daa9108e9dd62$var$BEFORE_DRAW = \"beforeDraw\", $cd8daa9108e9dd62$var$DRAW = \"draw\", $cd8daa9108e9dd62$var$INTERSECTION_OFFSETS = [\n    {\n        x: 0,\n        y: 0\n    },\n    {\n        x: -1,\n        y: -1\n    },\n    {\n        x: 1,\n        y: -1\n    },\n    {\n        x: 1,\n        y: 1\n    },\n    {\n        x: -1,\n        y: 1\n    }\n], $cd8daa9108e9dd62$var$INTERSECTION_OFFSETS_LEN = $cd8daa9108e9dd62$var$INTERSECTION_OFFSETS.length;\nclass $cd8daa9108e9dd62$var$Layer extends $50e33e7b8fd8ffb7$exports.Container {\n    constructor(config){\n        super(config);\n        this.canvas = new $648854cc6bfe0991$exports.SceneCanvas();\n        this.hitCanvas = new $648854cc6bfe0991$exports.HitCanvas({\n            pixelRatio: 1\n        });\n        this._waitingForDraw = false;\n        this.on(\"visibleChange.konva\", this._checkVisibility);\n        this._checkVisibility();\n        this.on(\"imageSmoothingEnabledChange.konva\", this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            else stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return this;\n    }\n    moveToTop() {\n        $03fc3abdfa907317$exports.Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = $03fc3abdfa907317$exports.Node.prototype.moveUp.call(this);\n        if (!moved) return false;\n        var stage = this.getStage();\n        if (!stage || !stage.content) return false;\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        else stage.content.appendChild(this.getNativeCanvasElement());\n        return true;\n    }\n    moveDown() {\n        if ($03fc3abdfa907317$exports.Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if ($03fc3abdfa907317$exports.Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        $03fc3abdfa907317$exports.Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && $27d6a996859d86c8$exports.Util._isInDocument(_canvas)) _canvas.parentNode.removeChild(_canvas);\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width: width , height: height  }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== \"Group\" && type !== \"Shape\") $27d6a996859d86c8$exports.Util.throw(\"You may only add groups and shapes to a layer.\");\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return $03fc3abdfa907317$exports.Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) this.canvas._canvas.style.display = \"block\";\n        else this.canvas._canvas.style.display = \"none\";\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) return this.parent.width();\n    }\n    setWidth() {\n        $27d6a996859d86c8$exports.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) return this.parent.height();\n    }\n    setHeight() {\n        $27d6a996859d86c8$exports.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            $27d6a996859d86c8$exports.Util.requestAnimFrame(()=>{\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) return null;\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while(true){\n            for(let i = 0; i < $cd8daa9108e9dd62$var$INTERSECTION_OFFSETS_LEN; i++){\n                const intersectionOffset = $cd8daa9108e9dd62$var$INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance\n                });\n                const shape = obj.shape;\n                if (shape) return shape;\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) break;\n            }\n            if (continueSearch) spiralSearchDistance += 1;\n            else return null;\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = $27d6a996859d86c8$exports.Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = $8173247af08db530$exports.shapes[$cd8daa9108e9dd62$var$HASH + colorKey];\n            if (shape) return {\n                shape: shape\n            };\n            return {\n                antialiased: true\n            };\n        } else if (p3 > 0) return {\n            antialiased: true\n        };\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer && layer.getCanvas();\n        this._fire($cd8daa9108e9dd62$var$BEFORE_DRAW, {\n            node: this\n        });\n        if (this.clearBeforeDraw()) canvas.getContext().clear();\n        $50e33e7b8fd8ffb7$exports.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire($cd8daa9108e9dd62$var$DRAW, {\n            node: this\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || layer && layer.hitCanvas;\n        if (layer && layer.clearBeforeDraw()) layer.getHitCanvas().getContext().clear();\n        $50e33e7b8fd8ffb7$exports.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        $27d6a996859d86c8$exports.Util.warn(\"hitGraphEnabled method is deprecated. Please use layer.listening() instead.\");\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        $27d6a996859d86c8$exports.Util.warn(\"hitGraphEnabled method is deprecated. Please use layer.listening() instead.\");\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent[\"content\"]) return;\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) parent.content.removeChild(this.hitCanvas._canvas);\n        else parent.content.appendChild(this.hitCanvas._canvas);\n    }\n    destroy() {\n        $27d6a996859d86c8$exports.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\n$cd8daa9108e9dd62$exports.Layer = $cd8daa9108e9dd62$var$Layer;\n$cd8daa9108e9dd62$var$Layer.prototype.nodeType = \"Layer\";\n(0, $3c4258a611a19cfb$exports._registerNode)($cd8daa9108e9dd62$var$Layer);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd8daa9108e9dd62$var$Layer, \"imageSmoothingEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd8daa9108e9dd62$var$Layer, \"clearBeforeDraw\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd8daa9108e9dd62$var$Layer, \"hitGraphEnabled\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n\n\nvar $83d23d5ca4759aa4$exports = {};\n\"use strict\";\nObject.defineProperty($83d23d5ca4759aa4$exports, \"__esModule\", {\n    value: true\n});\n$83d23d5ca4759aa4$exports.FastLayer = void 0;\n\n\n\nclass $83d23d5ca4759aa4$var$FastLayer extends $cd8daa9108e9dd62$exports.Layer {\n    constructor(attrs){\n        super(attrs);\n        this.listening(false);\n        $27d6a996859d86c8$exports.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n    }\n}\n$83d23d5ca4759aa4$exports.FastLayer = $83d23d5ca4759aa4$var$FastLayer;\n$83d23d5ca4759aa4$var$FastLayer.prototype.nodeType = \"FastLayer\";\n(0, $3c4258a611a19cfb$exports._registerNode)($83d23d5ca4759aa4$var$FastLayer);\n\n\nvar $da8e70b72825bd12$exports = {};\n\"use strict\";\nObject.defineProperty($da8e70b72825bd12$exports, \"__esModule\", {\n    value: true\n});\n$da8e70b72825bd12$exports.Group = void 0;\n\n\n\nclass $da8e70b72825bd12$var$Group extends $50e33e7b8fd8ffb7$exports.Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== \"Group\" && type !== \"Shape\") $27d6a996859d86c8$exports.Util.throw(\"You may only add groups and shapes to groups.\");\n    }\n}\n$da8e70b72825bd12$exports.Group = $da8e70b72825bd12$var$Group;\n$da8e70b72825bd12$var$Group.prototype.nodeType = \"Group\";\n(0, $3c4258a611a19cfb$exports._registerNode)($da8e70b72825bd12$var$Group);\n\n\n\n\nvar $3688513f3eaf48af$exports = {};\n\"use strict\";\nObject.defineProperty($3688513f3eaf48af$exports, \"__esModule\", {\n    value: true\n});\n$3688513f3eaf48af$exports.Animation = void 0;\n\n\nvar $3688513f3eaf48af$var$now = function() {\n    if ($3c4258a611a19cfb$exports.glob.performance && $3c4258a611a19cfb$exports.glob.performance.now) return function() {\n        return $3c4258a611a19cfb$exports.glob.performance.now();\n    };\n    return function() {\n        return new Date().getTime();\n    };\n}();\nclass $3688513f3eaf48af$var$Animation {\n    constructor(func, layers){\n        this.id = $3688513f3eaf48af$var$Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: $3688513f3eaf48af$var$now(),\n            frameRate: 0\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) lays = [];\n        else if (layers.length > 0) lays = layers;\n        else lays = [\n            layers\n        ];\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for(n = 0; n < len; n++){\n            if (layers[n]._id === layer._id) return false;\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = $3688513f3eaf48af$var$Animation, animations = a.animations, len = animations.length, n;\n        for(n = 0; n < len; n++){\n            if (animations[n].id === this.id) return true;\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = $3688513f3eaf48af$var$now();\n        $3688513f3eaf48af$var$Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        $3688513f3eaf48af$var$Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for(n = 0; n < len; n++)if (animations[n].id === id) {\n            this.animations.splice(n, 1);\n            break;\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for(n = 0; n < animations.length; n++){\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject($3688513f3eaf48af$var$now());\n            layersLen = layers.length;\n            if (func) needRedraw = func.call(anim, anim.frame) !== false;\n            else needRedraw = true;\n            if (!needRedraw) continue;\n            for(i = 0; i < layersLen; i++){\n                layer = layers[i];\n                if (layer._id !== undefined) layerHash[layer._id] = layer;\n            }\n        }\n        for(key in layerHash){\n            if (!layerHash.hasOwnProperty(key)) continue;\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = $3688513f3eaf48af$var$Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            $27d6a996859d86c8$exports.Util.requestAnimFrame(Anim._animationLoop);\n        } else Anim.animRunning = false;\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            $27d6a996859d86c8$exports.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\n$3688513f3eaf48af$exports.Animation = $3688513f3eaf48af$var$Animation;\n$3688513f3eaf48af$var$Animation.animations = [];\n$3688513f3eaf48af$var$Animation.animIdCounter = 0;\n$3688513f3eaf48af$var$Animation.animRunning = false;\n\n\nvar $48089d56c7429c2d$exports = {};\n\"use strict\";\nObject.defineProperty($48089d56c7429c2d$exports, \"__esModule\", {\n    value: true\n});\n$48089d56c7429c2d$exports.Easings = $48089d56c7429c2d$exports.Tween = void 0;\n\n\n\n\nvar $48089d56c7429c2d$var$blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1\n}, $48089d56c7429c2d$var$PAUSED = 1, $48089d56c7429c2d$var$PLAYING = 2, $48089d56c7429c2d$var$REVERSING = 3, $48089d56c7429c2d$var$idCounter = 0, $48089d56c7429c2d$var$colorAttrs = [\n    \"fill\",\n    \"stroke\",\n    \"shadowColor\"\n];\nclass $48089d56c7429c2d$var$TweenEngine {\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo){\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    }\n    fire(str) {\n        var handler = this[str];\n        if (handler) handler();\n    }\n    setTime(t) {\n        if (t > this.duration) {\n            if (this.yoyo) {\n                this._time = this.duration;\n                this.reverse();\n            } else this.finish();\n        } else if (t < 0) {\n            if (this.yoyo) {\n                this._time = 0;\n                this.play();\n            } else this.reset();\n        } else {\n            this._time = t;\n            this.update();\n        }\n    }\n    getTime() {\n        return this._time;\n    }\n    setPosition(p) {\n        this.prevPos = this._pos;\n        this.propFunc(p);\n        this._pos = p;\n    }\n    getPosition(t) {\n        if (t === undefined) t = this._time;\n        return this.func(t, this.begin, this._change, this.duration);\n    }\n    play() {\n        this.state = $48089d56c7429c2d$var$PLAYING;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire(\"onPlay\");\n    }\n    reverse() {\n        this.state = $48089d56c7429c2d$var$REVERSING;\n        this._time = this.duration - this._time;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire(\"onReverse\");\n    }\n    seek(t) {\n        this.pause();\n        this._time = t;\n        this.update();\n        this.fire(\"onSeek\");\n    }\n    reset() {\n        this.pause();\n        this._time = 0;\n        this.update();\n        this.fire(\"onReset\");\n    }\n    finish() {\n        this.pause();\n        this._time = this.duration;\n        this.update();\n        this.fire(\"onFinish\");\n    }\n    update() {\n        this.setPosition(this.getPosition(this._time));\n        this.fire(\"onUpdate\");\n    }\n    onEnterFrame() {\n        var t = this.getTimer() - this._startTime;\n        if (this.state === $48089d56c7429c2d$var$PLAYING) this.setTime(t);\n        else if (this.state === $48089d56c7429c2d$var$REVERSING) this.setTime(this.duration - t);\n    }\n    pause() {\n        this.state = $48089d56c7429c2d$var$PAUSED;\n        this.fire(\"onPause\");\n    }\n    getTimer() {\n        return new Date().getTime();\n    }\n}\nclass $48089d56c7429c2d$var$Tween {\n    constructor(config){\n        var that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || $48089d56c7429c2d$exports.Easings.Linear, yoyo = !!config.yoyo, key;\n        if (typeof config.duration === \"undefined\") duration = 0.3;\n        else if (config.duration === 0) duration = 0.001;\n        else duration = config.duration;\n        this.node = node;\n        this._id = $48089d56c7429c2d$var$idCounter++;\n        var layers = node.getLayer() || (node instanceof $3c4258a611a19cfb$exports.Konva[\"Stage\"] ? node.getLayers() : null);\n        if (!layers) $27d6a996859d86c8$exports.Util.error(\"Tween constructor have `node` that is not in a layer. Please add node into layer first.\");\n        this.anim = new $3688513f3eaf48af$exports.Animation(function() {\n            that.tween.onEnterFrame();\n        }, layers);\n        this.tween = new $48089d56c7429c2d$var$TweenEngine(key, function(i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n        this._addListeners();\n        if (!$48089d56c7429c2d$var$Tween.attrs[nodeId]) $48089d56c7429c2d$var$Tween.attrs[nodeId] = {};\n        if (!$48089d56c7429c2d$var$Tween.attrs[nodeId][this._id]) $48089d56c7429c2d$var$Tween.attrs[nodeId][this._id] = {};\n        if (!$48089d56c7429c2d$var$Tween.tweens[nodeId]) $48089d56c7429c2d$var$Tween.tweens[nodeId] = {};\n        for(key in config)if ($48089d56c7429c2d$var$blacklist[key] === undefined) this._addAttr(key, config[key]);\n        this.reset();\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n        this.onUpdate = config.onUpdate;\n    }\n    _addAttr(key, end) {\n        var node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\n        tweenId = $48089d56c7429c2d$var$Tween.tweens[nodeId][key];\n        if (tweenId) delete $48089d56c7429c2d$var$Tween.attrs[nodeId][tweenId][key];\n        start = node.getAttr(key);\n        if ($27d6a996859d86c8$exports.Util._isArray(end)) {\n            diff = [];\n            len = Math.max(end.length, start.length);\n            if (key === \"points\" && end.length !== start.length) {\n                if (end.length > start.length) {\n                    trueStart = start;\n                    start = $27d6a996859d86c8$exports.Util._prepareArrayForTween(start, end, node.closed());\n                } else {\n                    trueEnd = end;\n                    end = $27d6a996859d86c8$exports.Util._prepareArrayForTween(end, start, node.closed());\n                }\n            }\n            if (key.indexOf(\"fill\") === 0) {\n                for(n = 0; n < len; n++)if (n % 2 === 0) diff.push(end[n] - start[n]);\n                else {\n                    var startRGBA = $27d6a996859d86c8$exports.Util.colorToRGBA(start[n]);\n                    endRGBA = $27d6a996859d86c8$exports.Util.colorToRGBA(end[n]);\n                    start[n] = startRGBA;\n                    diff.push({\n                        r: endRGBA.r - startRGBA.r,\n                        g: endRGBA.g - startRGBA.g,\n                        b: endRGBA.b - startRGBA.b,\n                        a: endRGBA.a - startRGBA.a\n                    });\n                }\n            } else for(n = 0; n < len; n++)diff.push(end[n] - start[n]);\n        } else if ($48089d56c7429c2d$var$colorAttrs.indexOf(key) !== -1) {\n            start = $27d6a996859d86c8$exports.Util.colorToRGBA(start);\n            endRGBA = $27d6a996859d86c8$exports.Util.colorToRGBA(end);\n            diff = {\n                r: endRGBA.r - start.r,\n                g: endRGBA.g - start.g,\n                b: endRGBA.b - start.b,\n                a: endRGBA.a - start.a\n            };\n        } else diff = end - start;\n        $48089d56c7429c2d$var$Tween.attrs[nodeId][this._id][key] = {\n            start: start,\n            diff: diff,\n            end: end,\n            trueEnd: trueEnd,\n            trueStart: trueStart\n        };\n        $48089d56c7429c2d$var$Tween.tweens[nodeId][key] = this._id;\n    }\n    _tweenFunc(i) {\n        var node = this.node, attrs = $48089d56c7429c2d$var$Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\n        for(key in attrs){\n            attr = attrs[key];\n            start = attr.start;\n            diff = attr.diff;\n            end = attr.end;\n            if ($27d6a996859d86c8$exports.Util._isArray(start)) {\n                newVal = [];\n                len = Math.max(start.length, end.length);\n                if (key.indexOf(\"fill\") === 0) {\n                    for(n = 0; n < len; n++)if (n % 2 === 0) newVal.push((start[n] || 0) + diff[n] * i);\n                    else newVal.push(\"rgba(\" + Math.round(start[n].r + diff[n].r * i) + \",\" + Math.round(start[n].g + diff[n].g * i) + \",\" + Math.round(start[n].b + diff[n].b * i) + \",\" + (start[n].a + diff[n].a * i) + \")\");\n                } else for(n = 0; n < len; n++)newVal.push((start[n] || 0) + diff[n] * i);\n            } else if ($48089d56c7429c2d$var$colorAttrs.indexOf(key) !== -1) newVal = \"rgba(\" + Math.round(start.r + diff.r * i) + \",\" + Math.round(start.g + diff.g * i) + \",\" + Math.round(start.b + diff.b * i) + \",\" + (start.a + diff.a * i) + \")\";\n            else newVal = start + diff * i;\n            node.setAttr(key, newVal);\n        }\n    }\n    _addListeners() {\n        this.tween.onPlay = ()=>{\n            this.anim.start();\n        };\n        this.tween.onReverse = ()=>{\n            this.anim.start();\n        };\n        this.tween.onPause = ()=>{\n            this.anim.stop();\n        };\n        this.tween.onFinish = ()=>{\n            var node = this.node;\n            var attrs = $48089d56c7429c2d$var$Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueEnd) node.setAttr(\"points\", attrs.points.trueEnd);\n            if (this.onFinish) this.onFinish.call(this);\n        };\n        this.tween.onReset = ()=>{\n            var node = this.node;\n            var attrs = $48089d56c7429c2d$var$Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueStart) node.points(attrs.points.trueStart);\n            if (this.onReset) this.onReset();\n        };\n        this.tween.onUpdate = ()=>{\n            if (this.onUpdate) this.onUpdate.call(this);\n        };\n    }\n    play() {\n        this.tween.play();\n        return this;\n    }\n    reverse() {\n        this.tween.reverse();\n        return this;\n    }\n    reset() {\n        this.tween.reset();\n        return this;\n    }\n    seek(t) {\n        this.tween.seek(t * 1000);\n        return this;\n    }\n    pause() {\n        this.tween.pause();\n        return this;\n    }\n    finish() {\n        this.tween.finish();\n        return this;\n    }\n    destroy() {\n        var nodeId = this.node._id, thisId = this._id, attrs = $48089d56c7429c2d$var$Tween.tweens[nodeId], key;\n        this.pause();\n        for(key in attrs)delete $48089d56c7429c2d$var$Tween.tweens[nodeId][key];\n        delete $48089d56c7429c2d$var$Tween.attrs[nodeId][thisId];\n    }\n}\n$48089d56c7429c2d$exports.Tween = $48089d56c7429c2d$var$Tween;\n$48089d56c7429c2d$var$Tween.attrs = {};\n$48089d56c7429c2d$var$Tween.tweens = {};\n$03fc3abdfa907317$exports.Node.prototype.to = function(params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function() {\n        this.destroy();\n        if (onFinish) onFinish();\n    };\n    var tween = new $48089d56c7429c2d$var$Tween(params);\n    tween.play();\n};\n$48089d56c7429c2d$exports.Easings = {\n    BackEaseIn (t, b, c, d) {\n        var s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    BackEaseOut (t, b, c, d) {\n        var s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    BackEaseInOut (t, b, c, d) {\n        var s = 1.70158;\n        if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    ElasticEaseIn (t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) return b;\n        if ((t /= d) === 1) return b + c;\n        if (!p) p = d * 0.3;\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / (2 * Math.PI) * Math.asin(c / a);\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    },\n    ElasticEaseOut (t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) return b;\n        if ((t /= d) === 1) return b + c;\n        if (!p) p = d * 0.3;\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / (2 * Math.PI) * Math.asin(c / a);\n        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n    },\n    ElasticEaseInOut (t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) return b;\n        if ((t /= d / 2) === 2) return b + c;\n        if (!p) p = d * (0.3 * 1.5);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        } else s = p / (2 * Math.PI) * Math.asin(c / a);\n        if (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n    },\n    BounceEaseOut (t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) return c * (7.5625 * t * t) + b;\n        else if (t < 2 / 2.75) return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n        else if (t < 2.5 / 2.75) return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n        else return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    },\n    BounceEaseIn (t, b, c, d) {\n        return c - $48089d56c7429c2d$exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    BounceEaseInOut (t, b, c, d) {\n        if (t < d / 2) return $48089d56c7429c2d$exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n        else return $48089d56c7429c2d$exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n    },\n    EaseIn (t, b, c, d) {\n        return c * (t /= d) * t + b;\n    },\n    EaseOut (t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    },\n    EaseInOut (t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n    StrongEaseIn (t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    },\n    StrongEaseOut (t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    StrongEaseInOut (t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    Linear (t, b, c, d) {\n        return c * t / d + b;\n    }\n};\n\n\n\n\n$489e46baf1687eb2$exports.Konva = $27d6a996859d86c8$exports.Util._assign($3c4258a611a19cfb$exports.Konva, {\n    Util: $27d6a996859d86c8$exports.Util,\n    Transform: $27d6a996859d86c8$exports.Transform,\n    Node: $03fc3abdfa907317$exports.Node,\n    Container: $50e33e7b8fd8ffb7$exports.Container,\n    Stage: $69c01c495bcf49b7$exports.Stage,\n    stages: $69c01c495bcf49b7$exports.stages,\n    Layer: $cd8daa9108e9dd62$exports.Layer,\n    FastLayer: $83d23d5ca4759aa4$exports.FastLayer,\n    Group: $da8e70b72825bd12$exports.Group,\n    DD: $ab7119121af4a2ff$exports.DD,\n    Shape: $8173247af08db530$exports.Shape,\n    shapes: $8173247af08db530$exports.shapes,\n    Animation: $3688513f3eaf48af$exports.Animation,\n    Tween: $48089d56c7429c2d$exports.Tween,\n    Easings: $48089d56c7429c2d$exports.Easings,\n    Context: $4dca1ff09e7fd160$exports.Context,\n    Canvas: $648854cc6bfe0991$exports.Canvas\n});\n$489e46baf1687eb2$exports.default = $489e46baf1687eb2$exports.Konva;\n\n\nvar $2d67c1a1a72b8ce1$exports = {};\n\"use strict\";\nObject.defineProperty($2d67c1a1a72b8ce1$exports, \"__esModule\", {\n    value: true\n});\n$2d67c1a1a72b8ce1$exports.Arc = void 0;\n\n\n\n\n\nclass $2d67c1a1a72b8ce1$var$Arc extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        var angle = $3c4258a611a19cfb$exports.Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = $3c4258a611a19cfb$exports.Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop\n        };\n    }\n}\n$2d67c1a1a72b8ce1$exports.Arc = $2d67c1a1a72b8ce1$var$Arc;\n$2d67c1a1a72b8ce1$var$Arc.prototype._centroid = true;\n$2d67c1a1a72b8ce1$var$Arc.prototype.className = \"Arc\";\n$2d67c1a1a72b8ce1$var$Arc.prototype._attrsAffectingSize = [\n    \"innerRadius\",\n    \"outerRadius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($2d67c1a1a72b8ce1$var$Arc);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($2d67c1a1a72b8ce1$var$Arc, \"innerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($2d67c1a1a72b8ce1$var$Arc, \"outerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($2d67c1a1a72b8ce1$var$Arc, \"angle\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($2d67c1a1a72b8ce1$var$Arc, \"clockwise\", false, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n\n\nvar $d0c80a6fe5fa4728$exports = {};\n\"use strict\";\nObject.defineProperty($d0c80a6fe5fa4728$exports, \"__esModule\", {\n    value: true\n});\n$d0c80a6fe5fa4728$exports.Arrow = void 0;\n\nvar $5217a1f06c18ba48$exports = {};\n\"use strict\";\nObject.defineProperty($5217a1f06c18ba48$exports, \"__esModule\", {\n    value: true\n});\n$5217a1f06c18ba48$exports.Line = void 0;\n\n\n\n\nfunction $5217a1f06c18ba48$var$getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = t * d01 / (d01 + d12), fb = t * d12 / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [\n        p1x,\n        p1y,\n        p2x,\n        p2y\n    ];\n}\nfunction $5217a1f06c18ba48$var$expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for(n = 2; n < len - 2; n += 2){\n        cp = $5217a1f06c18ba48$var$getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) continue;\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nclass $5217a1f06c18ba48$var$Line extends $8173247af08db530$exports.Shape {\n    constructor(config){\n        super(config);\n        this.on(\"pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva\", function() {\n            this._clearCache(\"tensionPoints\");\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) return;\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            while(n < len - 2)context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            if (!closed) context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n        } else if (bezier) {\n            n = 2;\n            while(n < length)context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n        } else for(n = 2; n < length; n += 2)context.lineTo(points[n], points[n + 1]);\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        } else context.strokeShape(this);\n    }\n    getTensionPoints() {\n        return this._getCache(\"tensionPoints\", this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) return this._getTensionPointsClosed();\n        else return $5217a1f06c18ba48$var$expandPoints(this.points(), this.tension());\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = $5217a1f06c18ba48$var$getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = $5217a1f06c18ba48$var$getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = $5217a1f06c18ba48$var$expandPoints(p, tension), tp = [\n            firstControlPoints[2],\n            firstControlPoints[3]\n        ].concat(middle).concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) return {\n            x: points[0] || 0,\n            y: points[1] || 0,\n            width: 0,\n            height: 0\n        };\n        if (this.tension() !== 0) points = [\n            points[0],\n            points[1],\n            ...this._getTensionPoints(),\n            points[points.length - 2],\n            points[points.length - 1]\n        ];\n        else points = this.points();\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for(var i = 0; i < points.length / 2; i++){\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n}\n$5217a1f06c18ba48$exports.Line = $5217a1f06c18ba48$var$Line;\n$5217a1f06c18ba48$var$Line.prototype.className = \"Line\";\n$5217a1f06c18ba48$var$Line.prototype._attrsAffectingSize = [\n    \"points\",\n    \"bezier\",\n    \"tension\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($5217a1f06c18ba48$var$Line);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5217a1f06c18ba48$var$Line, \"closed\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5217a1f06c18ba48$var$Line, \"bezier\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5217a1f06c18ba48$var$Line, \"tension\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5217a1f06c18ba48$var$Line, \"points\", [], (0, $44f336646fbbdff8$exports.getNumberArrayValidator)());\n\n\n\n\nvar $b423ec4e2dd4644d$exports = {};\n\"use strict\";\nObject.defineProperty($b423ec4e2dd4644d$exports, \"__esModule\", {\n    value: true\n});\n$b423ec4e2dd4644d$exports.Path = void 0;\n\n\n\nvar $c3ba1e298013d19b$exports = {};\n\"use strict\";\nObject.defineProperty($c3ba1e298013d19b$exports, \"__esModule\", {\n    value: true\n});\n$c3ba1e298013d19b$exports.t2length = $c3ba1e298013d19b$exports.getQuadraticArcLength = $c3ba1e298013d19b$exports.getCubicArcLength = $c3ba1e298013d19b$exports.binomialCoefficients = $c3ba1e298013d19b$exports.cValues = $c3ba1e298013d19b$exports.tValues = void 0;\n$c3ba1e298013d19b$exports.tValues = [\n    [],\n    [],\n    [\n        -0.5773502691896257,\n        0.5773502691896257645091487805019574556476\n    ],\n    [\n        0,\n        -0.7745966692414834,\n        0.7745966692414833770358530799564799221665\n    ],\n    [\n        -0.33998104358485626,\n        0.3399810435848562648026657591032446872005,\n        -0.8611363115940526,\n        0.8611363115940525752239464888928095050957\n    ],\n    [\n        0,\n        -0.5384693101056831,\n        0.5384693101056830910363144207002088049672,\n        -0.906179845938664,\n        0.9061798459386639927976268782993929651256\n    ],\n    [\n        0.6612093864662645136613995950199053470064,\n        -0.6612093864662645,\n        -0.2386191860831969,\n        0.2386191860831969086305017216807119354186,\n        -0.932469514203152,\n        0.9324695142031520278123015544939946091347\n    ],\n    [\n        0,\n        0.4058451513773971669066064120769614633473,\n        -0.4058451513773972,\n        -0.7415311855993945,\n        0.7415311855993944398638647732807884070741,\n        -0.9491079123427585,\n        0.9491079123427585245261896840478512624007\n    ],\n    [\n        -0.1834346424956498,\n        0.1834346424956498049394761423601839806667,\n        -0.525532409916329,\n        0.5255324099163289858177390491892463490419,\n        -0.7966664774136267,\n        0.7966664774136267395915539364758304368371,\n        -0.9602898564975363,\n        0.9602898564975362316835608685694729904282\n    ],\n    [\n        0,\n        -0.8360311073266358,\n        0.8360311073266357942994297880697348765441,\n        -0.9681602395076261,\n        0.9681602395076260898355762029036728700494,\n        -0.3242534234038089,\n        0.3242534234038089290385380146433366085719,\n        -0.6133714327005904,\n        0.6133714327005903973087020393414741847857\n    ],\n    [\n        -0.14887433898163122,\n        0.1488743389816312108848260011297199846175,\n        -0.4333953941292472,\n        0.4333953941292471907992659431657841622,\n        -0.6794095682990244,\n        0.6794095682990244062343273651148735757692,\n        -0.8650633666889845,\n        0.8650633666889845107320966884234930485275,\n        -0.9739065285171717,\n        0.9739065285171717200779640120844520534282\n    ],\n    [\n        0,\n        -0.26954315595234496,\n        0.2695431559523449723315319854008615246796,\n        -0.5190961292068118,\n        0.5190961292068118159257256694586095544802,\n        -0.7301520055740494,\n        0.7301520055740493240934162520311534580496,\n        -0.8870625997680953,\n        0.8870625997680952990751577693039272666316,\n        -0.978228658146057,\n        0.9782286581460569928039380011228573907714\n    ],\n    [\n        -0.1252334085114689,\n        0.1252334085114689154724413694638531299833,\n        -0.3678314989981802,\n        0.3678314989981801937526915366437175612563,\n        -0.5873179542866175,\n        0.587317954286617447296702418940534280369,\n        -0.7699026741943047,\n        0.7699026741943046870368938332128180759849,\n        -0.9041172563704749,\n        0.9041172563704748566784658661190961925375,\n        -0.9815606342467192,\n        0.9815606342467192506905490901492808229601\n    ],\n    [\n        0,\n        -0.2304583159551348,\n        0.2304583159551347940655281210979888352115,\n        -0.44849275103644687,\n        0.4484927510364468528779128521276398678019,\n        -0.6423493394403402,\n        0.6423493394403402206439846069955156500716,\n        -0.8015780907333099,\n        0.8015780907333099127942064895828598903056,\n        -0.9175983992229779,\n        0.9175983992229779652065478365007195123904,\n        -0.9841830547185881,\n        0.9841830547185881494728294488071096110649\n    ],\n    [\n        -0.10805494870734367,\n        0.1080549487073436620662446502198347476119,\n        -0.31911236892788974,\n        0.3191123689278897604356718241684754668342,\n        -0.5152486363581541,\n        0.5152486363581540919652907185511886623088,\n        -0.6872929048116855,\n        0.6872929048116854701480198030193341375384,\n        -0.827201315069765,\n        0.8272013150697649931897947426503949610397,\n        -0.9284348836635735,\n        0.928434883663573517336391139377874264477,\n        -0.9862838086968123,\n        0.986283808696812338841597266704052801676\n    ],\n    [\n        0,\n        -0.20119409399743451,\n        0.2011940939974345223006283033945962078128,\n        -0.3941513470775634,\n        0.3941513470775633698972073709810454683627,\n        -0.5709721726085388,\n        0.5709721726085388475372267372539106412383,\n        -0.7244177313601701,\n        0.7244177313601700474161860546139380096308,\n        -0.8482065834104272,\n        0.8482065834104272162006483207742168513662,\n        -0.937273392400706,\n        0.9372733924007059043077589477102094712439,\n        -0.9879925180204854,\n        0.9879925180204854284895657185866125811469\n    ],\n    [\n        -0.09501250983763744,\n        0.0950125098376374401853193354249580631303,\n        -0.2816035507792589,\n        0.281603550779258913230460501460496106486,\n        -0.45801677765722737,\n        0.45801677765722738634241944298357757354,\n        -0.6178762444026438,\n        0.6178762444026437484466717640487910189918,\n        -0.755404408355003,\n        0.7554044083550030338951011948474422683538,\n        -0.8656312023878318,\n        0.8656312023878317438804678977123931323873,\n        -0.9445750230732326,\n        0.9445750230732325760779884155346083450911,\n        -0.9894009349916499,\n        0.9894009349916499325961541734503326274262\n    ],\n    [\n        0,\n        -0.17848418149584785,\n        0.1784841814958478558506774936540655574754,\n        -0.3512317634538763,\n        0.3512317634538763152971855170953460050405,\n        -0.5126905370864769,\n        0.5126905370864769678862465686295518745829,\n        -0.6576711592166907,\n        0.6576711592166907658503022166430023351478,\n        -0.7815140038968014,\n        0.7815140038968014069252300555204760502239,\n        -0.8802391537269859,\n        0.8802391537269859021229556944881556926234,\n        -0.9506755217687678,\n        0.9506755217687677612227169578958030214433,\n        -0.9905754753144174,\n        0.9905754753144173356754340199406652765077\n    ],\n    [\n        -0.0847750130417353,\n        0.0847750130417353012422618529357838117333,\n        -0.2518862256915055,\n        0.2518862256915055095889728548779112301628,\n        -0.41175116146284263,\n        0.4117511614628426460359317938330516370789,\n        -0.5597708310739475,\n        0.5597708310739475346078715485253291369276,\n        -0.6916870430603532,\n        0.6916870430603532078748910812888483894522,\n        -0.8037049589725231,\n        0.8037049589725231156824174550145907971032,\n        -0.8926024664975557,\n        0.8926024664975557392060605911271455154078,\n        -0.9558239495713977,\n        0.9558239495713977551811958929297763099728,\n        -0.9915651684209309,\n        0.9915651684209309467300160047061507702525\n    ],\n    [\n        0,\n        -0.16035864564022537,\n        0.1603586456402253758680961157407435495048,\n        -0.31656409996362983,\n        0.3165640999636298319901173288498449178922,\n        -0.46457074137596094,\n        0.4645707413759609457172671481041023679762,\n        -0.600545304661681,\n        0.6005453046616810234696381649462392798683,\n        -0.7209661773352294,\n        0.7209661773352293786170958608237816296571,\n        -0.8227146565371428,\n        0.8227146565371428249789224867127139017745,\n        -0.9031559036148179,\n        0.9031559036148179016426609285323124878093,\n        -0.96020815213483,\n        0.960208152134830030852778840687651526615,\n        -0.9924068438435844,\n        0.9924068438435844031890176702532604935893\n    ],\n    [\n        -0.07652652113349734,\n        0.0765265211334973337546404093988382110047,\n        -0.22778585114164507,\n        0.227785851141645078080496195368574624743,\n        -0.37370608871541955,\n        0.3737060887154195606725481770249272373957,\n        -0.5108670019508271,\n        0.5108670019508270980043640509552509984254,\n        -0.636053680726515,\n        0.6360536807265150254528366962262859367433,\n        -0.7463319064601508,\n        0.7463319064601507926143050703556415903107,\n        -0.8391169718222188,\n        0.8391169718222188233945290617015206853296,\n        -0.912234428251326,\n        0.9122344282513259058677524412032981130491,\n        -0.9639719272779138,\n        0.963971927277913791267666131197277221912,\n        -0.9931285991850949,\n        0.9931285991850949247861223884713202782226\n    ],\n    [\n        0,\n        -0.1455618541608951,\n        0.1455618541608950909370309823386863301163,\n        -0.2880213168024011,\n        0.288021316802401096600792516064600319909,\n        -0.4243421202074388,\n        0.4243421202074387835736688885437880520964,\n        -0.5516188358872198,\n        0.551618835887219807059018796724313286622,\n        -0.6671388041974123,\n        0.667138804197412319305966669990339162597,\n        -0.7684399634756779,\n        0.7684399634756779086158778513062280348209,\n        -0.8533633645833173,\n        0.8533633645833172836472506385875676702761,\n        -0.9200993341504008,\n        0.9200993341504008287901871337149688941591,\n        -0.9672268385663063,\n        0.9672268385663062943166222149076951614246,\n        -0.9937521706203895,\n        0.9937521706203895002602420359379409291933\n    ],\n    [\n        -0.06973927331972223,\n        0.0697392733197222212138417961186280818222,\n        -0.20786042668822127,\n        0.2078604266882212854788465339195457342156,\n        -0.34193582089208424,\n        0.3419358208920842251581474204273796195591,\n        -0.469355837986757,\n        0.4693558379867570264063307109664063460953,\n        -0.5876404035069116,\n        0.5876404035069115929588769276386473488776,\n        -0.6944872631866827,\n        0.6944872631866827800506898357622567712673,\n        -0.7878168059792081,\n        0.7878168059792081620042779554083515213881,\n        -0.8658125777203002,\n        0.8658125777203001365364256370193787290847,\n        -0.926956772187174,\n        0.9269567721871740005206929392590531966353,\n        -0.9700604978354287,\n        0.9700604978354287271239509867652687108059,\n        -0.9942945854823992,\n        0.994294585482399292073031421161298980393\n    ],\n    [\n        0,\n        -0.1332568242984661,\n        0.1332568242984661109317426822417661370104,\n        -0.26413568097034495,\n        0.264135680970344930533869538283309602979,\n        -0.3903010380302908,\n        0.390301038030290831421488872880605458578,\n        -0.5095014778460075,\n        0.5095014778460075496897930478668464305448,\n        -0.6196098757636461,\n        0.6196098757636461563850973116495956533871,\n        -0.7186613631319502,\n        0.7186613631319501944616244837486188483299,\n        -0.8048884016188399,\n        0.8048884016188398921511184069967785579414,\n        -0.8767523582704416,\n        0.8767523582704416673781568859341456716389,\n        -0.9329710868260161,\n        0.9329710868260161023491969890384229782357,\n        -0.9725424712181152,\n        0.9725424712181152319560240768207773751816,\n        -0.9947693349975522,\n        0.9947693349975521235239257154455743605736\n    ],\n    [\n        -0.06405689286260563,\n        0.0640568928626056260850430826247450385909,\n        -0.1911188674736163,\n        0.1911188674736163091586398207570696318404,\n        -0.3150426796961634,\n        0.3150426796961633743867932913198102407864,\n        -0.4337935076260451,\n        0.4337935076260451384870842319133497124524,\n        -0.5454214713888396,\n        0.5454214713888395356583756172183723700107,\n        -0.6480936519369755,\n        0.6480936519369755692524957869107476266696,\n        -0.7401241915785544,\n        0.7401241915785543642438281030999784255232,\n        -0.820001985973903,\n        0.8200019859739029219539498726697452080761,\n        -0.8864155270044011,\n        0.8864155270044010342131543419821967550873,\n        -0.9382745520027328,\n        0.9382745520027327585236490017087214496548,\n        -0.9747285559713095,\n        0.9747285559713094981983919930081690617411,\n        -0.9951872199970213,\n        0.9951872199970213601799974097007368118745\n    ]\n];\n$c3ba1e298013d19b$exports.cValues = [\n    [],\n    [],\n    [\n        1.0,\n        1.0\n    ],\n    [\n        0.8888888888888888888888888888888888888888,\n        0.5555555555555555555555555555555555555555,\n        0.5555555555555555555555555555555555555555\n    ],\n    [\n        0.6521451548625461426269360507780005927646,\n        0.6521451548625461426269360507780005927646,\n        0.3478548451374538573730639492219994072353,\n        0.3478548451374538573730639492219994072353\n    ],\n    [\n        0.5688888888888888888888888888888888888888,\n        0.4786286704993664680412915148356381929122,\n        0.4786286704993664680412915148356381929122,\n        0.2369268850561890875142640407199173626432,\n        0.2369268850561890875142640407199173626432\n    ],\n    [\n        0.3607615730481386075698335138377161116615,\n        0.3607615730481386075698335138377161116615,\n        0.4679139345726910473898703439895509948116,\n        0.4679139345726910473898703439895509948116,\n        0.1713244923791703450402961421727328935268,\n        0.1713244923791703450402961421727328935268\n    ],\n    [\n        0.4179591836734693877551020408163265306122,\n        0.3818300505051189449503697754889751338783,\n        0.3818300505051189449503697754889751338783,\n        0.2797053914892766679014677714237795824869,\n        0.2797053914892766679014677714237795824869,\n        0.1294849661688696932706114326790820183285,\n        0.1294849661688696932706114326790820183285\n    ],\n    [\n        0.3626837833783619829651504492771956121941,\n        0.3626837833783619829651504492771956121941,\n        0.3137066458778872873379622019866013132603,\n        0.3137066458778872873379622019866013132603,\n        0.2223810344533744705443559944262408844301,\n        0.2223810344533744705443559944262408844301,\n        0.1012285362903762591525313543099621901153,\n        0.1012285362903762591525313543099621901153\n    ],\n    [\n        0.3302393550012597631645250692869740488788,\n        0.1806481606948574040584720312429128095143,\n        0.1806481606948574040584720312429128095143,\n        0.0812743883615744119718921581105236506756,\n        0.0812743883615744119718921581105236506756,\n        0.3123470770400028400686304065844436655987,\n        0.3123470770400028400686304065844436655987,\n        0.2606106964029354623187428694186328497718,\n        0.2606106964029354623187428694186328497718\n    ],\n    [\n        0.295524224714752870173892994651338329421,\n        0.295524224714752870173892994651338329421,\n        0.2692667193099963550912269215694693528597,\n        0.2692667193099963550912269215694693528597,\n        0.2190863625159820439955349342281631924587,\n        0.2190863625159820439955349342281631924587,\n        0.1494513491505805931457763396576973324025,\n        0.1494513491505805931457763396576973324025,\n        0.0666713443086881375935688098933317928578,\n        0.0666713443086881375935688098933317928578\n    ],\n    [\n        0.272925086777900630714483528336342189156,\n        0.2628045445102466621806888698905091953727,\n        0.2628045445102466621806888698905091953727,\n        0.2331937645919904799185237048431751394317,\n        0.2331937645919904799185237048431751394317,\n        0.1862902109277342514260976414316558916912,\n        0.1862902109277342514260976414316558916912,\n        0.1255803694649046246346942992239401001976,\n        0.1255803694649046246346942992239401001976,\n        0.0556685671161736664827537204425485787285,\n        0.0556685671161736664827537204425485787285\n    ],\n    [\n        0.2491470458134027850005624360429512108304,\n        0.2491470458134027850005624360429512108304,\n        0.2334925365383548087608498989248780562594,\n        0.2334925365383548087608498989248780562594,\n        0.2031674267230659217490644558097983765065,\n        0.2031674267230659217490644558097983765065,\n        0.160078328543346226334652529543359071872,\n        0.160078328543346226334652529543359071872,\n        0.1069393259953184309602547181939962242145,\n        0.1069393259953184309602547181939962242145,\n        0.047175336386511827194615961485017060317,\n        0.047175336386511827194615961485017060317\n    ],\n    [\n        0.2325515532308739101945895152688359481566,\n        0.2262831802628972384120901860397766184347,\n        0.2262831802628972384120901860397766184347,\n        0.2078160475368885023125232193060527633865,\n        0.2078160475368885023125232193060527633865,\n        0.1781459807619457382800466919960979955128,\n        0.1781459807619457382800466919960979955128,\n        0.1388735102197872384636017768688714676218,\n        0.1388735102197872384636017768688714676218,\n        0.0921214998377284479144217759537971209236,\n        0.0921214998377284479144217759537971209236,\n        0.0404840047653158795200215922009860600419,\n        0.0404840047653158795200215922009860600419\n    ],\n    [\n        0.2152638534631577901958764433162600352749,\n        0.2152638534631577901958764433162600352749,\n        0.2051984637212956039659240656612180557103,\n        0.2051984637212956039659240656612180557103,\n        0.1855383974779378137417165901251570362489,\n        0.1855383974779378137417165901251570362489,\n        0.1572031671581935345696019386238421566056,\n        0.1572031671581935345696019386238421566056,\n        0.1215185706879031846894148090724766259566,\n        0.1215185706879031846894148090724766259566,\n        0.0801580871597602098056332770628543095836,\n        0.0801580871597602098056332770628543095836,\n        0.0351194603317518630318328761381917806197,\n        0.0351194603317518630318328761381917806197\n    ],\n    [\n        0.2025782419255612728806201999675193148386,\n        0.1984314853271115764561183264438393248186,\n        0.1984314853271115764561183264438393248186,\n        0.1861610000155622110268005618664228245062,\n        0.1861610000155622110268005618664228245062,\n        0.1662692058169939335532008604812088111309,\n        0.1662692058169939335532008604812088111309,\n        0.1395706779261543144478047945110283225208,\n        0.1395706779261543144478047945110283225208,\n        0.1071592204671719350118695466858693034155,\n        0.1071592204671719350118695466858693034155,\n        0.0703660474881081247092674164506673384667,\n        0.0703660474881081247092674164506673384667,\n        0.0307532419961172683546283935772044177217,\n        0.0307532419961172683546283935772044177217\n    ],\n    [\n        0.1894506104550684962853967232082831051469,\n        0.1894506104550684962853967232082831051469,\n        0.1826034150449235888667636679692199393835,\n        0.1826034150449235888667636679692199393835,\n        0.1691565193950025381893120790303599622116,\n        0.1691565193950025381893120790303599622116,\n        0.1495959888165767320815017305474785489704,\n        0.1495959888165767320815017305474785489704,\n        0.1246289712555338720524762821920164201448,\n        0.1246289712555338720524762821920164201448,\n        0.0951585116824927848099251076022462263552,\n        0.0951585116824927848099251076022462263552,\n        0.0622535239386478928628438369943776942749,\n        0.0622535239386478928628438369943776942749,\n        0.0271524594117540948517805724560181035122,\n        0.0271524594117540948517805724560181035122\n    ],\n    [\n        0.1794464703562065254582656442618856214487,\n        0.1765627053669926463252709901131972391509,\n        0.1765627053669926463252709901131972391509,\n        0.1680041021564500445099706637883231550211,\n        0.1680041021564500445099706637883231550211,\n        0.1540457610768102880814315948019586119404,\n        0.1540457610768102880814315948019586119404,\n        0.1351363684685254732863199817023501973721,\n        0.1351363684685254732863199817023501973721,\n        0.1118838471934039710947883856263559267358,\n        0.1118838471934039710947883856263559267358,\n        0.0850361483171791808835353701910620738504,\n        0.0850361483171791808835353701910620738504,\n        0.0554595293739872011294401653582446605128,\n        0.0554595293739872011294401653582446605128,\n        0.0241483028685479319601100262875653246916,\n        0.0241483028685479319601100262875653246916\n    ],\n    [\n        0.1691423829631435918406564701349866103341,\n        0.1691423829631435918406564701349866103341,\n        0.1642764837458327229860537764659275904123,\n        0.1642764837458327229860537764659275904123,\n        0.1546846751262652449254180038363747721932,\n        0.1546846751262652449254180038363747721932,\n        0.1406429146706506512047313037519472280955,\n        0.1406429146706506512047313037519472280955,\n        0.1225552067114784601845191268002015552281,\n        0.1225552067114784601845191268002015552281,\n        0.1009420441062871655628139849248346070628,\n        0.1009420441062871655628139849248346070628,\n        0.0764257302548890565291296776166365256053,\n        0.0764257302548890565291296776166365256053,\n        0.0497145488949697964533349462026386416808,\n        0.0497145488949697964533349462026386416808,\n        0.0216160135264833103133427102664524693876,\n        0.0216160135264833103133427102664524693876\n    ],\n    [\n        0.1610544498487836959791636253209167350399,\n        0.1589688433939543476499564394650472016787,\n        0.1589688433939543476499564394650472016787,\n        0.152766042065859666778855400897662998461,\n        0.152766042065859666778855400897662998461,\n        0.1426067021736066117757461094419029724756,\n        0.1426067021736066117757461094419029724756,\n        0.1287539625393362276755157848568771170558,\n        0.1287539625393362276755157848568771170558,\n        0.1115666455473339947160239016817659974813,\n        0.1115666455473339947160239016817659974813,\n        0.0914900216224499994644620941238396526609,\n        0.0914900216224499994644620941238396526609,\n        0.0690445427376412265807082580060130449618,\n        0.0690445427376412265807082580060130449618,\n        0.0448142267656996003328381574019942119517,\n        0.0448142267656996003328381574019942119517,\n        0.0194617882297264770363120414644384357529,\n        0.0194617882297264770363120414644384357529\n    ],\n    [\n        0.1527533871307258506980843319550975934919,\n        0.1527533871307258506980843319550975934919,\n        0.1491729864726037467878287370019694366926,\n        0.1491729864726037467878287370019694366926,\n        0.1420961093183820513292983250671649330345,\n        0.1420961093183820513292983250671649330345,\n        0.1316886384491766268984944997481631349161,\n        0.1316886384491766268984944997481631349161,\n        0.118194531961518417312377377711382287005,\n        0.118194531961518417312377377711382287005,\n        0.1019301198172404350367501354803498761666,\n        0.1019301198172404350367501354803498761666,\n        0.0832767415767047487247581432220462061001,\n        0.0832767415767047487247581432220462061001,\n        0.0626720483341090635695065351870416063516,\n        0.0626720483341090635695065351870416063516,\n        0.040601429800386941331039952274932109879,\n        0.040601429800386941331039952274932109879,\n        0.0176140071391521183118619623518528163621,\n        0.0176140071391521183118619623518528163621\n    ],\n    [\n        0.1460811336496904271919851476833711882448,\n        0.1445244039899700590638271665537525436099,\n        0.1445244039899700590638271665537525436099,\n        0.1398873947910731547221334238675831108927,\n        0.1398873947910731547221334238675831108927,\n        0.132268938633337461781052574496775604329,\n        0.132268938633337461781052574496775604329,\n        0.1218314160537285341953671771257335983563,\n        0.1218314160537285341953671771257335983563,\n        0.1087972991671483776634745780701056420336,\n        0.1087972991671483776634745780701056420336,\n        0.0934444234560338615532897411139320884835,\n        0.0934444234560338615532897411139320884835,\n        0.0761001136283793020170516533001831792261,\n        0.0761001136283793020170516533001831792261,\n        0.0571344254268572082836358264724479574912,\n        0.0571344254268572082836358264724479574912,\n        0.0369537897708524937999506682993296661889,\n        0.0369537897708524937999506682993296661889,\n        0.0160172282577743333242246168584710152658,\n        0.0160172282577743333242246168584710152658\n    ],\n    [\n        0.1392518728556319933754102483418099578739,\n        0.1392518728556319933754102483418099578739,\n        0.1365414983460151713525738312315173965863,\n        0.1365414983460151713525738312315173965863,\n        0.1311735047870623707329649925303074458757,\n        0.1311735047870623707329649925303074458757,\n        0.1232523768105124242855609861548144719594,\n        0.1232523768105124242855609861548144719594,\n        0.1129322960805392183934006074217843191142,\n        0.1129322960805392183934006074217843191142,\n        0.1004141444428809649320788378305362823508,\n        0.1004141444428809649320788378305362823508,\n        0.0859416062170677274144436813727028661891,\n        0.0859416062170677274144436813727028661891,\n        0.0697964684245204880949614189302176573987,\n        0.0697964684245204880949614189302176573987,\n        0.0522933351526832859403120512732112561121,\n        0.0522933351526832859403120512732112561121,\n        0.0337749015848141547933022468659129013491,\n        0.0337749015848141547933022468659129013491,\n        0.0146279952982722006849910980471854451902,\n        0.0146279952982722006849910980471854451902\n    ],\n    [\n        0.1336545721861061753514571105458443385831,\n        0.132462039404696617371642464703316925805,\n        0.132462039404696617371642464703316925805,\n        0.1289057221880821499785953393997936532597,\n        0.1289057221880821499785953393997936532597,\n        0.1230490843067295304675784006720096548158,\n        0.1230490843067295304675784006720096548158,\n        0.1149966402224113649416435129339613014914,\n        0.1149966402224113649416435129339613014914,\n        0.1048920914645414100740861850147438548584,\n        0.1048920914645414100740861850147438548584,\n        0.0929157660600351474770186173697646486034,\n        0.0929157660600351474770186173697646486034,\n        0.0792814117767189549228925247420432269137,\n        0.0792814117767189549228925247420432269137,\n        0.0642324214085258521271696151589109980391,\n        0.0642324214085258521271696151589109980391,\n        0.0480376717310846685716410716320339965612,\n        0.0480376717310846685716410716320339965612,\n        0.0309880058569794443106942196418845053837,\n        0.0309880058569794443106942196418845053837,\n        0.0134118594871417720813094934586150649766,\n        0.0134118594871417720813094934586150649766\n    ],\n    [\n        0.1279381953467521569740561652246953718517,\n        0.1279381953467521569740561652246953718517,\n        0.1258374563468282961213753825111836887264,\n        0.1258374563468282961213753825111836887264,\n        0.121670472927803391204463153476262425607,\n        0.121670472927803391204463153476262425607,\n        0.1155056680537256013533444839067835598622,\n        0.1155056680537256013533444839067835598622,\n        0.1074442701159656347825773424466062227946,\n        0.1074442701159656347825773424466062227946,\n        0.0976186521041138882698806644642471544279,\n        0.0976186521041138882698806644642471544279,\n        0.086190161531953275917185202983742667185,\n        0.086190161531953275917185202983742667185,\n        0.0733464814110803057340336152531165181193,\n        0.0733464814110803057340336152531165181193,\n        0.0592985849154367807463677585001085845412,\n        0.0592985849154367807463677585001085845412,\n        0.0442774388174198061686027482113382288593,\n        0.0442774388174198061686027482113382288593,\n        0.0285313886289336631813078159518782864491,\n        0.0285313886289336631813078159518782864491,\n        0.0123412297999871995468056670700372915759,\n        0.0123412297999871995468056670700372915759\n    ]\n];\n$c3ba1e298013d19b$exports.binomialCoefficients = [\n    [\n        1\n    ],\n    [\n        1,\n        1\n    ],\n    [\n        1,\n        2,\n        1\n    ],\n    [\n        1,\n        3,\n        3,\n        1\n    ]\n];\nconst $c3ba1e298013d19b$var$getCubicArcLength = (xs, ys, t)=>{\n    let z;\n    let sum;\n    let correctedT;\n    const n = 20;\n    z = t / 2;\n    sum = 0;\n    for(let i = 0; i < n; i++){\n        correctedT = z * $c3ba1e298013d19b$exports.tValues[n][i] + z;\n        sum += $c3ba1e298013d19b$exports.cValues[n][i] * $c3ba1e298013d19b$var$BFunc(xs, ys, correctedT);\n    }\n    return z * sum;\n};\n$c3ba1e298013d19b$exports.getCubicArcLength = $c3ba1e298013d19b$var$getCubicArcLength;\nconst $c3ba1e298013d19b$var$getQuadraticArcLength = (xs, ys, t)=>{\n    if (t === undefined) t = 1;\n    const ax = xs[0] - 2 * xs[1] + xs[2];\n    const ay = ys[0] - 2 * ys[1] + ys[2];\n    const bx = 2 * xs[1] - 2 * xs[0];\n    const by = 2 * ys[1] - 2 * ys[0];\n    const A = 4 * (ax * ax + ay * ay);\n    const B = 4 * (ax * bx + ay * by);\n    const C = bx * bx + by * by;\n    if (A === 0) return t * Math.sqrt(Math.pow(xs[2] - xs[0], 2) + Math.pow(ys[2] - ys[0], 2));\n    const b = B / (2 * A);\n    const c = C / A;\n    const u = t + b;\n    const k = c - b * b;\n    const uuk = u * u + k > 0 ? Math.sqrt(u * u + k) : 0;\n    const bbk = b * b + k > 0 ? Math.sqrt(b * b + k) : 0;\n    const term = b + Math.sqrt(b * b + k) !== 0 ? k * Math.log(Math.abs((u + uuk) / (b + bbk))) : 0;\n    return Math.sqrt(A) / 2 * (u * uuk - b * bbk + term);\n};\n$c3ba1e298013d19b$exports.getQuadraticArcLength = $c3ba1e298013d19b$var$getQuadraticArcLength;\nfunction $c3ba1e298013d19b$var$BFunc(xs, ys, t) {\n    const xbase = $c3ba1e298013d19b$var$getDerivative(1, t, xs);\n    const ybase = $c3ba1e298013d19b$var$getDerivative(1, t, ys);\n    const combined = xbase * xbase + ybase * ybase;\n    return Math.sqrt(combined);\n}\nconst $c3ba1e298013d19b$var$getDerivative = (derivative, t, vs)=>{\n    const n = vs.length - 1;\n    let _vs;\n    let value;\n    if (n === 0) return 0;\n    if (derivative === 0) {\n        value = 0;\n        for(let k = 0; k <= n; k++)value += $c3ba1e298013d19b$exports.binomialCoefficients[n][k] * Math.pow(1 - t, n - k) * Math.pow(t, k) * vs[k];\n        return value;\n    } else {\n        _vs = new Array(n);\n        for(let k = 0; k < n; k++)_vs[k] = n * (vs[k + 1] - vs[k]);\n        return $c3ba1e298013d19b$var$getDerivative(derivative - 1, t, _vs);\n    }\n};\nconst $c3ba1e298013d19b$var$t2length = (length, totalLength, func)=>{\n    let error = 1;\n    let t = length / totalLength;\n    let step = (length - func(t)) / totalLength;\n    let numIterations = 0;\n    while(error > 0.001){\n        const increasedTLength = func(t + step);\n        const increasedTError = Math.abs(length - increasedTLength) / totalLength;\n        if (increasedTError < error) {\n            error = increasedTError;\n            t += step;\n        } else {\n            const decreasedTLength = func(t - step);\n            const decreasedTError = Math.abs(length - decreasedTLength) / totalLength;\n            if (decreasedTError < error) {\n                error = decreasedTError;\n                t -= step;\n            } else step /= 2;\n        }\n        numIterations++;\n        if (numIterations > 500) break;\n    }\n    return t;\n};\n$c3ba1e298013d19b$exports.t2length = $c3ba1e298013d19b$var$t2length;\n\n\nclass $b423ec4e2dd4644d$var$Path extends $8173247af08db530$exports.Shape {\n    constructor(config){\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this._readDataAttribute();\n        this.on(\"dataChange.konva\", function() {\n            this._readDataAttribute();\n        });\n    }\n    _readDataAttribute() {\n        this.dataArray = $b423ec4e2dd4644d$var$Path.parsePathData(this.data());\n        this.pathLength = $b423ec4e2dd4644d$var$Path.getPathLength(this.dataArray);\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for(var n = 0; n < ca.length; n++){\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch(c){\n                case \"L\":\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case \"M\":\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case \"C\":\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case \"Q\":\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case \"A\":\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case \"z\":\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) context.strokeShape(this);\n        else context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function(data) {\n            if (data.command === \"A\") {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) inc = Math.abs(start - end);\n                if (dTheta < 0) for(let t = start - inc; t > end; t -= inc){\n                    const point = $b423ec4e2dd4644d$var$Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                    points.push(point.x, point.y);\n                }\n                else for(let t = start + inc; t < end; t += inc){\n                    const point = $b423ec4e2dd4644d$var$Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                    points.push(point.x, point.y);\n                }\n            } else if (data.command === \"C\") for(let t = 0.0; t <= 1; t += 0.01){\n                const point = $b423ec4e2dd4644d$var$Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                points.push(point.x, point.y);\n            }\n            else points = points.concat(data.points);\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for(var i = 0; i < points.length / 2; i++){\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        return $b423ec4e2dd4644d$var$Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPathLength(dataArray) {\n        let pathLength = 0;\n        for(var i = 0; i < dataArray.length; ++i)pathLength += dataArray[i].pathLength;\n        return pathLength;\n    }\n    static getPointAtLengthOfDataArray(length, dataArray) {\n        var point, i = 0, ii = dataArray.length;\n        if (!ii) return null;\n        while(i < ii && length > dataArray[i].pathLength){\n            length -= dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        if (length < 0.01) {\n            point = dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        var cp = dataArray[i];\n        var p = cp.points;\n        switch(cp.command){\n            case \"L\":\n                return $b423ec4e2dd4644d$var$Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case \"C\":\n                return $b423ec4e2dd4644d$var$Path.getPointOnCubicBezier((0, $c3ba1e298013d19b$exports.t2length)(length, $b423ec4e2dd4644d$var$Path.getPathLength(dataArray), (i)=>{\n                    return (0, $c3ba1e298013d19b$exports.getCubicArcLength)([\n                        cp.start.x,\n                        p[0],\n                        p[2],\n                        p[4]\n                    ], [\n                        cp.start.y,\n                        p[1],\n                        p[3],\n                        p[5]\n                    ], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case \"Q\":\n                return $b423ec4e2dd4644d$var$Path.getPointOnQuadraticBezier((0, $c3ba1e298013d19b$exports.t2length)(length, $b423ec4e2dd4644d$var$Path.getPathLength(dataArray), (i)=>{\n                    return (0, $c3ba1e298013d19b$exports.getQuadraticArcLength)([\n                        cp.start.x,\n                        p[0],\n                        p[2]\n                    ], [\n                        cp.start.y,\n                        p[1],\n                        p[3]\n                    ], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case \"A\":\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += dTheta * length / cp.pathLength;\n                return $b423ec4e2dd4644d$var$Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) fromX = P1x;\n        if (fromY === undefined) fromY = P1y;\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt(dist * dist / (1 + m * m));\n        if (P2x < P1x) run *= -1;\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) pt = {\n            x: fromX,\n            y: fromY + rise\n        };\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) pt = {\n            x: fromX + run,\n            y: fromY + rise\n        };\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt(pRun * pRun / (1 + m * m));\n            if (P2x < P1x) run *= -1;\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta)\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n        };\n    }\n    static parsePathData(data) {\n        if (!data) return [];\n        var cs = data;\n        var cc = [\n            \"m\",\n            \"M\",\n            \"l\",\n            \"L\",\n            \"v\",\n            \"V\",\n            \"h\",\n            \"H\",\n            \"z\",\n            \"Z\",\n            \"c\",\n            \"C\",\n            \"q\",\n            \"Q\",\n            \"t\",\n            \"T\",\n            \"s\",\n            \"S\",\n            \"a\",\n            \"A\"\n        ];\n        cs = cs.replace(new RegExp(\" \", \"g\"), \",\");\n        for(var n = 0; n < cc.length; n++)cs = cs.replace(new RegExp(cc[n], \"g\"), \"|\" + cc[n]);\n        var arr = cs.split(\"|\");\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for(n = 1; n < arr.length; n++){\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while(match = re.exec(str))coords.push(match[0]);\n            var p = [];\n            for(var j = 0, jlen = coords.length; j < jlen; j++){\n                if (coords[j] === \"00\") {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) p.push(parsed);\n                else p.push(0);\n            }\n            while(p.length > 0){\n                if (isNaN(p[0])) break;\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch(c){\n                    case \"l\":\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"L\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"L\":\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \"m\":\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = \"M\";\n                        if (ca.length > 2 && ca[ca.length - 1].command === \"z\") {\n                            for(var idx = ca.length - 2; idx >= 0; idx--)if (ca[idx].command === \"M\") {\n                                cpx = ca[idx].points[0] + dx;\n                                cpy = ca[idx].points[1] + dy;\n                                break;\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = \"l\";\n                        break;\n                    case \"M\":\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \"M\";\n                        points.push(cpx, cpy);\n                        c = \"L\";\n                        break;\n                    case \"h\":\n                        cpx += p.shift();\n                        cmd = \"L\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"H\":\n                        cpx = p.shift();\n                        cmd = \"L\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"v\":\n                        cpy += p.shift();\n                        cmd = \"L\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"V\":\n                        cpy = p.shift();\n                        cmd = \"L\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"C\":\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \"c\":\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"C\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"S\":\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \"C\") {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \"C\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"s\":\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \"C\") {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"C\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"Q\":\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case \"q\":\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"Q\";\n                        points.push(cpx, cpy);\n                        break;\n                    case \"T\":\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \"Q\") {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \"Q\";\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case \"t\":\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === \"Q\") {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"Q\";\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case \"A\":\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = \"A\";\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case \"a\":\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = \"A\";\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points)\n                });\n            }\n            if (c === \"z\" || c === \"Z\") ca.push({\n                command: \"z\",\n                points: [],\n                start: undefined,\n                pathLength: 0\n            });\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = $b423ec4e2dd4644d$var$Path;\n        switch(cmd){\n            case \"L\":\n                return path.getLineLength(x, y, points[0], points[1]);\n            case \"C\":\n                return (0, $c3ba1e298013d19b$exports.getCubicArcLength)([\n                    x,\n                    points[0],\n                    points[2],\n                    points[4]\n                ], [\n                    y,\n                    points[1],\n                    points[3],\n                    points[5]\n                ], 1);\n            case \"Q\":\n                return (0, $c3ba1e298013d19b$exports.getQuadraticArcLength)([\n                    x,\n                    points[0],\n                    points[2]\n                ], [\n                    y,\n                    points[1],\n                    points[3]\n                ], 1);\n            case \"A\":\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) inc = Math.abs(start - end);\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) for(t = start - inc; t > end; t -= inc){\n                    p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                else for(t = start + inc; t < end; t += inc){\n                    p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n        var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) f *= -1;\n        if (isNaN(f)) f = 0;\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function(v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function(u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function(u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([\n            1,\n            0\n        ], [\n            (xp - cxp) / rx,\n            (yp - cyp) / ry\n        ]);\n        var u = [\n            (xp - cxp) / rx,\n            (yp - cyp) / ry\n        ];\n        var v = [\n            (-1 * xp - cxp) / rx,\n            (-1 * yp - cyp) / ry\n        ];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) dTheta = Math.PI;\n        if (vRatio(u, v) >= 1) dTheta = 0;\n        if (fs === 0 && dTheta > 0) dTheta = dTheta - 2 * Math.PI;\n        if (fs === 1 && dTheta < 0) dTheta = dTheta + 2 * Math.PI;\n        return [\n            cx,\n            cy,\n            rx,\n            ry,\n            theta,\n            dTheta,\n            psi,\n            fs\n        ];\n    }\n}\n$b423ec4e2dd4644d$exports.Path = $b423ec4e2dd4644d$var$Path;\n$b423ec4e2dd4644d$var$Path.prototype.className = \"Path\";\n$b423ec4e2dd4644d$var$Path.prototype._attrsAffectingSize = [\n    \"data\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($b423ec4e2dd4644d$var$Path);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($b423ec4e2dd4644d$var$Path, \"data\");\n\n\nclass $d0c80a6fe5fa4728$var$Arrow extends $5217a1f06c18ba48$exports.Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) tp = this.getTensionPoints();\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1]\n            ];\n            const lastLength = $b423ec4e2dd4644d$exports.Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], \"C\", lp);\n            const previous = $b423ec4e2dd4644d$exports.Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        } else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            } else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) this.attrs.dashEnabled = true;\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2\n        };\n    }\n}\n$d0c80a6fe5fa4728$exports.Arrow = $d0c80a6fe5fa4728$var$Arrow;\n$d0c80a6fe5fa4728$var$Arrow.prototype.className = \"Arrow\";\n(0, $3c4258a611a19cfb$exports._registerNode)($d0c80a6fe5fa4728$var$Arrow);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($d0c80a6fe5fa4728$var$Arrow, \"pointerLength\", 10, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($d0c80a6fe5fa4728$var$Arrow, \"pointerWidth\", 10, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($d0c80a6fe5fa4728$var$Arrow, \"pointerAtBeginning\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($d0c80a6fe5fa4728$var$Arrow, \"pointerAtEnding\", true);\n\n\nvar $04480eaa32079d19$exports = {};\n\"use strict\";\nObject.defineProperty($04480eaa32079d19$exports, \"__esModule\", {\n    value: true\n});\n$04480eaa32079d19$exports.Circle = void 0;\n\n\n\n\nclass $04480eaa32079d19$var$Circle extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) this.radius(width / 2);\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) this.radius(height / 2);\n    }\n}\n$04480eaa32079d19$exports.Circle = $04480eaa32079d19$var$Circle;\n$04480eaa32079d19$var$Circle.prototype._centroid = true;\n$04480eaa32079d19$var$Circle.prototype.className = \"Circle\";\n$04480eaa32079d19$var$Circle.prototype._attrsAffectingSize = [\n    \"radius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($04480eaa32079d19$var$Circle);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($04480eaa32079d19$var$Circle, \"radius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $736e07c6c47b1470$exports = {};\n\"use strict\";\nObject.defineProperty($736e07c6c47b1470$exports, \"__esModule\", {\n    value: true\n});\n$736e07c6c47b1470$exports.Ellipse = void 0;\n\n\n\n\nclass $736e07c6c47b1470$var$Ellipse extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) context.scale(1, ry / rx);\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\n$736e07c6c47b1470$exports.Ellipse = $736e07c6c47b1470$var$Ellipse;\n$736e07c6c47b1470$var$Ellipse.prototype.className = \"Ellipse\";\n$736e07c6c47b1470$var$Ellipse.prototype._centroid = true;\n$736e07c6c47b1470$var$Ellipse.prototype._attrsAffectingSize = [\n    \"radiusX\",\n    \"radiusY\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($736e07c6c47b1470$var$Ellipse);\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($736e07c6c47b1470$var$Ellipse, \"radius\", [\n    \"x\",\n    \"y\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($736e07c6c47b1470$var$Ellipse, \"radiusX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($736e07c6c47b1470$var$Ellipse, \"radiusY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $5a9745b05ab2385a$exports = {};\n\"use strict\";\nObject.defineProperty($5a9745b05ab2385a$exports, \"__esModule\", {\n    value: true\n});\n$5a9745b05ab2385a$exports.Image = void 0;\n\n\n\n\n\nclass $5a9745b05ab2385a$var$Image extends $8173247af08db530$exports.Shape {\n    constructor(attrs){\n        super(attrs);\n        this.on(\"imageChange.konva\", ()=>{\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) return;\n        if (image && image.readyState === 4) return;\n        if (image && image[\"addEventListener\"]) image[\"addEventListener\"](\"load\", ()=>{\n            this._requestDraw();\n        });\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const cornerRadius = this.cornerRadius();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) params = [\n                image,\n                this.cropX(),\n                this.cropY(),\n                cropWidth,\n                cropHeight,\n                0,\n                0,\n                width,\n                height\n            ];\n            else params = [\n                image,\n                0,\n                0,\n                width,\n                height\n            ];\n        }\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\n            context.beginPath();\n            cornerRadius ? $27d6a996859d86c8$exports.Util.drawRoundedRectPath(context, width, height, cornerRadius) : context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (cornerRadius) context.clip();\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\n        context.beginPath();\n        if (!cornerRadius) context.rect(0, 0, width, height);\n        else $27d6a996859d86c8$exports.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = $27d6a996859d86c8$exports.Util.createImageElement();\n        img.onload = function() {\n            var image = new $5a9745b05ab2385a$var$Image({\n                image: img\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = \"Anonymous\";\n        img.src = url;\n    }\n}\n$5a9745b05ab2385a$exports.Image = $5a9745b05ab2385a$var$Image;\n$5a9745b05ab2385a$var$Image.prototype.className = \"Image\";\n(0, $3c4258a611a19cfb$exports._registerNode)($5a9745b05ab2385a$var$Image);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"cornerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberOrArrayOfNumbersValidator)(4));\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"image\");\n$9a603088dcd0ec15$exports.Factory.addComponentsGetterSetter($5a9745b05ab2385a$var$Image, \"crop\", [\n    \"x\",\n    \"y\",\n    \"width\",\n    \"height\"\n]);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"cropX\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"cropY\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"cropWidth\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5a9745b05ab2385a$var$Image, \"cropHeight\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $5fe52d077064716d$exports = {};\n\"use strict\";\nObject.defineProperty($5fe52d077064716d$exports, \"__esModule\", {\n    value: true\n});\n$5fe52d077064716d$exports.Tag = $5fe52d077064716d$exports.Label = void 0;\n\n\n\n\n\nvar $5fe52d077064716d$var$ATTR_CHANGE_LIST = [\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontStyle\",\n    \"padding\",\n    \"lineHeight\",\n    \"text\",\n    \"width\",\n    \"height\",\n    \"pointerDirection\",\n    \"pointerWidth\",\n    \"pointerHeight\"\n], $5fe52d077064716d$var$CHANGE_KONVA = \"Change.konva\", $5fe52d077064716d$var$NONE = \"none\", $5fe52d077064716d$var$UP = \"up\", $5fe52d077064716d$var$RIGHT = \"right\", $5fe52d077064716d$var$DOWN = \"down\", $5fe52d077064716d$var$LEFT = \"left\", $5fe52d077064716d$var$attrChangeListLen = $5fe52d077064716d$var$ATTR_CHANGE_LIST.length;\nclass $5fe52d077064716d$var$Label extends $da8e70b72825bd12$exports.Group {\n    constructor(config){\n        super(config);\n        this.on(\"add.konva\", function(evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find(\"Text\")[0];\n    }\n    getTag() {\n        return this.find(\"Tag\")[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function() {\n            that._sync();\n        };\n        for(n = 0; n < $5fe52d077064716d$var$attrChangeListLen; n++)text.on($5fe52d077064716d$var$ATTR_CHANGE_LIST[n] + $5fe52d077064716d$var$CHANGE_KONVA, func);\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch(pointerDirection){\n                case $5fe52d077064716d$var$UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case $5fe52d077064716d$var$RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case $5fe52d077064716d$var$DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case $5fe52d077064716d$var$LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y\n            });\n        }\n    }\n}\n$5fe52d077064716d$exports.Label = $5fe52d077064716d$var$Label;\n$5fe52d077064716d$var$Label.prototype.className = \"Label\";\n(0, $3c4258a611a19cfb$exports._registerNode)($5fe52d077064716d$var$Label);\nclass $5fe52d077064716d$var$Tag extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === \"number\") topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === $5fe52d077064716d$var$UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n        if (pointerDirection === $5fe52d077064716d$var$RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === $5fe52d077064716d$var$DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === $5fe52d077064716d$var$LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === $5fe52d077064716d$var$UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        } else if (direction === $5fe52d077064716d$var$DOWN) height += pointerHeight;\n        else if (direction === $5fe52d077064716d$var$LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        } else if (direction === $5fe52d077064716d$var$RIGHT) width += pointerWidth * 1.5;\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n}\n$5fe52d077064716d$exports.Tag = $5fe52d077064716d$var$Tag;\n$5fe52d077064716d$var$Tag.prototype.className = \"Tag\";\n(0, $3c4258a611a19cfb$exports._registerNode)($5fe52d077064716d$var$Tag);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5fe52d077064716d$var$Tag, \"pointerDirection\", $5fe52d077064716d$var$NONE);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5fe52d077064716d$var$Tag, \"pointerWidth\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5fe52d077064716d$var$Tag, \"pointerHeight\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($5fe52d077064716d$var$Tag, \"cornerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberOrArrayOfNumbersValidator)(4));\n\n\n\n\nvar $07185923f893a775$exports = {};\n\"use strict\";\nObject.defineProperty($07185923f893a775$exports, \"__esModule\", {\n    value: true\n});\n$07185923f893a775$exports.Rect = void 0;\n\n\n\n\n\nclass $07185923f893a775$var$Rect extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) context.rect(0, 0, width, height);\n        else $27d6a996859d86c8$exports.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\n$07185923f893a775$exports.Rect = $07185923f893a775$var$Rect;\n$07185923f893a775$var$Rect.prototype.className = \"Rect\";\n(0, $3c4258a611a19cfb$exports._registerNode)($07185923f893a775$var$Rect);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($07185923f893a775$var$Rect, \"cornerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberOrArrayOfNumbersValidator)(4));\n\n\nvar $0f8c5d6ae2dc1fde$exports = {};\n\"use strict\";\nObject.defineProperty($0f8c5d6ae2dc1fde$exports, \"__esModule\", {\n    value: true\n});\n$0f8c5d6ae2dc1fde$exports.RegularPolygon = void 0;\n\n\n\n\nclass $0f8c5d6ae2dc1fde$var$RegularPolygon extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for(var n = 1; n < points.length; n++)context.lineTo(points[n].x, points[n].y);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for(var n = 0; n < sides; n++)points.push({\n            x: radius * Math.sin(n * 2 * Math.PI / sides),\n            y: -1 * radius * Math.cos(n * 2 * Math.PI / sides)\n        });\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point)=>{\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\n$0f8c5d6ae2dc1fde$exports.RegularPolygon = $0f8c5d6ae2dc1fde$var$RegularPolygon;\n$0f8c5d6ae2dc1fde$var$RegularPolygon.prototype.className = \"RegularPolygon\";\n$0f8c5d6ae2dc1fde$var$RegularPolygon.prototype._centroid = true;\n$0f8c5d6ae2dc1fde$var$RegularPolygon.prototype._attrsAffectingSize = [\n    \"radius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($0f8c5d6ae2dc1fde$var$RegularPolygon);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($0f8c5d6ae2dc1fde$var$RegularPolygon, \"radius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($0f8c5d6ae2dc1fde$var$RegularPolygon, \"sides\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $b49fcfc41be2e2d7$exports = {};\n\"use strict\";\nObject.defineProperty($b49fcfc41be2e2d7$exports, \"__esModule\", {\n    value: true\n});\n$b49fcfc41be2e2d7$exports.Ring = void 0;\n\n\n\n\nvar $b49fcfc41be2e2d7$var$PIx2 = Math.PI * 2;\nclass $b49fcfc41be2e2d7$var$Ring extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, $b49fcfc41be2e2d7$var$PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), $b49fcfc41be2e2d7$var$PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\n$b49fcfc41be2e2d7$exports.Ring = $b49fcfc41be2e2d7$var$Ring;\n$b49fcfc41be2e2d7$var$Ring.prototype.className = \"Ring\";\n$b49fcfc41be2e2d7$var$Ring.prototype._centroid = true;\n$b49fcfc41be2e2d7$var$Ring.prototype._attrsAffectingSize = [\n    \"innerRadius\",\n    \"outerRadius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($b49fcfc41be2e2d7$var$Ring);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($b49fcfc41be2e2d7$var$Ring, \"innerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($b49fcfc41be2e2d7$var$Ring, \"outerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $f274d880ee17c436$exports = {};\n\"use strict\";\nObject.defineProperty($f274d880ee17c436$exports, \"__esModule\", {\n    value: true\n});\n$f274d880ee17c436$exports.Sprite = void 0;\n\n\n\n\n\nclass $f274d880ee17c436$var$Sprite extends $8173247af08db530$exports.Shape {\n    constructor(config){\n        super(config);\n        this._updated = true;\n        this.anim = new $3688513f3eaf48af$exports.Animation(()=>{\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on(\"animationChange.konva\", function() {\n            this.frameIndex(0);\n        });\n        this.on(\"frameIndexChange.konva\", function() {\n            this._updated = true;\n        });\n        this.on(\"frameRateChange.konva\", function() {\n            if (!this.anim.isRunning()) return;\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            } else context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        } else context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function() {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) return;\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) this.frameIndex(index + 1);\n        else this.frameIndex(0);\n    }\n}\n$f274d880ee17c436$exports.Sprite = $f274d880ee17c436$var$Sprite;\n$f274d880ee17c436$var$Sprite.prototype.className = \"Sprite\";\n(0, $3c4258a611a19cfb$exports._registerNode)($f274d880ee17c436$var$Sprite);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"animation\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"animations\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"frameOffsets\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"image\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"frameIndex\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($f274d880ee17c436$var$Sprite, \"frameRate\", 17, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.backCompat($f274d880ee17c436$var$Sprite, {\n    index: \"frameIndex\",\n    getIndex: \"getFrameIndex\",\n    setIndex: \"setFrameIndex\"\n});\n\n\nvar $14349c1993cbf05e$exports = {};\n\"use strict\";\nObject.defineProperty($14349c1993cbf05e$exports, \"__esModule\", {\n    value: true\n});\n$14349c1993cbf05e$exports.Star = void 0;\n\n\n\n\nclass $14349c1993cbf05e$var$Star extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for(var n = 1; n < numPoints * 2; n++){\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\n            var x = radius * Math.sin(n * Math.PI / numPoints);\n            var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\n$14349c1993cbf05e$exports.Star = $14349c1993cbf05e$var$Star;\n$14349c1993cbf05e$var$Star.prototype.className = \"Star\";\n$14349c1993cbf05e$var$Star.prototype._centroid = true;\n$14349c1993cbf05e$var$Star.prototype._attrsAffectingSize = [\n    \"innerRadius\",\n    \"outerRadius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($14349c1993cbf05e$var$Star);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($14349c1993cbf05e$var$Star, \"numPoints\", 5, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($14349c1993cbf05e$var$Star, \"innerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($14349c1993cbf05e$var$Star, \"outerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n\n\nvar $a9317926b4b08128$exports = {};\n\"use strict\";\nObject.defineProperty($a9317926b4b08128$exports, \"__esModule\", {\n    value: true\n});\n$a9317926b4b08128$exports.Text = $a9317926b4b08128$exports.stringToArray = void 0;\n\n\n\n\n\nfunction $a9317926b4b08128$var$stringToArray(string) {\n    return Array.from(string);\n}\n$a9317926b4b08128$exports.stringToArray = $a9317926b4b08128$var$stringToArray;\nvar $a9317926b4b08128$var$AUTO = \"auto\", $a9317926b4b08128$var$CENTER = \"center\", $a9317926b4b08128$var$JUSTIFY = \"justify\", $a9317926b4b08128$var$CHANGE_KONVA = \"Change.konva\", $a9317926b4b08128$var$CONTEXT_2D = \"2d\", $a9317926b4b08128$var$DASH = \"-\", $a9317926b4b08128$var$LEFT = \"left\", $a9317926b4b08128$var$TEXT = \"text\", $a9317926b4b08128$var$TEXT_UPPER = \"Text\", $a9317926b4b08128$var$TOP = \"top\", $a9317926b4b08128$var$BOTTOM = \"bottom\", $a9317926b4b08128$var$MIDDLE = \"middle\", $a9317926b4b08128$var$NORMAL = \"normal\", $a9317926b4b08128$var$PX_SPACE = \"px \", $a9317926b4b08128$var$SPACE = \" \", $a9317926b4b08128$var$RIGHT = \"right\", $a9317926b4b08128$var$WORD = \"word\", $a9317926b4b08128$var$CHAR = \"char\", $a9317926b4b08128$var$NONE = \"none\", $a9317926b4b08128$var$ELLIPSIS = \"…\", $a9317926b4b08128$var$ATTR_CHANGE_LIST = [\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontStyle\",\n    \"fontVariant\",\n    \"padding\",\n    \"align\",\n    \"verticalAlign\",\n    \"lineHeight\",\n    \"text\",\n    \"width\",\n    \"height\",\n    \"wrap\",\n    \"ellipsis\",\n    \"letterSpacing\"\n], $a9317926b4b08128$var$attrChangeListLen = $a9317926b4b08128$var$ATTR_CHANGE_LIST.length;\nfunction $a9317926b4b08128$var$normalizeFontFamily(fontFamily) {\n    return fontFamily.split(\",\").map((family)=>{\n        family = family.trim();\n        const hasSpace = family.indexOf(\" \") >= 0;\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n        if (hasSpace && !hasQuotes) family = `\"${family}\"`;\n        return family;\n    }).join(\", \");\n}\nvar $a9317926b4b08128$var$dummyContext;\nfunction $a9317926b4b08128$var$getDummyContext() {\n    if ($a9317926b4b08128$var$dummyContext) return $a9317926b4b08128$var$dummyContext;\n    $a9317926b4b08128$var$dummyContext = $27d6a996859d86c8$exports.Util.createCanvasElement().getContext($a9317926b4b08128$var$CONTEXT_2D);\n    return $a9317926b4b08128$var$dummyContext;\n}\nfunction $a9317926b4b08128$var$_fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction $a9317926b4b08128$var$_strokeFunc(context) {\n    context.setAttr(\"miterLimit\", 2);\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction $a9317926b4b08128$var$checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops && !config.fillRadialGradientColorStops && !config.fillPatternImage) config.fill = config.fill || \"black\";\n    return config;\n}\nclass $a9317926b4b08128$var$Text extends $8173247af08db530$exports.Shape {\n    constructor(config){\n        super($a9317926b4b08128$var$checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for(var n = 0; n < $a9317926b4b08128$var$attrChangeListLen; n++)this.on($a9317926b4b08128$var$ATTR_CHANGE_LIST[n] + $a9317926b4b08128$var$CHANGE_KONVA, this._setTextData);\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        var textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) return;\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf(\"underline\") !== -1, shouldLineThrough = textDecoration.indexOf(\"line-through\") !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr(\"font\", this._getContextFont());\n        context.setAttr(\"textBaseline\", $a9317926b4b08128$var$MIDDLE);\n        context.setAttr(\"textAlign\", $a9317926b4b08128$var$LEFT);\n        if (verticalAlign === $a9317926b4b08128$var$MIDDLE) alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        else if (verticalAlign === $a9317926b4b08128$var$BOTTOM) alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        context.translate(padding, alignY + padding);\n        for(n = 0; n < textArrLen; n++){\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === $a9317926b4b08128$var$RIGHT) lineTranslateX += totalWidth - width - padding * 2;\n            else if (align === $a9317926b4b08128$var$CENTER) lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(\" \").length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth = align === $a9317926b4b08128$var$JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(\" \").length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth = align === $a9317926b4b08128$var$JUSTIFY && lastLine && !oneWord ? totalWidth - padding * 2 : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === $a9317926b4b08128$var$JUSTIFY) {\n                spacesNumber = text.split(\" \").length - 1;\n                var array = $a9317926b4b08128$var$stringToArray(text);\n                for(var li = 0; li < array.length; li++){\n                    var letter = array[li];\n                    if (letter === \" \" && !lastLine && align === $a9317926b4b08128$var$JUSTIFY) lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            } else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) translateY += lineHeightPx;\n        }\n    }\n    _hitFunc(context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        var str = $27d6a996859d86c8$exports.Util._isString(text) ? text : text === null || text === undefined ? \"\" : text + \"\";\n        this._setAttr($a9317926b4b08128$var$TEXT, str);\n        return this;\n    }\n    getWidth() {\n        var isAuto = this.attrs.width === $a9317926b4b08128$var$AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        var isAuto = this.attrs.height === $a9317926b4b08128$var$AUTO || this.attrs.height === undefined;\n        return isAuto ? this.fontSize() * this.textArr.length * this.lineHeight() + this.padding() * 2 : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        $27d6a996859d86c8$exports.Util.warn(\"text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.\");\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _context = $a9317926b4b08128$var$getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize\n        };\n    }\n    _getContextFont() {\n        return this.fontStyle() + $a9317926b4b08128$var$SPACE + this.fontVariant() + $a9317926b4b08128$var$SPACE + (this.fontSize() + $a9317926b4b08128$var$PX_SPACE) + $a9317926b4b08128$var$normalizeFontFamily(this.fontFamily());\n    }\n    _addTextLine(line) {\n        const align = this.align();\n        if (align === $a9317926b4b08128$var$JUSTIFY) line = line.trim();\n        var width = this._getTextWidth(line);\n        return this.textArr.push({\n            text: line,\n            width: width,\n            lastInParagraph: false\n        });\n    }\n    _getTextWidth(text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return $a9317926b4b08128$var$getDummyContext().measureText(text).width + (length ? letterSpacing * (length - 1) : 0);\n    }\n    _setTextData() {\n        var lines = this.text().split(\"\\n\"), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== $a9317926b4b08128$var$AUTO && width !== undefined, fixedHeight = height !== $a9317926b4b08128$var$AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== $a9317926b4b08128$var$NONE, wrapAtWord = wrap !== $a9317926b4b08128$var$CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        $a9317926b4b08128$var$getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth($a9317926b4b08128$var$ELLIPSIS) : 0;\n        for(var i = 0, max = lines.length; i < max; ++i){\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) while(line.length > 0){\n                var low = 0, high = line.length, match = \"\", matchWidth = 0;\n                while(low < high){\n                    var mid = low + high >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                    if (substrWidth <= maxWidth) {\n                        low = mid + 1;\n                        match = substr;\n                        matchWidth = substrWidth;\n                    } else high = mid;\n                }\n                if (match) {\n                    if (wrapAtWord) {\n                        var wrapIndex;\n                        var nextChar = line[match.length];\n                        var nextIsSpaceOrDash = nextChar === $a9317926b4b08128$var$SPACE || nextChar === $a9317926b4b08128$var$DASH;\n                        if (nextIsSpaceOrDash && matchWidth <= maxWidth) wrapIndex = match.length;\n                        else wrapIndex = Math.max(match.lastIndexOf($a9317926b4b08128$var$SPACE), match.lastIndexOf($a9317926b4b08128$var$DASH)) + 1;\n                        if (wrapIndex > 0) {\n                            low = wrapIndex;\n                            match = match.slice(0, low);\n                            matchWidth = this._getTextWidth(match);\n                        }\n                    }\n                    match = match.trimRight();\n                    this._addTextLine(match);\n                    textWidth = Math.max(textWidth, matchWidth);\n                    currentHeightPx += lineHeightPx;\n                    var shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\n                    if (shouldHandleEllipsis) {\n                        this._tryToAddEllipsisToLastLine();\n                        break;\n                    }\n                    line = line.slice(low);\n                    line = line.trimLeft();\n                    if (line.length > 0) {\n                        lineWidth = this._getTextWidth(line);\n                        if (lineWidth <= maxWidth) {\n                            this._addTextLine(line);\n                            currentHeightPx += lineHeightPx;\n                            textWidth = Math.max(textWidth, lineWidth);\n                            break;\n                        }\n                    }\n                } else break;\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) this._tryToAddEllipsisToLastLine();\n            }\n            if (this.textArr[this.textArr.length - 1]) this.textArr[this.textArr.length - 1].lastInParagraph = true;\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) break;\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    _shouldHandleEllipsis(currentHeightPx) {\n        var fontSize = +this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, height = this.attrs.height, fixedHeight = height !== $a9317926b4b08128$var$AUTO && height !== undefined, padding = this.padding(), maxHeightPx = height - padding * 2, wrap = this.wrap(), shouldWrap = wrap !== $a9317926b4b08128$var$NONE;\n        return !shouldWrap || fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx;\n    }\n    _tryToAddEllipsisToLastLine() {\n        var width = this.attrs.width, fixedWidth = width !== $a9317926b4b08128$var$AUTO && width !== undefined, padding = this.padding(), maxWidth = width - padding * 2, shouldAddEllipsis = this.ellipsis();\n        var lastLine = this.textArr[this.textArr.length - 1];\n        if (!lastLine || !shouldAddEllipsis) return;\n        if (fixedWidth) {\n            var haveSpace = this._getTextWidth(lastLine.text + $a9317926b4b08128$var$ELLIPSIS) < maxWidth;\n            if (!haveSpace) lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n        }\n        this.textArr.splice(this.textArr.length - 1, 1);\n        this._addTextLine(lastLine.text + $a9317926b4b08128$var$ELLIPSIS);\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n}\n$a9317926b4b08128$exports.Text = $a9317926b4b08128$var$Text;\n$a9317926b4b08128$var$Text.prototype._fillFunc = $a9317926b4b08128$var$_fillFunc;\n$a9317926b4b08128$var$Text.prototype._strokeFunc = $a9317926b4b08128$var$_strokeFunc;\n$a9317926b4b08128$var$Text.prototype.className = $a9317926b4b08128$var$TEXT_UPPER;\n$a9317926b4b08128$var$Text.prototype._attrsAffectingSize = [\n    \"text\",\n    \"fontSize\",\n    \"padding\",\n    \"wrap\",\n    \"lineHeight\",\n    \"letterSpacing\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($a9317926b4b08128$var$Text);\n$9a603088dcd0ec15$exports.Factory.overWriteSetter($a9317926b4b08128$var$Text, \"width\", (0, $44f336646fbbdff8$exports.getNumberOrAutoValidator)());\n$9a603088dcd0ec15$exports.Factory.overWriteSetter($a9317926b4b08128$var$Text, \"height\", (0, $44f336646fbbdff8$exports.getNumberOrAutoValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"fontFamily\", \"Arial\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"fontSize\", 12, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"fontStyle\", $a9317926b4b08128$var$NORMAL);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"fontVariant\", $a9317926b4b08128$var$NORMAL);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"padding\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"align\", $a9317926b4b08128$var$LEFT);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"verticalAlign\", $a9317926b4b08128$var$TOP);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"lineHeight\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"wrap\", $a9317926b4b08128$var$WORD);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"ellipsis\", false, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"letterSpacing\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"text\", \"\", (0, $44f336646fbbdff8$exports.getStringValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($a9317926b4b08128$var$Text, \"textDecoration\", \"\");\n\n\nvar $cd9310de5b54c82f$exports = {};\n\"use strict\";\nObject.defineProperty($cd9310de5b54c82f$exports, \"__esModule\", {\n    value: true\n});\n$cd9310de5b54c82f$exports.TextPath = void 0;\n\n\n\n\n\n\n\nvar $cd9310de5b54c82f$var$EMPTY_STRING = \"\", $cd9310de5b54c82f$var$NORMAL = \"normal\";\nfunction $cd9310de5b54c82f$var$_fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction $cd9310de5b54c82f$var$_strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nclass $cd9310de5b54c82f$var$TextPath extends $8173247af08db530$exports.Shape {\n    constructor(config){\n        super(config);\n        this.dummyCanvas = $27d6a996859d86c8$exports.Util.createCanvasElement();\n        this.dataArray = [];\n        this._readDataAttribute();\n        this.on(\"dataChange.konva\", function() {\n            this._readDataAttribute();\n            this._setTextData();\n        });\n        this.on(\"textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva\", this._setTextData);\n        this._setTextData();\n    }\n    _getTextPathLength() {\n        return $b423ec4e2dd4644d$exports.Path.getPathLength(this.dataArray);\n    }\n    _getPointAtLength(length) {\n        if (!this.attrs.data) return null;\n        const totalLength = this.pathLength;\n        if (length - 1 > totalLength) return null;\n        return $b423ec4e2dd4644d$exports.Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    _readDataAttribute() {\n        this.dataArray = $b423ec4e2dd4644d$exports.Path.parsePathData(this.attrs.data);\n        this.pathLength = this._getTextPathLength();\n    }\n    _sceneFunc(context) {\n        context.setAttr(\"font\", this._getContextFont());\n        context.setAttr(\"textBaseline\", this.textBaseline());\n        context.setAttr(\"textAlign\", \"left\");\n        context.save();\n        var textDecoration = this.textDecoration();\n        var fill = this.fill();\n        var fontSize = this.fontSize();\n        var glyphInfo = this.glyphInfo;\n        if (textDecoration === \"underline\") context.beginPath();\n        for(var i = 0; i < glyphInfo.length; i++){\n            context.save();\n            var p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === \"underline\") {\n                if (i === 0) context.moveTo(0, fontSize / 2 + 1);\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === \"underline\") {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        var glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for(var i = 0; i < glyphInfo.length; i++){\n            var p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr(\"lineWidth\", this.fontSize());\n        context.setAttr(\"strokeStyle\", this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        $27d6a996859d86c8$exports.Util.warn(\"text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.\");\n        return this.textHeight;\n    }\n    setText(text) {\n        return $a9317926b4b08128$exports.Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return $a9317926b4b08128$exports.Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        var dummyCanvas = this.dummyCanvas;\n        var _context = dummyCanvas.getContext(\"2d\");\n        _context.save();\n        _context.font = this._getContextFont();\n        var metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(`${this.fontSize()}`, 10)\n        };\n    }\n    _setTextData() {\n        const { width: width , height: height  } = this._getTextSize(this.attrs.text);\n        this.textWidth = width;\n        this.textHeight = height;\n        this.glyphInfo = [];\n        if (!this.attrs.data) return null;\n        const letterSpacing = this.letterSpacing();\n        const align = this.align();\n        const kerningFunc = this.kerningFunc();\n        const textWidth = Math.max(this.textWidth + ((this.attrs.text || \"\").length - 1) * letterSpacing, 0);\n        let offset = 0;\n        if (align === \"center\") offset = Math.max(0, this.pathLength / 2 - textWidth / 2);\n        if (align === \"right\") offset = Math.max(0, this.pathLength - textWidth);\n        const charArr = (0, $a9317926b4b08128$exports.stringToArray)(this.text());\n        let offsetToGlyph = offset;\n        for(var i = 0; i < charArr.length; i++){\n            const charStartPoint = this._getPointAtLength(offsetToGlyph);\n            if (!charStartPoint) return;\n            let glyphWidth = this._getTextSize(charArr[i]).width + letterSpacing;\n            if (charArr[i] === \" \" && align === \"justify\") {\n                const numberOfSpaces = this.text().split(\" \").length - 1;\n                glyphWidth += (this.pathLength - textWidth) / numberOfSpaces;\n            }\n            const charEndPoint = this._getPointAtLength(offsetToGlyph + glyphWidth);\n            if (!charEndPoint) return;\n            const width = $b423ec4e2dd4644d$exports.Path.getLineLength(charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            let kern = 0;\n            if (kerningFunc) try {\n                kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n            } catch (e) {\n                kern = 0;\n            }\n            charStartPoint.x += kern;\n            charEndPoint.x += kern;\n            this.textWidth += kern;\n            const midpoint = $b423ec4e2dd4644d$exports.Path.getPointOnLine(kern + width / 2.0, charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            const rotation = Math.atan2(charEndPoint.y - charStartPoint.y, charEndPoint.x - charStartPoint.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: charStartPoint,\n                p1: charEndPoint\n            });\n            offsetToGlyph += glyphWidth;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) return {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        var points = [];\n        this.glyphInfo.forEach(function(info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        var minX = points[0] || 0;\n        var maxX = points[0] || 0;\n        var minY = points[1] || 0;\n        var maxY = points[1] || 0;\n        var x, y;\n        for(var i = 0; i < points.length / 2; i++){\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        var fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize\n        };\n    }\n    destroy() {\n        $27d6a996859d86c8$exports.Util.releaseCanvas(this.dummyCanvas);\n        return super.destroy();\n    }\n}\n$cd9310de5b54c82f$exports.TextPath = $cd9310de5b54c82f$var$TextPath;\n$cd9310de5b54c82f$var$TextPath.prototype._fillFunc = $cd9310de5b54c82f$var$_fillFunc;\n$cd9310de5b54c82f$var$TextPath.prototype._strokeFunc = $cd9310de5b54c82f$var$_strokeFunc;\n$cd9310de5b54c82f$var$TextPath.prototype._fillFuncHit = $cd9310de5b54c82f$var$_fillFunc;\n$cd9310de5b54c82f$var$TextPath.prototype._strokeFuncHit = $cd9310de5b54c82f$var$_strokeFunc;\n$cd9310de5b54c82f$var$TextPath.prototype.className = \"TextPath\";\n$cd9310de5b54c82f$var$TextPath.prototype._attrsAffectingSize = [\n    \"text\",\n    \"fontSize\",\n    \"data\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($cd9310de5b54c82f$var$TextPath);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"data\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"fontFamily\", \"Arial\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"fontSize\", 12, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"fontStyle\", $cd9310de5b54c82f$var$NORMAL);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"align\", \"left\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"letterSpacing\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"textBaseline\", \"middle\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"fontVariant\", $cd9310de5b54c82f$var$NORMAL);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"text\", $cd9310de5b54c82f$var$EMPTY_STRING);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"textDecoration\", null);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($cd9310de5b54c82f$var$TextPath, \"kerningFunc\", null);\n\n\nvar $fbebca90c6857f1d$exports = {};\n\"use strict\";\nObject.defineProperty($fbebca90c6857f1d$exports, \"__esModule\", {\n    value: true\n});\n$fbebca90c6857f1d$exports.Transformer = void 0;\n\n\n\n\n\n\n\n\n\nvar $fbebca90c6857f1d$var$EVENTS_NAME = \"tr-konva\";\nvar $fbebca90c6857f1d$var$ATTR_CHANGE_LIST = [\n    \"resizeEnabledChange\",\n    \"rotateAnchorOffsetChange\",\n    \"rotateEnabledChange\",\n    \"enabledAnchorsChange\",\n    \"anchorSizeChange\",\n    \"borderEnabledChange\",\n    \"borderStrokeChange\",\n    \"borderStrokeWidthChange\",\n    \"borderDashChange\",\n    \"anchorStrokeChange\",\n    \"anchorStrokeWidthChange\",\n    \"anchorFillChange\",\n    \"anchorCornerRadiusChange\",\n    \"ignoreStrokeChange\",\n    \"anchorStyleFuncChange\"\n].map((e)=>e + `.${$fbebca90c6857f1d$var$EVENTS_NAME}`).join(\" \");\nvar $fbebca90c6857f1d$var$NODES_RECT = \"nodesRect\";\nvar $fbebca90c6857f1d$var$TRANSFORM_CHANGE_STR = [\n    \"widthChange\",\n    \"heightChange\",\n    \"scaleXChange\",\n    \"scaleYChange\",\n    \"skewXChange\",\n    \"skewYChange\",\n    \"rotationChange\",\n    \"offsetXChange\",\n    \"offsetYChange\",\n    \"transformsEnabledChange\",\n    \"strokeWidthChange\"\n];\nvar $fbebca90c6857f1d$var$ANGLES = {\n    \"top-left\": -45,\n    \"top-center\": 0,\n    \"top-right\": 45,\n    \"middle-right\": -90,\n    \"middle-left\": 90,\n    \"bottom-left\": -135,\n    \"bottom-center\": 180,\n    \"bottom-right\": 135\n};\nconst $fbebca90c6857f1d$var$TOUCH_DEVICE = \"ontouchstart\" in $3c4258a611a19cfb$exports.Konva._global;\nfunction $fbebca90c6857f1d$var$getCursor(anchorName, rad) {\n    if (anchorName === \"rotater\") return \"crosshair\";\n    rad += $27d6a996859d86c8$exports.Util.degToRad($fbebca90c6857f1d$var$ANGLES[anchorName] || 0);\n    var angle = ($27d6a996859d86c8$exports.Util.radToDeg(rad) % 360 + 360) % 360;\n    if ($27d6a996859d86c8$exports.Util._inRange(angle, 337.5, 360) || $27d6a996859d86c8$exports.Util._inRange(angle, 0, 22.5)) return \"ns-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 22.5, 67.5)) return \"nesw-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 67.5, 112.5)) return \"ew-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 112.5, 157.5)) return \"nwse-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 157.5, 202.5)) return \"ns-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 202.5, 247.5)) return \"nesw-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 247.5, 292.5)) return \"ew-resize\";\n    else if ($27d6a996859d86c8$exports.Util._inRange(angle, 292.5, 337.5)) return \"nwse-resize\";\n    else {\n        $27d6a996859d86c8$exports.Util.error(\"Transformer has unknown angle for cursor detection: \" + angle);\n        return \"pointer\";\n    }\n}\nvar $fbebca90c6857f1d$var$ANCHORS_NAMES = [\n    \"top-left\",\n    \"top-center\",\n    \"top-right\",\n    \"middle-right\",\n    \"middle-left\",\n    \"bottom-left\",\n    \"bottom-center\",\n    \"bottom-right\"\n];\nvar $fbebca90c6857f1d$var$MAX_SAFE_INTEGER = 100000000;\nfunction $fbebca90c6857f1d$var$getCenter(shape) {\n    return {\n        x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n        y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n    };\n}\nfunction $fbebca90c6857f1d$var$rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), {\n        rotation: shape.rotation + angleRad,\n        x: x,\n        y: y\n    });\n}\nfunction $fbebca90c6857f1d$var$rotateAroundCenter(shape, deltaRad) {\n    const center = $fbebca90c6857f1d$var$getCenter(shape);\n    return $fbebca90c6857f1d$var$rotateAroundPoint(shape, deltaRad, center);\n}\nfunction $fbebca90c6857f1d$var$getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for(let i = 0; i < snaps.length; i++){\n        const angle = $3c4258a611a19cfb$exports.Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) snapped = angle;\n    }\n    return snapped;\n}\nclass $fbebca90c6857f1d$var$Transformer extends $da8e70b72825bd12$exports.Group {\n    constructor(config){\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on($fbebca90c6857f1d$var$ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) this.update();\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        $27d6a996859d86c8$exports.Util.warn(\"tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.\");\n        return this.setNodes([\n            node\n        ]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return $fbebca90c6857f1d$var$EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) this.detach();\n        const filteredNodes = nodes.filter((node)=>{\n            if (node.isAncestorOf(this)) {\n                $27d6a996859d86c8$exports.Util.error(\"Konva.Transformer cannot be an a child of the node you are trying to attach\");\n                return false;\n            }\n            return true;\n        });\n        this._nodes = nodes = filteredNodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) this.rotation(nodes[0].getAbsoluteRotation());\n        else this.rotation(0);\n        this._nodes.forEach((node)=>{\n            const onChange = ()=>{\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) this.rotation(this.nodes()[0].getAbsoluteRotation());\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) this.update();\n            };\n            const additionalEvents = node._attrsAffectingSize.map((prop)=>prop + \"Change.\" + this._getEventNamespace()).join(\" \");\n            node.on(additionalEvents, onChange);\n            node.on($fbebca90c6857f1d$var$TRANSFORM_CHANGE_STR.map((e)=>e + `.${this._getEventNamespace()}`).join(\" \"), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne(\".top-left\");\n        if (elementsCreated) this.update();\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e)=>{\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne(\".back\")) this.startDrag(e, false);\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e)=>{\n            if (!lastPos) return;\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode)=>{\n                if (otherNode === node) return;\n                if (otherNode.isDragging()) return;\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) this._nodes.forEach((node)=>{\n            node.off(\".\" + this._getEventNamespace());\n        });\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache($fbebca90c6857f1d$var$NODES_RECT);\n        this._clearCache(\"transform\");\n        this._clearSelfAndDescendantCache(\"absoluteTransform\");\n    }\n    _getNodeRect() {\n        return this._getCache($fbebca90c6857f1d$var$NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke()\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = ($3c4258a611a19cfb$exports.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation\n        };\n        return $fbebca90c6857f1d$var$rotateAroundPoint(box, -$3c4258a611a19cfb$exports.Konva.getAngle(rot), {\n            x: 0,\n            y: 0\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) return {\n            x: -$fbebca90c6857f1d$var$MAX_SAFE_INTEGER,\n            y: -$fbebca90c6857f1d$var$MAX_SAFE_INTEGER,\n            width: 0,\n            height: 0,\n            rotation: 0\n        };\n        const totalPoints = [];\n        this.nodes().map((node)=>{\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke()\n            });\n            var points = [\n                {\n                    x: box.x,\n                    y: box.y\n                },\n                {\n                    x: box.x + box.width,\n                    y: box.y\n                },\n                {\n                    x: box.x + box.width,\n                    y: box.y + box.height\n                },\n                {\n                    x: box.x,\n                    y: box.y + box.height\n                }\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function(point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new $27d6a996859d86c8$exports.Transform();\n        tr.rotate(-$3c4258a611a19cfb$exports.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function(point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({\n            x: minX,\n            y: minY\n        });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: $3c4258a611a19cfb$exports.Konva.getAngle(this.rotation())\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        $fbebca90c6857f1d$var$ANCHORS_NAMES.forEach((function(name) {\n            this._createAnchor(name);\n        }).bind(this));\n        this._createAnchor(\"rotater\");\n    }\n    _createAnchor(name) {\n        var anchor = new $07185923f893a775$exports.Rect({\n            stroke: \"rgb(0, 161, 255)\",\n            fill: \"white\",\n            strokeWidth: 1,\n            name: name + \" _anchor\",\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: $fbebca90c6857f1d$var$TOUCH_DEVICE ? 10 : \"auto\"\n        });\n        var self = this;\n        anchor.on(\"mousedown touchstart\", function(e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on(\"dragstart\", (e)=>{\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on(\"dragend\", (e)=>{\n            e.cancelBubble = true;\n        });\n        anchor.on(\"mouseenter\", ()=>{\n            var rad = $3c4258a611a19cfb$exports.Konva.getAngle(this.rotation());\n            var cursor = $fbebca90c6857f1d$var$getCursor(name, rad);\n            anchor.getStage().content && (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on(\"mouseout\", ()=>{\n            anchor.getStage().content && (anchor.getStage().content.style.cursor = \"\");\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new $8173247af08db530$exports.Shape({\n            name: \"back\",\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * $27d6a996859d86c8$exports.Util._sign(this.height()) - padding);\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape)=>{\n                if (!this.shouldOverdrawWholeArea()) return;\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            }\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on(\"dragstart\", (e)=>{\n            e.cancelBubble = true;\n        });\n        back.on(\"dragmove\", (e)=>{\n            e.cancelBubble = true;\n        });\n        back.on(\"dragend\", (e)=>{\n            e.cancelBubble = true;\n        });\n        this.on(\"dragmove\", (e)=>{\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(\" \")[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"mousemove\", this._handleMouseMove);\n            window.addEventListener(\"touchmove\", this._handleMouseMove);\n            window.addEventListener(\"mouseup\", this._handleMouseUp, true);\n            window.addEventListener(\"touchend\", this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y\n        };\n        this._fire(\"transformstart\", {\n            evt: e.evt,\n            target: this.getNode()\n        });\n        this._nodes.forEach((target)=>{\n            target._fire(\"transformstart\", {\n                evt: e.evt,\n                target: target\n            });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne(\".\" + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) return;\n        if (this._movingAnchorName === \"rotater\") {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) delta -= Math.PI;\n            var oldRotation = $3c4258a611a19cfb$exports.Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = $3c4258a611a19cfb$exports.Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = $fbebca90c6857f1d$var$getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = $fbebca90c6857f1d$var$rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var shiftBehavior = this.shiftBehavior();\n        var keepProportion;\n        if (shiftBehavior === \"inverted\") keepProportion = this.keepRatio() && !e.shiftKey;\n        else if (shiftBehavior === \"none\") keepProportion = this.keepRatio();\n        else keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === \"top-left\") {\n            if (keepProportion) {\n                var comparePoint = centeredScaling ? {\n                    x: this.width() / 2,\n                    y: this.height() / 2\n                } : {\n                    x: this.findOne(\".bottom-right\").x(),\n                    y: this.findOne(\".bottom-right\").y()\n                };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne(\".top-left\").x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\".top-left\").y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\".top-left\").x(comparePoint.x - x);\n                this.findOne(\".top-left\").y(comparePoint.y - y);\n            }\n        } else if (this._movingAnchorName === \"top-center\") this.findOne(\".top-left\").y(anchorNode.y());\n        else if (this._movingAnchorName === \"top-right\") {\n            if (keepProportion) {\n                var comparePoint = centeredScaling ? {\n                    x: this.width() / 2,\n                    y: this.height() / 2\n                } : {\n                    x: this.findOne(\".bottom-left\").x(),\n                    y: this.findOne(\".bottom-left\").y()\n                };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne(\".top-right\").x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\".top-right\").y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\".top-right\").x(comparePoint.x + x);\n                this.findOne(\".top-right\").y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne(\".top-left\").y(pos.y);\n            this.findOne(\".bottom-right\").x(pos.x);\n        } else if (this._movingAnchorName === \"middle-left\") this.findOne(\".top-left\").x(anchorNode.x());\n        else if (this._movingAnchorName === \"middle-right\") this.findOne(\".bottom-right\").x(anchorNode.x());\n        else if (this._movingAnchorName === \"bottom-left\") {\n            if (keepProportion) {\n                var comparePoint = centeredScaling ? {\n                    x: this.width() / 2,\n                    y: this.height() / 2\n                } : {\n                    x: this.findOne(\".top-right\").x(),\n                    y: this.findOne(\".top-right\").y()\n                };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne(\".top-left\").x(pos.x);\n            this.findOne(\".bottom-right\").y(pos.y);\n        } else if (this._movingAnchorName === \"bottom-center\") this.findOne(\".bottom-right\").y(anchorNode.y());\n        else if (this._movingAnchorName === \"bottom-right\") {\n            if (keepProportion) {\n                var comparePoint = centeredScaling ? {\n                    x: this.width() / 2,\n                    y: this.height() / 2\n                } : {\n                    x: this.findOne(\".top-left\").x(),\n                    y: this.findOne(\".top-left\").y()\n                };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne(\".bottom-right\").x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne(\".bottom-right\").y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne(\".bottom-right\").x(comparePoint.x + x);\n                this.findOne(\".bottom-right\").y(comparePoint.y + y);\n            }\n        } else console.error(new Error(\"Wrong position argument of selection resizer: \" + this._movingAnchorName));\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne(\".top-left\");\n            var bottomRight = this.findOne(\".bottom-right\");\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY\n            });\n        }\n        var absPos = this.findOne(\".top-left\").getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne(\".bottom-right\").x() - this.findOne(\".top-left\").x();\n        var height = this.findOne(\".bottom-right\").y() - this.findOne(\".top-left\").y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: $3c4258a611a19cfb$exports.Konva.getAngle(this.rotation())\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== \"undefined\") {\n                window.removeEventListener(\"mousemove\", this._handleMouseMove);\n                window.removeEventListener(\"touchmove\", this._handleMouseMove);\n                window.removeEventListener(\"mouseup\", this._handleMouseUp, true);\n                window.removeEventListener(\"touchend\", this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire(\"transformend\", {\n                evt: e,\n                target: node\n            });\n            if (node) this._nodes.forEach((target)=>{\n                target._fire(\"transformend\", {\n                    evt: e,\n                    target: target\n                });\n            });\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if ($27d6a996859d86c8$exports.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if ($27d6a996859d86c8$exports.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new $27d6a996859d86c8$exports.Transform();\n        t.rotate($3c4258a611a19cfb$exports.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf(\"left\") >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace(\"left\", \"right\");\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf(\"right\") >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0\n            });\n            this._movingAnchorName = this._movingAnchorName.replace(\"right\", \"left\");\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf(\"top\") >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace(\"top\", \"bottom\");\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf(\"bottom\") >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2\n            });\n            this._movingAnchorName = this._movingAnchorName.replace(\"bottom\", \"top\");\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) newAttrs = bounded;\n            else $27d6a996859d86c8$exports.Util.warn(\"boundBoxFunc returned falsy. You should return new bound rect from it!\");\n        }\n        const baseSize = 10000000;\n        const oldTr = new $27d6a996859d86c8$exports.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new $27d6a996859d86c8$exports.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node)=>{\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new $27d6a996859d86c8$exports.Transform();\n            newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire(\"transform\", {\n                evt: evt,\n                target: node\n            });\n            node._fire(\"transform\", {\n                evt: evt,\n                target: node\n            });\n            (_a = node.getLayer()) === null || _a === void 0 || _a.batchDraw();\n        });\n        this.rotation($27d6a996859d86c8$exports.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation($27d6a996859d86c8$exports.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        const anchors = this.find(\"._anchor\");\n        anchors.forEach((node)=>{\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius()\n            });\n        });\n        this._batchChangeChild(\".top-left\", {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"top-left\") >= 0\n        });\n        this._batchChangeChild(\".top-center\", {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"top-center\") >= 0\n        });\n        this._batchChangeChild(\".top-right\", {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"top-right\") >= 0\n        });\n        this._batchChangeChild(\".middle-left\", {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"middle-left\") >= 0\n        });\n        this._batchChangeChild(\".middle-right\", {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"middle-right\") >= 0\n        });\n        this._batchChangeChild(\".bottom-left\", {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"bottom-left\") >= 0\n        });\n        this._batchChangeChild(\".bottom-center\", {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"bottom-center\") >= 0\n        });\n        this._batchChangeChild(\".bottom-right\", {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf(\"bottom-right\") >= 0\n        });\n        this._batchChangeChild(\".rotater\", {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * $27d6a996859d86c8$exports.Util._sign(height) - padding,\n            visible: this.rotateEnabled()\n        });\n        this._batchChangeChild(\".back\", {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0\n        });\n        const styleFunc = this.anchorStyleFunc();\n        if (styleFunc) anchors.forEach((node)=>{\n            styleFunc(node);\n        });\n        (_a = this.getLayer()) === null || _a === void 0 || _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne(\".\" + this._movingAnchorName);\n            if (anchorNode) anchorNode.stopDrag();\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) this.getStage().content && (this.getStage().content.style.cursor = \"\");\n        $da8e70b72825bd12$exports.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return $03fc3abdfa907317$exports.Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        var node = $03fc3abdfa907317$exports.Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) return super.getClientRect();\n        else return {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n    }\n}\n$fbebca90c6857f1d$exports.Transformer = $fbebca90c6857f1d$var$Transformer;\nfunction $fbebca90c6857f1d$var$validateAnchors(val) {\n    if (!(val instanceof Array)) $27d6a996859d86c8$exports.Util.warn(\"enabledAnchors value should be an array\");\n    if (val instanceof Array) val.forEach(function(name) {\n        if ($fbebca90c6857f1d$var$ANCHORS_NAMES.indexOf(name) === -1) $27d6a996859d86c8$exports.Util.warn(\"Unknown anchor name: \" + name + \". Available names are: \" + $fbebca90c6857f1d$var$ANCHORS_NAMES.join(\", \"));\n    });\n    return val || [];\n}\n$fbebca90c6857f1d$var$Transformer.prototype.className = \"Transformer\";\n(0, $3c4258a611a19cfb$exports._registerNode)($fbebca90c6857f1d$var$Transformer);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"enabledAnchors\", $fbebca90c6857f1d$var$ANCHORS_NAMES, $fbebca90c6857f1d$var$validateAnchors);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"flipEnabled\", true, (0, $44f336646fbbdff8$exports.getBooleanValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"resizeEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorSize\", 10, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"rotateEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"rotationSnaps\", []);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"rotateAnchorOffset\", 50, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"rotationSnapTolerance\", 5, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"borderEnabled\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorStroke\", \"rgb(0, 161, 255)\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorStrokeWidth\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorFill\", \"white\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorCornerRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"borderStroke\", \"rgb(0, 161, 255)\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"borderStrokeWidth\", 1, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"borderDash\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"keepRatio\", true);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"shiftBehavior\", \"default\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"centeredScaling\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"ignoreStroke\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"padding\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"node\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"nodes\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"boundBoxFunc\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorDragBoundFunc\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"anchorStyleFunc\");\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"shouldOverdrawWholeArea\", false);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($fbebca90c6857f1d$var$Transformer, \"useSingleNodeRotation\", true);\n$9a603088dcd0ec15$exports.Factory.backCompat($fbebca90c6857f1d$var$Transformer, {\n    lineEnabled: \"borderEnabled\",\n    rotateHandlerOffset: \"rotateAnchorOffset\",\n    enabledHandlers: \"enabledAnchors\"\n});\n\n\nvar $8505864c4c1aa7c5$exports = {};\n\"use strict\";\nObject.defineProperty($8505864c4c1aa7c5$exports, \"__esModule\", {\n    value: true\n});\n$8505864c4c1aa7c5$exports.Wedge = void 0;\n\n\n\n\n\nclass $8505864c4c1aa7c5$var$Wedge extends $8173247af08db530$exports.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, $3c4258a611a19cfb$exports.Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\n$8505864c4c1aa7c5$exports.Wedge = $8505864c4c1aa7c5$var$Wedge;\n$8505864c4c1aa7c5$var$Wedge.prototype.className = \"Wedge\";\n$8505864c4c1aa7c5$var$Wedge.prototype._centroid = true;\n$8505864c4c1aa7c5$var$Wedge.prototype._attrsAffectingSize = [\n    \"radius\"\n];\n(0, $3c4258a611a19cfb$exports._registerNode)($8505864c4c1aa7c5$var$Wedge);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8505864c4c1aa7c5$var$Wedge, \"radius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8505864c4c1aa7c5$var$Wedge, \"angle\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)());\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($8505864c4c1aa7c5$var$Wedge, \"clockwise\", false);\n$9a603088dcd0ec15$exports.Factory.backCompat($8505864c4c1aa7c5$var$Wedge, {\n    angleDeg: \"angle\",\n    getAngleDeg: \"getAngle\",\n    setAngleDeg: \"setAngle\"\n});\n\n\nvar $a22379f0b858a0ef$exports = {};\n\"use strict\";\nObject.defineProperty($a22379f0b858a0ef$exports, \"__esModule\", {\n    value: true\n});\n$a22379f0b858a0ef$exports.Blur = void 0;\n\n\n\nfunction $a22379f0b858a0ef$var$BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar $a22379f0b858a0ef$var$mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n];\nvar $a22379f0b858a0ef$var$shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n];\nfunction $a22379f0b858a0ef$var$filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2, stackStart = new $a22379f0b858a0ef$var$BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = $a22379f0b858a0ef$var$mul_table[radius], shg_sum = $a22379f0b858a0ef$var$shg_table[radius];\n    for(i = 1; i < div; i++){\n        stack = stack.next = new $a22379f0b858a0ef$var$BlurStack();\n        if (i === radiusPlus1) stackEnd = stack;\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for(y = 0; y < height; y++){\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for(i = 0; i < radiusPlus1; i++){\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for(i = 1; i < radiusPlus1; i++){\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for(x = 0; x < width; x++){\n            pixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n                pixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n                pixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n            } else pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for(x = 0; x < width; x++){\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for(i = 0; i < radiusPlus1; i++){\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for(i = 1; i <= radius; i++){\n            yi = yp + x << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) yp += width;\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for(y = 0; y < height; y++){\n            p = yi << 2;\n            pixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n                pixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n                pixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n            } else pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nconst $a22379f0b858a0ef$var$Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) $a22379f0b858a0ef$var$filterGaussBlurRGBA(imageData, radius);\n};\n$a22379f0b858a0ef$exports.Blur = $a22379f0b858a0ef$var$Blur;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"blurRadius\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $6e99d3a7c3be0513$exports = {};\n\"use strict\";\nObject.defineProperty($6e99d3a7c3be0513$exports, \"__esModule\", {\n    value: true\n});\n$6e99d3a7c3be0513$exports.Brighten = void 0;\n\n\n\nconst $6e99d3a7c3be0513$var$Brighten = function(imageData) {\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for(i = 0; i < len; i += 4){\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\n$6e99d3a7c3be0513$exports.Brighten = $6e99d3a7c3be0513$var$Brighten;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"brightness\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $5dc0c636e0e21849$exports = {};\n\"use strict\";\nObject.defineProperty($5dc0c636e0e21849$exports, \"__esModule\", {\n    value: true\n});\n$5dc0c636e0e21849$exports.Contrast = void 0;\n\n\n\nconst $5dc0c636e0e21849$var$Contrast = function(imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for(i = 0; i < nPixels; i += 4){\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\n$5dc0c636e0e21849$exports.Contrast = $5dc0c636e0e21849$var$Contrast;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"contrast\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $a67f5007962e021c$exports = {};\n\"use strict\";\nObject.defineProperty($a67f5007962e021c$exports, \"__esModule\", {\n    value: true\n});\n$a67f5007962e021c$exports.Emboss = void 0;\n\n\n\n\nconst $a67f5007962e021c$var$Emboss = function(imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch(direction){\n        case \"top-left\":\n            dirY = -1;\n            dirX = -1;\n            break;\n        case \"top\":\n            dirY = -1;\n            dirX = 0;\n            break;\n        case \"top-right\":\n            dirY = -1;\n            dirX = 1;\n            break;\n        case \"right\":\n            dirY = 0;\n            dirX = 1;\n            break;\n        case \"bottom-right\":\n            dirY = 1;\n            dirX = 1;\n            break;\n        case \"bottom\":\n            dirY = 1;\n            dirX = 0;\n            break;\n        case \"bottom-left\":\n            dirY = 1;\n            dirX = -1;\n            break;\n        case \"left\":\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            $27d6a996859d86c8$exports.Util.error(\"Unknown emboss direction: \" + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) otherY = 0;\n        if (y + otherY > h) otherY = 0;\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) otherX = 0;\n            if (x + otherX > w) otherX = 0;\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) dif = dG;\n            if (absB > absDif) dif = dB;\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            } else {\n                var grey = greyLevel - dif;\n                if (grey < 0) grey = 0;\n                else if (grey > 255) grey = 255;\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        }while (--x);\n    }while (--y);\n};\n$a67f5007962e021c$exports.Emboss = $a67f5007962e021c$var$Emboss;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"embossStrength\", 0.5, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"embossWhiteLevel\", 0.5, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"embossDirection\", \"top-left\", null, $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"embossBlend\", false, null, $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $20e6d0743b694e8f$exports = {};\n\"use strict\";\nObject.defineProperty($20e6d0743b694e8f$exports, \"__esModule\", {\n    value: true\n});\n$20e6d0743b694e8f$exports.Enhance = void 0;\n\n\n\nfunction $20e6d0743b694e8f$var$remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) return toMin + toRange / 2;\n    if (toRange === 0) return toMin;\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nconst $20e6d0743b694e8f$var$Enhance = function(imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) return;\n    for(i = 0; i < nSubPixels; i += 4){\n        r = data[i + 0];\n        if (r < rMin) rMin = r;\n        else if (r > rMax) rMax = r;\n        g = data[i + 1];\n        if (g < gMin) gMin = g;\n        else if (g > gMax) gMax = g;\n        b = data[i + 2];\n        if (b < bMin) bMin = b;\n        else if (b > bMax) bMax = b;\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    } else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for(i = 0; i < nSubPixels; i += 4){\n        data[i + 0] = $20e6d0743b694e8f$var$remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = $20e6d0743b694e8f$var$remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = $20e6d0743b694e8f$var$remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\n$20e6d0743b694e8f$exports.Enhance = $20e6d0743b694e8f$var$Enhance;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"enhance\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $c69dea07f4d559c5$exports = {};\n\"use strict\";\nObject.defineProperty($c69dea07f4d559c5$exports, \"__esModule\", {\n    value: true\n});\n$c69dea07f4d559c5$exports.Grayscale = void 0;\nconst $c69dea07f4d559c5$var$Grayscale = function(imageData) {\n    var data = imageData.data, len = data.length, i, brightness;\n    for(i = 0; i < len; i += 4){\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\n$c69dea07f4d559c5$exports.Grayscale = $c69dea07f4d559c5$var$Grayscale;\n\n\nvar $5ce98f132547ea01$exports = {};\n\"use strict\";\nObject.defineProperty($5ce98f132547ea01$exports, \"__esModule\", {\n    value: true\n});\n$5ce98f132547ea01$exports.HSL = void 0;\n\n\n\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"hue\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"saturation\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"luminance\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\nconst $5ce98f132547ea01$var$HSL = function(imageData) {\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    var vsu = v * s * Math.cos(h * Math.PI / 180), vsw = v * s * Math.sin(h * Math.PI / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for(i = 0; i < nPixels; i += 4){\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\n$5ce98f132547ea01$exports.HSL = $5ce98f132547ea01$var$HSL;\n\n\nvar $364507ec698b9fef$exports = {};\n\"use strict\";\nObject.defineProperty($364507ec698b9fef$exports, \"__esModule\", {\n    value: true\n});\n$364507ec698b9fef$exports.HSV = void 0;\n\n\n\nconst $364507ec698b9fef$var$HSV = function(imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos(h * Math.PI / 180), vsw = v * s * Math.sin(h * Math.PI / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for(i = 0; i < nPixels; i += 4){\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\n$364507ec698b9fef$exports.HSV = $364507ec698b9fef$var$HSV;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"hue\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"saturation\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"value\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $8addd5b6397a9b1f$exports = {};\n\"use strict\";\nObject.defineProperty($8addd5b6397a9b1f$exports, \"__esModule\", {\n    value: true\n});\n$8addd5b6397a9b1f$exports.Invert = void 0;\nconst $8addd5b6397a9b1f$var$Invert = function(imageData) {\n    var data = imageData.data, len = data.length, i;\n    for(i = 0; i < len; i += 4){\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\n$8addd5b6397a9b1f$exports.Invert = $8addd5b6397a9b1f$var$Invert;\n\n\nvar $55755e5ba856d2db$exports = {};\n\"use strict\";\nObject.defineProperty($55755e5ba856d2db$exports, \"__esModule\", {\n    value: true\n});\n$55755e5ba856d2db$exports.Kaleidoscope = void 0;\n\n\n\n\nvar $55755e5ba856d2db$var$ToPolar = function(src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = 360 / tSize * Math.PI / 180, sin, cos;\n    for(theta = 0; theta < tSize; theta += 1){\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for(radius = 0; radius < rSize; radius += 1){\n            x = Math.floor(xMid + rMax * radius / rSize * cos);\n            y = Math.floor(yMid + rMax * radius / rSize * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar $55755e5ba856d2db$var$FromPolar = function(src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for(x = 0; x < xSize; x += 1)for(y = 0; y < ySize; y += 1){\n        dx = x - xMid;\n        dy = y - yMid;\n        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n        theta = theta * tSize / 360;\n        x1 = Math.floor(theta);\n        y1 = Math.floor(radius);\n        i = (y1 * xSize + x1) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n        i = (y * xSize + x) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n    }\n};\nconst $55755e5ba856d2db$var$Kaleidoscope = function(imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor(xSize * (angle % 360) / 360);\n    if (power < 1) return;\n    var tempCanvas = $27d6a996859d86c8$exports.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas.getContext(\"2d\").getImageData(0, 0, xSize, ySize);\n    $27d6a996859d86c8$exports.Util.releaseCanvas(tempCanvas);\n    $55755e5ba856d2db$var$ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while(minSectionSize <= 8){\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for(y = 0; y < ySize; y += 1)for(x = xStart; x !== xEnd; x += xDelta){\n        xoff = Math.round(x + offset) % xSize;\n        srcPos = (xSize * y + xoff) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + x) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n    }\n    for(y = 0; y < ySize; y += 1){\n        sectionSize = Math.floor(minSectionSize);\n        for(i = 0; i < power; i += 1){\n            for(x = 0; x < sectionSize + 1; x += 1){\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    $55755e5ba856d2db$var$FromPolar(scratchData, imageData, {\n        polarRotation: 0\n    });\n};\n$55755e5ba856d2db$exports.Kaleidoscope = $55755e5ba856d2db$var$Kaleidoscope;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"kaleidoscopePower\", 2, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"kaleidoscopeAngle\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $7ed7c0dcd9880c84$exports = {};\n\"use strict\";\nObject.defineProperty($7ed7c0dcd9880c84$exports, \"__esModule\", {\n    value: true\n});\n$7ed7c0dcd9880c84$exports.Mask = void 0;\n\n\n\nfunction $7ed7c0dcd9880c84$var$pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction $7ed7c0dcd9880c84$var$rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n}\nfunction $7ed7c0dcd9880c84$var$rgbMean(pTab) {\n    var m = [\n        0,\n        0,\n        0\n    ];\n    for(var i = 0; i < pTab.length; i++){\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction $7ed7c0dcd9880c84$var$backgroundMask(idata, threshold) {\n    var rgbv_no = $7ed7c0dcd9880c84$var$pixelAt(idata, 0, 0);\n    var rgbv_ne = $7ed7c0dcd9880c84$var$pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = $7ed7c0dcd9880c84$var$pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = $7ed7c0dcd9880c84$var$pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if ($7ed7c0dcd9880c84$var$rgbDistance(rgbv_no, rgbv_ne) < thres && $7ed7c0dcd9880c84$var$rgbDistance(rgbv_ne, rgbv_se) < thres && $7ed7c0dcd9880c84$var$rgbDistance(rgbv_se, rgbv_so) < thres && $7ed7c0dcd9880c84$var$rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = $7ed7c0dcd9880c84$var$rgbMean([\n            rgbv_ne,\n            rgbv_no,\n            rgbv_se,\n            rgbv_so\n        ]);\n        var mask = [];\n        for(var i = 0; i < idata.width * idata.height; i++){\n            var d = $7ed7c0dcd9880c84$var$rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction $7ed7c0dcd9880c84$var$applyMask(idata, mask) {\n    for(var i = 0; i < idata.width * idata.height; i++)idata.data[4 * i + 3] = mask[i];\n}\nfunction $7ed7c0dcd9880c84$var$erodeMask(mask, sw, sh) {\n    var weights = [\n        1,\n        1,\n        1,\n        1,\n        0,\n        1,\n        1,\n        1,\n        1\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for(var y = 0; y < sh; y++)for(var x = 0; x < sw; x++){\n        var so = y * sw + x;\n        var a = 0;\n        for(var cy = 0; cy < side; cy++)for(var cx = 0; cx < side; cx++){\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                var srcOff = scy * sw + scx;\n                var wt = weights[cy * side + cx];\n                a += mask[srcOff] * wt;\n            }\n        }\n        maskResult[so] = a === 2040 ? 255 : 0;\n    }\n    return maskResult;\n}\nfunction $7ed7c0dcd9880c84$var$dilateMask(mask, sw, sh) {\n    var weights = [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for(var y = 0; y < sh; y++)for(var x = 0; x < sw; x++){\n        var so = y * sw + x;\n        var a = 0;\n        for(var cy = 0; cy < side; cy++)for(var cx = 0; cx < side; cx++){\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                var srcOff = scy * sw + scx;\n                var wt = weights[cy * side + cx];\n                a += mask[srcOff] * wt;\n            }\n        }\n        maskResult[so] = a >= 1020 ? 255 : 0;\n    }\n    return maskResult;\n}\nfunction $7ed7c0dcd9880c84$var$smoothEdgeMask(mask, sw, sh) {\n    var weights = [\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9,\n        1 / 9\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for(var y = 0; y < sh; y++)for(var x = 0; x < sw; x++){\n        var so = y * sw + x;\n        var a = 0;\n        for(var cy = 0; cy < side; cy++)for(var cx = 0; cx < side; cx++){\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                var srcOff = scy * sw + scx;\n                var wt = weights[cy * side + cx];\n                a += mask[srcOff] * wt;\n            }\n        }\n        maskResult[so] = a;\n    }\n    return maskResult;\n}\nconst $7ed7c0dcd9880c84$var$Mask = function(imageData) {\n    var threshold = this.threshold(), mask = $7ed7c0dcd9880c84$var$backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = $7ed7c0dcd9880c84$var$erodeMask(mask, imageData.width, imageData.height);\n        mask = $7ed7c0dcd9880c84$var$dilateMask(mask, imageData.width, imageData.height);\n        mask = $7ed7c0dcd9880c84$var$smoothEdgeMask(mask, imageData.width, imageData.height);\n        $7ed7c0dcd9880c84$var$applyMask(imageData, mask);\n    }\n    return imageData;\n};\n$7ed7c0dcd9880c84$exports.Mask = $7ed7c0dcd9880c84$var$Mask;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"threshold\", 0, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $719bd5eb4ff7a25d$exports = {};\n\"use strict\";\nObject.defineProperty($719bd5eb4ff7a25d$exports, \"__esModule\", {\n    value: true\n});\n$719bd5eb4ff7a25d$exports.Noise = void 0;\n\n\n\nconst $719bd5eb4ff7a25d$var$Noise = function(imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for(i = 0; i < nPixels; i += 4){\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\n$719bd5eb4ff7a25d$exports.Noise = $719bd5eb4ff7a25d$var$Noise;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"noise\", 0.2, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $d4d269af6c62c62b$exports = {};\n\"use strict\";\nObject.defineProperty($d4d269af6c62c62b$exports, \"__esModule\", {\n    value: true\n});\n$d4d269af6c62c62b$exports.Pixelate = void 0;\n\n\n\n\nconst $d4d269af6c62c62b$var$Pixelate = function(imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        $27d6a996859d86c8$exports.Util.error(\"pixelSize value can not be <= 0\");\n        return;\n    }\n    for(xBin = 0; xBin < nBinsX; xBin += 1)for(yBin = 0; yBin < nBinsY; yBin += 1){\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        xBinStart = xBin * pixelSize;\n        xBinEnd = xBinStart + pixelSize;\n        yBinStart = yBin * pixelSize;\n        yBinEnd = yBinStart + pixelSize;\n        pixelsInBin = 0;\n        for(x = xBinStart; x < xBinEnd; x += 1){\n            if (x >= width) continue;\n            for(y = yBinStart; y < yBinEnd; y += 1){\n                if (y >= height) continue;\n                i = (width * y + x) * 4;\n                red += data[i + 0];\n                green += data[i + 1];\n                blue += data[i + 2];\n                alpha += data[i + 3];\n                pixelsInBin += 1;\n            }\n        }\n        red = red / pixelsInBin;\n        green = green / pixelsInBin;\n        blue = blue / pixelsInBin;\n        alpha = alpha / pixelsInBin;\n        for(x = xBinStart; x < xBinEnd; x += 1){\n            if (x >= width) continue;\n            for(y = yBinStart; y < yBinEnd; y += 1){\n                if (y >= height) continue;\n                i = (width * y + x) * 4;\n                data[i + 0] = red;\n                data[i + 1] = green;\n                data[i + 2] = blue;\n                data[i + 3] = alpha;\n            }\n        }\n    }\n};\n$d4d269af6c62c62b$exports.Pixelate = $d4d269af6c62c62b$var$Pixelate;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"pixelSize\", 8, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $0f5e5467a57f15eb$exports = {};\n\"use strict\";\nObject.defineProperty($0f5e5467a57f15eb$exports, \"__esModule\", {\n    value: true\n});\n$0f5e5467a57f15eb$exports.Posterize = void 0;\n\n\n\nconst $0f5e5467a57f15eb$var$Posterize = function(imageData) {\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for(i = 0; i < len; i += 1)data[i] = Math.floor(data[i] / scale) * scale;\n};\n$0f5e5467a57f15eb$exports.Posterize = $0f5e5467a57f15eb$var$Posterize;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"levels\", 0.5, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $1a03251528af5732$exports = {};\n\"use strict\";\nObject.defineProperty($1a03251528af5732$exports, \"__esModule\", {\n    value: true\n});\n$1a03251528af5732$exports.RGB = void 0;\n\n\n\nconst $1a03251528af5732$var$RGB = function(imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for(i = 0; i < nPixels; i += 4){\n        brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\n$1a03251528af5732$exports.RGB = $1a03251528af5732$var$RGB;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"red\", 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) return 255;\n    else if (val < 0) return 0;\n    else return Math.round(val);\n});\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"green\", 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) return 255;\n    else if (val < 0) return 0;\n    else return Math.round(val);\n});\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"blue\", 0, $44f336646fbbdff8$exports.RGBComponent, $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\nvar $0b8dafa17fe830a1$exports = {};\n\"use strict\";\nObject.defineProperty($0b8dafa17fe830a1$exports, \"__esModule\", {\n    value: true\n});\n$0b8dafa17fe830a1$exports.RGBA = void 0;\n\n\n\nconst $0b8dafa17fe830a1$var$RGBA = function(imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for(i = 0; i < nPixels; i += 4){\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\n$0b8dafa17fe830a1$exports.RGBA = $0b8dafa17fe830a1$var$RGBA;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"red\", 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) return 255;\n    else if (val < 0) return 0;\n    else return Math.round(val);\n});\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"green\", 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) return 255;\n    else if (val < 0) return 0;\n    else return Math.round(val);\n});\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"blue\", 0, $44f336646fbbdff8$exports.RGBComponent, $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"alpha\", 1, function(val) {\n    this._filterUpToDate = false;\n    if (val > 1) return 1;\n    else if (val < 0) return 0;\n    else return val;\n});\n\n\nvar $529ffc80d3d1853d$exports = {};\n\"use strict\";\nObject.defineProperty($529ffc80d3d1853d$exports, \"__esModule\", {\n    value: true\n});\n$529ffc80d3d1853d$exports.Sepia = void 0;\nconst $529ffc80d3d1853d$var$Sepia = function(imageData) {\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\n    for(i = 0; i < nPixels; i += 4){\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\n$529ffc80d3d1853d$exports.Sepia = $529ffc80d3d1853d$var$Sepia;\n\n\nvar $99e814b66379ac83$exports = {};\n\"use strict\";\nObject.defineProperty($99e814b66379ac83$exports, \"__esModule\", {\n    value: true\n});\n$99e814b66379ac83$exports.Solarize = void 0;\nconst $99e814b66379ac83$var$Solarize = function(imageData) {\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    do {\n        var offsetY = (y - 1) * w4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var r = data[offset];\n            var g = data[offset + 1];\n            var b = data[offset + 2];\n            if (r > 127) r = 255 - r;\n            if (g > 127) g = 255 - g;\n            if (b > 127) b = 255 - b;\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        }while (--x);\n    }while (--y);\n};\n$99e814b66379ac83$exports.Solarize = $99e814b66379ac83$var$Solarize;\n\n\nvar $0ffe6a4831fef991$exports = {};\n\"use strict\";\nObject.defineProperty($0ffe6a4831fef991$exports, \"__esModule\", {\n    value: true\n});\n$0ffe6a4831fef991$exports.Threshold = void 0;\n\n\n\nconst $0ffe6a4831fef991$var$Threshold = function(imageData) {\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\n    for(i = 0; i < len; i += 1)data[i] = data[i] < level ? 0 : 255;\n};\n$0ffe6a4831fef991$exports.Threshold = $0ffe6a4831fef991$var$Threshold;\n$9a603088dcd0ec15$exports.Factory.addGetterSetter($03fc3abdfa907317$exports.Node, \"threshold\", 0.5, (0, $44f336646fbbdff8$exports.getNumberValidator)(), $9a603088dcd0ec15$exports.Factory.afterSetFilter);\n\n\n$32614abcc186d4fe$exports.Konva = $489e46baf1687eb2$exports.Konva.Util._assign($489e46baf1687eb2$exports.Konva, {\n    Arc: $2d67c1a1a72b8ce1$exports.Arc,\n    Arrow: $d0c80a6fe5fa4728$exports.Arrow,\n    Circle: $04480eaa32079d19$exports.Circle,\n    Ellipse: $736e07c6c47b1470$exports.Ellipse,\n    Image: $5a9745b05ab2385a$exports.Image,\n    Label: $5fe52d077064716d$exports.Label,\n    Tag: $5fe52d077064716d$exports.Tag,\n    Line: $5217a1f06c18ba48$exports.Line,\n    Path: $b423ec4e2dd4644d$exports.Path,\n    Rect: $07185923f893a775$exports.Rect,\n    RegularPolygon: $0f8c5d6ae2dc1fde$exports.RegularPolygon,\n    Ring: $b49fcfc41be2e2d7$exports.Ring,\n    Sprite: $f274d880ee17c436$exports.Sprite,\n    Star: $14349c1993cbf05e$exports.Star,\n    Text: $a9317926b4b08128$exports.Text,\n    TextPath: $cd9310de5b54c82f$exports.TextPath,\n    Transformer: $fbebca90c6857f1d$exports.Transformer,\n    Wedge: $8505864c4c1aa7c5$exports.Wedge,\n    Filters: {\n        Blur: $a22379f0b858a0ef$exports.Blur,\n        Brighten: $6e99d3a7c3be0513$exports.Brighten,\n        Contrast: $5dc0c636e0e21849$exports.Contrast,\n        Emboss: $a67f5007962e021c$exports.Emboss,\n        Enhance: $20e6d0743b694e8f$exports.Enhance,\n        Grayscale: $c69dea07f4d559c5$exports.Grayscale,\n        HSL: $5ce98f132547ea01$exports.HSL,\n        HSV: $364507ec698b9fef$exports.HSV,\n        Invert: $8addd5b6397a9b1f$exports.Invert,\n        Kaleidoscope: $55755e5ba856d2db$exports.Kaleidoscope,\n        Mask: $7ed7c0dcd9880c84$exports.Mask,\n        Noise: $719bd5eb4ff7a25d$exports.Noise,\n        Pixelate: $d4d269af6c62c62b$exports.Pixelate,\n        Posterize: $0f5e5467a57f15eb$exports.Posterize,\n        RGB: $1a03251528af5732$exports.RGB,\n        RGBA: $0b8dafa17fe830a1$exports.RGBA,\n        Sepia: $529ffc80d3d1853d$exports.Sepia,\n        Solarize: $99e814b66379ac83$exports.Solarize,\n        Threshold: $0ffe6a4831fef991$exports.Threshold\n    }\n});\n\n\n$590c77a791d51802$exports = $32614abcc186d4fe$exports.Konva;\n\n\nconst $e73bf42412feb220$var$stage = new (0, (/*@__PURE__*/$parcel$interopDefault($590c77a791d51802$exports))).Stage({\n    container: \"container\",\n    width: window.innerWidth,\n    height: window.innerHeight,\n    draggable: true\n});\nconst $e73bf42412feb220$var$layer = new (0, (/*@__PURE__*/$parcel$interopDefault($590c77a791d51802$exports))).Layer({});\nfor(let i = 0; i < 100; i++){\n    const dim = 50;\n    const rect = new (0, (/*@__PURE__*/$parcel$interopDefault($590c77a791d51802$exports))).Rect({\n        width: dim,\n        height: dim,\n        x: Math.random() * (window.innerWidth - dim),\n        y: Math.random() * (window.innerHeight - dim),\n        fill: `hsl(${Math.floor(Math.random() * 255)} 90% 70%)`,\n        draggable: true,\n        id: i + \"\",\n        stroke: \"#333\",\n        strokeWidth: 1\n    });\n    $e73bf42412feb220$var$layer.add(rect);\n}\ndocument.addEventListener(\"keydown\", (e)=>{\n    $e73bf42412feb220$var$stage.draggable(!$e73bf42412feb220$var$stage.draggable());\n    if ($e73bf42412feb220$var$stage.draggable()) document.body.classList.add(\"draggable\");\n    else document.body.classList.remove(\"draggable\");\n});\n$e73bf42412feb220$var$stage.addEventListener(\"wheel\", (e)=>{\n    const zoomIn = e.wheelDeltaY > 0;\n    if ($e73bf42412feb220$var$stage.scaleX() > 4 && zoomIn) return;\n    if ($e73bf42412feb220$var$stage.scaleX() < 0.1 && !zoomIn) return;\n    let factor = 0.8;\n    if (zoomIn) factor = 1 / factor;\n    $e73bf42412feb220$var$stage.scaleX($e73bf42412feb220$var$stage.scaleX() * factor);\n    $e73bf42412feb220$var$stage.scaleY($e73bf42412feb220$var$stage.scaleY() * factor);\n    const dx = (e.x - $e73bf42412feb220$var$stage.x()) * (factor - 1);\n    const dy = (e.y - $e73bf42412feb220$var$stage.y()) * (factor - 1);\n    $e73bf42412feb220$var$stage.x($e73bf42412feb220$var$stage.x() - dx);\n    $e73bf42412feb220$var$stage.y($e73bf42412feb220$var$stage.y() - dy);\n});\n$e73bf42412feb220$var$layer.children.forEach((thisRect)=>{\n    thisRect.addEventListener(\"mouseup\", ()=>{\n        $e73bf42412feb220$var$snap(thisRect);\n    });\n    thisRect.addEventListener(\"dragmove\", ()=>{\n        $e73bf42412feb220$var$highlightSnap(thisRect);\n    });\n    thisRect.addEventListener(\"dragend\", ()=>{\n        thisRect.opacity(1);\n    });\n});\nfunction $e73bf42412feb220$var$highlightSnap(thisRect) {\n    thisRect.moveToTop();\n    let snapFound = false;\n    $e73bf42412feb220$var$layer.children.forEach((otherRect)=>{\n        const sameRect = otherRect.id() === thisRect.id();\n        if (sameRect) return;\n        const canSnap = $e73bf42412feb220$var$canSnapTo(thisRect, otherRect);\n        if (canSnap) {\n            thisRect.opacity(0.5);\n            snapFound = true;\n        } else if (!snapFound) thisRect.opacity(1);\n    });\n    snapFound = false;\n}\nfunction $e73bf42412feb220$var$snap(thisRect) {\n    $e73bf42412feb220$var$layer.children.forEach((otherRect)=>{\n        const sameRect = otherRect.id() === thisRect.id();\n        if (sameRect) return;\n        const direction = $e73bf42412feb220$var$canSnapTo(thisRect, otherRect);\n        if (!direction) return;\n        switch(direction){\n            case \"top\":\n                {\n                    const otherYTop = otherRect.y() - otherRect.height();\n                    thisRect.y(otherYTop);\n                    thisRect.x(otherRect.x());\n                    break;\n                }\n            case \"left\":\n                {\n                    const otherXLeft = otherRect.x() - otherRect.width();\n                    thisRect.x(otherXLeft);\n                    thisRect.y(otherRect.y());\n                    break;\n                }\n            case \"right\":\n                {\n                    const otherXRight = otherRect.x() + otherRect.width();\n                    thisRect.x(otherXRight);\n                    thisRect.y(otherRect.y());\n                    break;\n                }\n            case \"bottom\":\n                {\n                    const otherYBottom = otherRect.y() + otherRect.height();\n                    thisRect.y(otherYBottom);\n                    thisRect.x(otherRect.x());\n                    break;\n                }\n        }\n    });\n}\n//doesnt work well with none square rects\nfunction $e73bf42412feb220$var$canSnapTo(thisRect, otherRect) {\n    const snapDistance = thisRect.width() / 4;\n    const otherXRight = otherRect.x() + otherRect.width();\n    const otherXLeft = otherRect.x() - otherRect.width();\n    const otherYBottom = otherRect.y() + otherRect.height();\n    const otherYTop = otherRect.y() - otherRect.height();\n    const distanceToRedRight = Math.abs(thisRect.x() - otherXRight);\n    const distanceToRedLeft = Math.abs(thisRect.x() - otherXLeft);\n    const distanceToRedBottom = Math.abs(thisRect.y() - otherYBottom);\n    const distanceToRedTop = Math.abs(thisRect.y() - otherYTop);\n    const xWithinSnap = Math.abs(otherRect.x() - thisRect.x()) < snapDistance;\n    const yWithinSnap = Math.abs(otherRect.y() - thisRect.y()) < snapDistance;\n    if (yWithinSnap) {\n        if (distanceToRedLeft < snapDistance) return \"left\";\n        if (distanceToRedRight < snapDistance) return \"right\";\n    }\n    if (xWithinSnap) {\n        if (distanceToRedTop < snapDistance) return \"top\";\n        if (distanceToRedBottom < snapDistance) return \"bottom\";\n    }\n}\n$e73bf42412feb220$var$stage.add($e73bf42412feb220$var$layer);\n//\nfunction $e73bf42412feb220$var$debounce(func, timeout = 300) {\n    let timer;\n    return (...args)=>{\n        if (!timer) func.apply(this, args);\n        clearTimeout(timer);\n        timer = setTimeout(()=>{\n            timer = undefined;\n        }, timeout);\n    };\n}\n\n\n//# sourceMappingURL=index.2caeb376.js.map\n","import konva from 'konva';\n\nconst stage = new konva.Stage({\n  container: 'container',\n  width: window.innerWidth,\n  height: window.innerHeight,\n  draggable: true,\n});\n\nconst layer = new konva.Layer({});\n\nfor (let i = 0; i < 100; i++) {\n  const dim = 50;\n  const rect = new konva.Rect({\n    width: dim,\n    height: dim,\n    x: Math.random() * (window.innerWidth - dim),\n    y: Math.random() * (window.innerHeight - dim),\n    fill: `hsl(${Math.floor(Math.random() * 255)} 90% 70%)`,\n    draggable: true,\n    id: i + '',\n    stroke: '#333',\n    strokeWidth: 1,\n  });\n\n  layer.add(rect);\n}\n\ndocument.addEventListener('keydown', (e) => {\n  stage.draggable(!stage.draggable());\n  if (stage.draggable()) document.body.classList.add('draggable');\n  else document.body.classList.remove('draggable');\n});\n\nstage.addEventListener('wheel', (e) => {\n  const zoomIn = e.wheelDeltaY > 0;\n  if (stage.scaleX() > 4 && zoomIn) return;\n  if (stage.scaleX() < 0.1 && !zoomIn) return;\n  let factor = 0.8;\n  if (zoomIn) factor = 1 / factor;\n\n  stage.scaleX(stage.scaleX() * factor);\n  stage.scaleY(stage.scaleY() * factor);\n\n  const dx = (e.x - stage.x()) * (factor - 1);\n  const dy = (e.y - stage.y()) * (factor - 1);\n  stage.x(stage.x() - dx);\n  stage.y(stage.y() - dy);\n});\n\nlayer.children.forEach((thisRect) => {\n  thisRect.addEventListener('mouseup', () => {\n    snap(thisRect);\n  });\n  thisRect.addEventListener('dragmove', () => {\n    highlightSnap(thisRect);\n  });\n  thisRect.addEventListener('dragend', () => {\n    thisRect.opacity(1);\n  });\n});\n\nfunction highlightSnap(thisRect) {\n  thisRect.moveToTop();\n  let snapFound = false;\n  layer.children.forEach((otherRect) => {\n    const sameRect = otherRect.id() === thisRect.id();\n    if (sameRect) return;\n    const canSnap = canSnapTo(thisRect, otherRect);\n    if (canSnap) {\n      thisRect.opacity(0.5);\n      snapFound = true;\n    } else if (!snapFound) thisRect.opacity(1);\n  });\n  snapFound = false;\n}\n\nfunction snap(thisRect) {\n  layer.children.forEach((otherRect) => {\n    const sameRect = otherRect.id() === thisRect.id();\n    if (sameRect) return;\n\n    const direction = canSnapTo(thisRect, otherRect);\n    if (!direction) return;\n    switch (direction) {\n      case 'top': {\n        const otherYTop = otherRect.y() - otherRect.height();\n        thisRect.y(otherYTop);\n        thisRect.x(otherRect.x());\n        break;\n      }\n      case 'left': {\n        const otherXLeft = otherRect.x() - otherRect.width();\n        thisRect.x(otherXLeft);\n        thisRect.y(otherRect.y());\n        break;\n      }\n      case 'right': {\n        const otherXRight = otherRect.x() + otherRect.width();\n        thisRect.x(otherXRight);\n        thisRect.y(otherRect.y());\n        break;\n      }\n      case 'bottom': {\n        const otherYBottom = otherRect.y() + otherRect.height();\n        thisRect.y(otherYBottom);\n        thisRect.x(otherRect.x());\n        break;\n      }\n    }\n  });\n}\n\n//doesnt work well with none square rects\nfunction canSnapTo(thisRect, otherRect) {\n  const snapDistance = thisRect.width() / 4;\n  const otherXRight = otherRect.x() + otherRect.width();\n  const otherXLeft = otherRect.x() - otherRect.width();\n  const otherYBottom = otherRect.y() + otherRect.height();\n  const otherYTop = otherRect.y() - otherRect.height();\n  const distanceToRedRight = Math.abs(thisRect.x() - otherXRight);\n  const distanceToRedLeft = Math.abs(thisRect.x() - otherXLeft);\n  const distanceToRedBottom = Math.abs(thisRect.y() - otherYBottom);\n  const distanceToRedTop = Math.abs(thisRect.y() - otherYTop);\n  const xWithinSnap = Math.abs(otherRect.x() - thisRect.x()) < snapDistance;\n  const yWithinSnap = Math.abs(otherRect.y() - thisRect.y()) < snapDistance;\n\n  if (yWithinSnap) {\n    if (distanceToRedLeft < snapDistance) {\n      return 'left';\n    }\n    if (distanceToRedRight < snapDistance) {\n      return 'right';\n    }\n  }\n  if (xWithinSnap) {\n    if (distanceToRedTop < snapDistance) {\n      return 'top';\n    }\n    if (distanceToRedBottom < snapDistance) {\n      return 'bottom';\n    }\n  }\n}\nstage.add(layer);\n\n//\n\nfunction debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    if (!timer) {\n      func.apply(this, args);\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = undefined;\n    }, timeout);\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _FullInternals_1 = require(\"./_FullInternals\");\nmodule.exports = _FullInternals_1.Konva;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Konva = void 0;\nconst _CoreInternals_1 = require(\"./_CoreInternals\");\nconst Arc_1 = require(\"./shapes/Arc\");\nconst Arrow_1 = require(\"./shapes/Arrow\");\nconst Circle_1 = require(\"./shapes/Circle\");\nconst Ellipse_1 = require(\"./shapes/Ellipse\");\nconst Image_1 = require(\"./shapes/Image\");\nconst Label_1 = require(\"./shapes/Label\");\nconst Line_1 = require(\"./shapes/Line\");\nconst Path_1 = require(\"./shapes/Path\");\nconst Rect_1 = require(\"./shapes/Rect\");\nconst RegularPolygon_1 = require(\"./shapes/RegularPolygon\");\nconst Ring_1 = require(\"./shapes/Ring\");\nconst Sprite_1 = require(\"./shapes/Sprite\");\nconst Star_1 = require(\"./shapes/Star\");\nconst Text_1 = require(\"./shapes/Text\");\nconst TextPath_1 = require(\"./shapes/TextPath\");\nconst Transformer_1 = require(\"./shapes/Transformer\");\nconst Wedge_1 = require(\"./shapes/Wedge\");\nconst Blur_1 = require(\"./filters/Blur\");\nconst Brighten_1 = require(\"./filters/Brighten\");\nconst Contrast_1 = require(\"./filters/Contrast\");\nconst Emboss_1 = require(\"./filters/Emboss\");\nconst Enhance_1 = require(\"./filters/Enhance\");\nconst Grayscale_1 = require(\"./filters/Grayscale\");\nconst HSL_1 = require(\"./filters/HSL\");\nconst HSV_1 = require(\"./filters/HSV\");\nconst Invert_1 = require(\"./filters/Invert\");\nconst Kaleidoscope_1 = require(\"./filters/Kaleidoscope\");\nconst Mask_1 = require(\"./filters/Mask\");\nconst Noise_1 = require(\"./filters/Noise\");\nconst Pixelate_1 = require(\"./filters/Pixelate\");\nconst Posterize_1 = require(\"./filters/Posterize\");\nconst RGB_1 = require(\"./filters/RGB\");\nconst RGBA_1 = require(\"./filters/RGBA\");\nconst Sepia_1 = require(\"./filters/Sepia\");\nconst Solarize_1 = require(\"./filters/Solarize\");\nconst Threshold_1 = require(\"./filters/Threshold\");\nexports.Konva = _CoreInternals_1.Konva.Util._assign(_CoreInternals_1.Konva, {\n    Arc: Arc_1.Arc,\n    Arrow: Arrow_1.Arrow,\n    Circle: Circle_1.Circle,\n    Ellipse: Ellipse_1.Ellipse,\n    Image: Image_1.Image,\n    Label: Label_1.Label,\n    Tag: Label_1.Tag,\n    Line: Line_1.Line,\n    Path: Path_1.Path,\n    Rect: Rect_1.Rect,\n    RegularPolygon: RegularPolygon_1.RegularPolygon,\n    Ring: Ring_1.Ring,\n    Sprite: Sprite_1.Sprite,\n    Star: Star_1.Star,\n    Text: Text_1.Text,\n    TextPath: TextPath_1.TextPath,\n    Transformer: Transformer_1.Transformer,\n    Wedge: Wedge_1.Wedge,\n    Filters: {\n        Blur: Blur_1.Blur,\n        Brighten: Brighten_1.Brighten,\n        Contrast: Contrast_1.Contrast,\n        Emboss: Emboss_1.Emboss,\n        Enhance: Enhance_1.Enhance,\n        Grayscale: Grayscale_1.Grayscale,\n        HSL: HSL_1.HSL,\n        HSV: HSV_1.HSV,\n        Invert: Invert_1.Invert,\n        Kaleidoscope: Kaleidoscope_1.Kaleidoscope,\n        Mask: Mask_1.Mask,\n        Noise: Noise_1.Noise,\n        Pixelate: Pixelate_1.Pixelate,\n        Posterize: Posterize_1.Posterize,\n        RGB: RGB_1.RGB,\n        RGBA: RGBA_1.RGBA,\n        Sepia: Sepia_1.Sepia,\n        Solarize: Solarize_1.Solarize,\n        Threshold: Threshold_1.Threshold,\n    },\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Konva = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst Node_1 = require(\"./Node\");\nconst Container_1 = require(\"./Container\");\nconst Stage_1 = require(\"./Stage\");\nconst Layer_1 = require(\"./Layer\");\nconst FastLayer_1 = require(\"./FastLayer\");\nconst Group_1 = require(\"./Group\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Shape_1 = require(\"./Shape\");\nconst Animation_1 = require(\"./Animation\");\nconst Tween_1 = require(\"./Tween\");\nconst Context_1 = require(\"./Context\");\nconst Canvas_1 = require(\"./Canvas\");\nexports.Konva = Util_1.Util._assign(Global_1.Konva, {\n    Util: Util_1.Util,\n    Transform: Util_1.Transform,\n    Node: Node_1.Node,\n    Container: Container_1.Container,\n    Stage: Stage_1.Stage,\n    stages: Stage_1.stages,\n    Layer: Layer_1.Layer,\n    FastLayer: FastLayer_1.FastLayer,\n    Group: Group_1.Group,\n    DD: DragAndDrop_1.DD,\n    Shape: Shape_1.Shape,\n    shapes: Shape_1.shapes,\n    Animation: Animation_1.Animation,\n    Tween: Tween_1.Tween,\n    Easings: Tween_1.Easings,\n    Context: Context_1.Context,\n    Canvas: Canvas_1.Canvas,\n});\nexports.default = exports.Konva;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._registerNode = exports.Konva = exports.glob = void 0;\nvar PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexports.glob = typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexports.Konva = {\n    _global: exports.glob,\n    version: '9.2.0',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return exports.Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return exports.Konva['DD'].isDragging;\n    },\n    isDragReady() {\n        return !!exports.Konva['DD'].node;\n    },\n    releaseCanvasOnDestroy: true,\n    document: exports.glob.document,\n    _injectGlobal(Konva) {\n        exports.glob.Konva = Konva;\n    },\n};\nconst _registerNode = (NodeClass) => {\n    exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nexports._registerNode = _registerNode;\nexports.Konva._injectGlobal(exports.Konva);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.Transform = void 0;\nconst Global_1 = require(\"./Global\");\nclass Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = exports.Util._getRotation(result.rotation);\n        return result;\n    }\n}\nexports.Transform = Transform;\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexports.Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = exports.Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (exports.Util._namedColorToRBA(str) ||\n            exports.Util._hex3ColorToRGBA(str) ||\n            exports.Util._hex4ColorToRGBA(str) ||\n            exports.Util._hex6ColorToRGBA(str) ||\n            exports.Util._hex8ColorToRGBA(str) ||\n            exports.Util._rgbColorToRGBA(str) ||\n            exports.Util._rgbaColorToRGBA(str) ||\n            exports.Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === '%') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex8ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 9) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex4ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 5) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: parseInt(str[4] + str[4], 16) / 0xff,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return exports.Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return exports.Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Global_1.Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = exports.Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = exports.Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                exports.Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (exports.Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n    releaseCanvas(...canvases) {\n        if (!Global_1.Konva.releaseCanvasOnDestroy)\n            return;\n        canvases.forEach(c => {\n            c.width = 0;\n            c.height = 0;\n        });\n    },\n    drawRoundedRectPath(context, width, height, cornerRadius) {\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.moveTo(topLeft, 0);\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Global_1 = require(\"./Global\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Validators_1 = require(\"./Validators\");\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nclass Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        if (this._cache.has(CANVAS)) {\n            const { scene, filter, hit } = this._cache.get(CANVAS);\n            Util_1.Util.releaseCanvas(scene, filter, hit);\n            this._cache.delete(CANVAS);\n        }\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util_1.Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2 + 1;\n        height += offset * 2 + 1;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new Canvas_1.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new Canvas_1.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n            willReadFrequently: true,\n        }), cachedHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util_1.Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util_1.Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util_1.Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DragAndDrop_1.DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        this.clearCache();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util_1.Util._capitalize(attr);\n        if (Util_1.Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util_1.Util._capitalize(key);\n                if (Util_1.Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DragAndDrop_1.DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Global_1.Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Util_1.Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util_1.Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util_1.Util.isObject(val) && !Util_1.Util._isPlainObject(val) && !Util_1.Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util_1.Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util_1.Util.isValidSelector(sel)) {\n                Util_1.Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util_1.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util_1.Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Util_1.Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Util_1.Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Util_1.Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Global_1.Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util_1.Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new Canvas_1.SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height ||\n                Math.ceil(box.height) ||\n                (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        if (config.imageSmoothingEnabled === false) {\n            context._context.imageSmoothingEnabled = false;\n        }\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                Util_1.Util._urlToImage(this.toDataURL(config), function (img) {\n                    resolve(img);\n                    callback === null || callback === void 0 ? void 0 : callback(img);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                this.toCanvas(config).toBlob((blob) => {\n                    resolve(blob);\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Global_1.Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util_1.Util._capitalize(attr)];\n        if (Util_1.Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Global_1.Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util_1.Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        var _a, _b, _c;\n        const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\n        let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\n        if (events === undefined) {\n            events = [];\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\n                events.push(...hierarchyEvents);\n                obj = Object.getPrototypeOf(obj);\n            }\n            allListeners[eventType] = events;\n            this._cache.set(ALL_LISTENERS, allListeners);\n        }\n        return events;\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DragAndDrop_1.DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DragAndDrop_1.DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util_1.Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DragAndDrop_1.DD._endDragBefore(evt);\n        DragAndDrop_1.DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Global_1.Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DragAndDrop_1.DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DragAndDrop_1.DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DragAndDrop_1.DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y,\n        };\n        return Util_1.Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util_1.Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Global_1.Konva[className]) {\n            Util_1.Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Global_1.Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nexports.Node = Node;\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory_1.Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'y', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'opacity', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'name', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'id', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'rotation', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'scaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'skewY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'offsetY', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'dragDistance', null, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'width', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'height', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'listening', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'preventDefault', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'transformsEnabled', 'all', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Factory = void 0;\nconst Util_1 = require(\"./Util\");\nconst Validators_1 = require(\"./Validators\");\nvar GET = 'get', SET = 'set';\nexports.Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        exports.Factory.addGetter(constructor, attr, def);\n        exports.Factory.addSetter(constructor, attr, validator, after);\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = (0, Validators_1.getComponentValidator)(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util_1.Util.error('Adding deprecated ' + attr);\n        var method = GET + Util_1.Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util_1.Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        exports.Factory.addSetter(constructor, attr, validator, function () {\n            Util_1.Util.error(message);\n        });\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_1.Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexports.RGBComponent = RGBComponent;\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexports.alphaComponent = alphaComponent;\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberValidator = getNumberValidator;\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util_1.Util._isNumber(val);\n            let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util_1.Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringValidator = getStringValidator;\nfunction getStringOrGradientValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util_1.Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexports.getFunctionValidator = getFunctionValidator;\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexports.getNumberArrayValidator = getNumberArrayValidator;\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexports.getBooleanValidator = getBooleanValidator;\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\nexports.getComponentValidator = getComponentValidator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HitCanvas = exports.SceneCanvas = exports.Canvas = void 0;\nconst Util_1 = require(\"./Util\");\nconst Context_1 = require(\"./Context\");\nconst Global_1 = require(\"./Global\");\nconst Factory_1 = require(\"./Factory\");\nconst Validators_1 = require(\"./Validators\");\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util_1.Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Global_1.Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    Util_1.Util.releaseCanvas(canvas);\n    return _pixelRatio;\n}\nclass Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Global_1.Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util_1.Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util_1.Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nexports.Canvas = Canvas;\nFactory_1.Factory.addGetterSetter(Canvas, 'pixelRatio', undefined, (0, Validators_1.getNumberValidator)());\nclass SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0, willReadFrequently: false }) {\n        super(config);\n        this.context = new Context_1.SceneContext(this, {\n            willReadFrequently: config.willReadFrequently,\n        });\n        this.setSize(config.width, config.height);\n    }\n}\nexports.SceneCanvas = SceneCanvas;\nclass HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new Context_1.HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexports.HitCanvas = HitCanvas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = require(\"./Util\");\nconst Global_1 = require(\"./Global\");\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util_1.Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nclass Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Global_1.Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util_1.Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip(...args) {\n        this._context.clip.apply(this._context, args);\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(...args) {\n        this._context.fill.apply(this._context, args);\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nclass SceneContext extends Context {\n    constructor(canvas, { willReadFrequently = false } = {}) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently,\n        });\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\nexports.HitContext = HitContext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DD = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nexports.DD = {\n    get isDragging() {\n        var flag = false;\n        exports.DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        exports.DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        exports.DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        const drawNodes = [];\n        exports.DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                exports.DD.justDragged = true;\n                Global_1.Konva._mouseListenClick = false;\n                Global_1.Konva._touchListenClick = false;\n                Global_1.Konva._pointerListenClick = false;\n                elem.dragStatus = 'stopped';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n                drawNodes.push(drawNode);\n            }\n        });\n        drawNodes.forEach((drawNode) => {\n            drawNode.draw();\n        });\n    },\n    _endDragAfter(evt) {\n        exports.DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst Factory_1 = require(\"./Factory\");\nconst Node_1 = require(\"./Node\");\nconst Validators_1 = require(\"./Validators\");\nclass Container extends Node_1.Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (children.length === 0) {\n            return this;\n        }\n        if (children.length > 1) {\n            for (var i = 0; i < children.length; i++) {\n                this.add(children[i]);\n            }\n            return this;\n        }\n        const child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node_1.Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node_1.Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            let clipArgs;\n            if (clipFunc) {\n                clipArgs = clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip.apply(context, clipArgs);\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nexports.Container = Container;\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stage = exports.stages = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nconst Canvas_1 = require(\"./Canvas\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        exports.stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_1.Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container_1.Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util_1.Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = exports.stages.indexOf(this);\n        if (index > -1) {\n            exports.stages.splice(index, 1);\n        }\n        Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new Canvas_1.SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_1.Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Global_1.Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DragAndDrop_1.DD.justDragged = false;\n            Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Global_1.Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DragAndDrop_1.DD.justDragged) {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Global_1.Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Global_1.Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util_1.Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util_1.Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.releaseCapture = exports.setPointerCapture = exports.hasPointerCapture = exports.createEvent = exports.getCapturedShape = void 0;\nconst Global_1 = require(\"./Global\");\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\nfunction getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexports.getCapturedShape = getCapturedShape;\nfunction createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexports.createEvent = createEvent;\nfunction hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexports.hasPointerCapture = hasPointerCapture;\nfunction setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexports.setPointerCapture = setPointerCapture;\nfunction releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\nexports.releaseCapture = releaseCapture;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Layer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Node_1 = require(\"./Node\");\nconst Factory_1 = require(\"./Factory\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Validators_1 = require(\"./Validators\");\nconst Shape_1 = require(\"./Shape\");\nconst Global_1 = require(\"./Global\");\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new Canvas_1.SceneCanvas();\n        this.hitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node_1.Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node_1.Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node_1.Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node_1.Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util_1.Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = Shape_1.shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shape = exports.shapes = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Node_1 = require(\"./Node\");\nconst Validators_1 = require(\"./Validators\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\n    return dummyContext;\n}\nexports.shapes = {};\nfunction _fillFunc(context) {\n    const fillRule = this.attrs.fillRule;\n    if (fillRule) {\n        context.fill(fillRule);\n    }\n    else {\n        context.fill();\n    }\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    context.fill();\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nclass Shape extends Node_1.Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util_1.Util.getRandomColor();\n            if (key && !(key in exports.shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        exports.shapes[key] = this;\n    }\n    getContext() {\n        Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this['_hitFunc'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n            if (pattern && pattern.setTransform) {\n                const tr = new Util_1.Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === 'undefined'\n                    ? {\n                        a: m[0],\n                        b: m[1],\n                        c: m[2],\n                        d: m[3],\n                        e: m[4],\n                        f: m[5],\n                    }\n                    : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (!this.hasShadow()) {\n            return;\n        }\n        var rgba = Util_1.Util.colorToRGBA(this.shadowColor());\n        if (rgba) {\n            return ('rgba(' +\n                rgba.r +\n                ',' +\n                rgba.g +\n                ',' +\n                rgba.b +\n                ',' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                ')');\n        }\n    }\n    hasFill() {\n        return this._calculate('hasFill', [\n            'fillEnabled',\n            'fill',\n            'fillPatternImage',\n            'fillLinearGradientColorStops',\n            'fillRadialGradientColorStops',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate('hasStroke', [\n            'strokeEnabled',\n            'strokeWidth',\n            'stroke',\n            'strokeLinearGradientColorStops',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === 'auto') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node_1.Node.prototype.destroy.call(this);\n        delete exports.shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) {\n            return false;\n        }\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n        if (val) {\n            this.hitStrokeWidth('auto');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n}\nexports.Shape = Shape;\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n(0, Global_2._registerNode)(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.backCompat(Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc',\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FastLayer = void 0;\nconst Util_1 = require(\"./Util\");\nconst Layer_1 = require(\"./Layer\");\nconst Global_1 = require(\"./Global\");\nclass FastLayer extends Layer_1.Layer {\n    constructor(attrs) {\n        super(attrs);\n        this.listening(false);\n        Util_1.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n    }\n}\nexports.FastLayer = FastLayer;\nFastLayer.prototype.nodeType = 'FastLayer';\n(0, Global_1._registerNode)(FastLayer);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Group = void 0;\nconst Util_1 = require(\"./Util\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nclass Group extends Container_1.Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nexports.Group = Group;\nGroup.prototype.nodeType = 'Group';\n(0, Global_1._registerNode)(Group);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nvar now = (function () {\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\n        return function () {\n            return Global_1.glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_1.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Easings = exports.Tween = void 0;\nconst Util_1 = require(\"./Util\");\nconst Animation_1 = require(\"./Animation\");\nconst Node_1 = require(\"./Node\");\nconst Global_1 = require(\"./Global\");\nvar blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1,\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, idCounter = 0, colorAttrs = ['fill', 'stroke', 'shadowColor'];\nclass TweenEngine {\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    }\n    fire(str) {\n        var handler = this[str];\n        if (handler) {\n            handler();\n        }\n    }\n    setTime(t) {\n        if (t > this.duration) {\n            if (this.yoyo) {\n                this._time = this.duration;\n                this.reverse();\n            }\n            else {\n                this.finish();\n            }\n        }\n        else if (t < 0) {\n            if (this.yoyo) {\n                this._time = 0;\n                this.play();\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this._time = t;\n            this.update();\n        }\n    }\n    getTime() {\n        return this._time;\n    }\n    setPosition(p) {\n        this.prevPos = this._pos;\n        this.propFunc(p);\n        this._pos = p;\n    }\n    getPosition(t) {\n        if (t === undefined) {\n            t = this._time;\n        }\n        return this.func(t, this.begin, this._change, this.duration);\n    }\n    play() {\n        this.state = PLAYING;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onPlay');\n    }\n    reverse() {\n        this.state = REVERSING;\n        this._time = this.duration - this._time;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onReverse');\n    }\n    seek(t) {\n        this.pause();\n        this._time = t;\n        this.update();\n        this.fire('onSeek');\n    }\n    reset() {\n        this.pause();\n        this._time = 0;\n        this.update();\n        this.fire('onReset');\n    }\n    finish() {\n        this.pause();\n        this._time = this.duration;\n        this.update();\n        this.fire('onFinish');\n    }\n    update() {\n        this.setPosition(this.getPosition(this._time));\n        this.fire('onUpdate');\n    }\n    onEnterFrame() {\n        var t = this.getTimer() - this._startTime;\n        if (this.state === PLAYING) {\n            this.setTime(t);\n        }\n        else if (this.state === REVERSING) {\n            this.setTime(this.duration - t);\n        }\n    }\n    pause() {\n        this.state = PAUSED;\n        this.fire('onPause');\n    }\n    getTimer() {\n        return new Date().getTime();\n    }\n}\nclass Tween {\n    constructor(config) {\n        var that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || exports.Easings.Linear, yoyo = !!config.yoyo, key;\n        if (typeof config.duration === 'undefined') {\n            duration = 0.3;\n        }\n        else if (config.duration === 0) {\n            duration = 0.001;\n        }\n        else {\n            duration = config.duration;\n        }\n        this.node = node;\n        this._id = idCounter++;\n        var layers = node.getLayer() ||\n            (node instanceof Global_1.Konva['Stage'] ? node.getLayers() : null);\n        if (!layers) {\n            Util_1.Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\n        }\n        this.anim = new Animation_1.Animation(function () {\n            that.tween.onEnterFrame();\n        }, layers);\n        this.tween = new TweenEngine(key, function (i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n        this._addListeners();\n        if (!Tween.attrs[nodeId]) {\n            Tween.attrs[nodeId] = {};\n        }\n        if (!Tween.attrs[nodeId][this._id]) {\n            Tween.attrs[nodeId][this._id] = {};\n        }\n        if (!Tween.tweens[nodeId]) {\n            Tween.tweens[nodeId] = {};\n        }\n        for (key in config) {\n            if (blacklist[key] === undefined) {\n                this._addAttr(key, config[key]);\n            }\n        }\n        this.reset();\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n        this.onUpdate = config.onUpdate;\n    }\n    _addAttr(key, end) {\n        var node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\n        tweenId = Tween.tweens[nodeId][key];\n        if (tweenId) {\n            delete Tween.attrs[nodeId][tweenId][key];\n        }\n        start = node.getAttr(key);\n        if (Util_1.Util._isArray(end)) {\n            diff = [];\n            len = Math.max(end.length, start.length);\n            if (key === 'points' && end.length !== start.length) {\n                if (end.length > start.length) {\n                    trueStart = start;\n                    start = Util_1.Util._prepareArrayForTween(start, end, node.closed());\n                }\n                else {\n                    trueEnd = end;\n                    end = Util_1.Util._prepareArrayForTween(end, start, node.closed());\n                }\n            }\n            if (key.indexOf('fill') === 0) {\n                for (n = 0; n < len; n++) {\n                    if (n % 2 === 0) {\n                        diff.push(end[n] - start[n]);\n                    }\n                    else {\n                        var startRGBA = Util_1.Util.colorToRGBA(start[n]);\n                        endRGBA = Util_1.Util.colorToRGBA(end[n]);\n                        start[n] = startRGBA;\n                        diff.push({\n                            r: endRGBA.r - startRGBA.r,\n                            g: endRGBA.g - startRGBA.g,\n                            b: endRGBA.b - startRGBA.b,\n                            a: endRGBA.a - startRGBA.a,\n                        });\n                    }\n                }\n            }\n            else {\n                for (n = 0; n < len; n++) {\n                    diff.push(end[n] - start[n]);\n                }\n            }\n        }\n        else if (colorAttrs.indexOf(key) !== -1) {\n            start = Util_1.Util.colorToRGBA(start);\n            endRGBA = Util_1.Util.colorToRGBA(end);\n            diff = {\n                r: endRGBA.r - start.r,\n                g: endRGBA.g - start.g,\n                b: endRGBA.b - start.b,\n                a: endRGBA.a - start.a,\n            };\n        }\n        else {\n            diff = end - start;\n        }\n        Tween.attrs[nodeId][this._id][key] = {\n            start: start,\n            diff: diff,\n            end: end,\n            trueEnd: trueEnd,\n            trueStart: trueStart,\n        };\n        Tween.tweens[nodeId][key] = this._id;\n    }\n    _tweenFunc(i) {\n        var node = this.node, attrs = Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\n        for (key in attrs) {\n            attr = attrs[key];\n            start = attr.start;\n            diff = attr.diff;\n            end = attr.end;\n            if (Util_1.Util._isArray(start)) {\n                newVal = [];\n                len = Math.max(start.length, end.length);\n                if (key.indexOf('fill') === 0) {\n                    for (n = 0; n < len; n++) {\n                        if (n % 2 === 0) {\n                            newVal.push((start[n] || 0) + diff[n] * i);\n                        }\n                        else {\n                            newVal.push('rgba(' +\n                                Math.round(start[n].r + diff[n].r * i) +\n                                ',' +\n                                Math.round(start[n].g + diff[n].g * i) +\n                                ',' +\n                                Math.round(start[n].b + diff[n].b * i) +\n                                ',' +\n                                (start[n].a + diff[n].a * i) +\n                                ')');\n                        }\n                    }\n                }\n                else {\n                    for (n = 0; n < len; n++) {\n                        newVal.push((start[n] || 0) + diff[n] * i);\n                    }\n                }\n            }\n            else if (colorAttrs.indexOf(key) !== -1) {\n                newVal =\n                    'rgba(' +\n                        Math.round(start.r + diff.r * i) +\n                        ',' +\n                        Math.round(start.g + diff.g * i) +\n                        ',' +\n                        Math.round(start.b + diff.b * i) +\n                        ',' +\n                        (start.a + diff.a * i) +\n                        ')';\n            }\n            else {\n                newVal = start + diff * i;\n            }\n            node.setAttr(key, newVal);\n        }\n    }\n    _addListeners() {\n        this.tween.onPlay = () => {\n            this.anim.start();\n        };\n        this.tween.onReverse = () => {\n            this.anim.start();\n        };\n        this.tween.onPause = () => {\n            this.anim.stop();\n        };\n        this.tween.onFinish = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueEnd) {\n                node.setAttr('points', attrs.points.trueEnd);\n            }\n            if (this.onFinish) {\n                this.onFinish.call(this);\n            }\n        };\n        this.tween.onReset = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueStart) {\n                node.points(attrs.points.trueStart);\n            }\n            if (this.onReset) {\n                this.onReset();\n            }\n        };\n        this.tween.onUpdate = () => {\n            if (this.onUpdate) {\n                this.onUpdate.call(this);\n            }\n        };\n    }\n    play() {\n        this.tween.play();\n        return this;\n    }\n    reverse() {\n        this.tween.reverse();\n        return this;\n    }\n    reset() {\n        this.tween.reset();\n        return this;\n    }\n    seek(t) {\n        this.tween.seek(t * 1000);\n        return this;\n    }\n    pause() {\n        this.tween.pause();\n        return this;\n    }\n    finish() {\n        this.tween.finish();\n        return this;\n    }\n    destroy() {\n        var nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId], key;\n        this.pause();\n        for (key in attrs) {\n            delete Tween.tweens[nodeId][key];\n        }\n        delete Tween.attrs[nodeId][thisId];\n    }\n}\nexports.Tween = Tween;\nTween.attrs = {};\nTween.tweens = {};\nNode_1.Node.prototype.to = function (params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function () {\n        this.destroy();\n        if (onFinish) {\n            onFinish();\n        }\n    };\n    var tween = new Tween(params);\n    tween.play();\n};\nexports.Easings = {\n    BackEaseIn(t, b, c, d) {\n        var s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    BackEaseOut(t, b, c, d) {\n        var s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    BackEaseInOut(t, b, c, d) {\n        var s = 1.70158;\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    ElasticEaseIn(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (-(a *\n            Math.pow(2, 10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\n    },\n    ElasticEaseOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\n            c +\n            b);\n    },\n    ElasticEaseInOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d / 2) === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (0.3 * 1.5);\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        if (t < 1) {\n            return (-0.5 *\n                (a *\n                    Math.pow(2, 10 * (t -= 1)) *\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n                b);\n        }\n        return (a *\n            Math.pow(2, -10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n            0.5 +\n            c +\n            b);\n    },\n    BounceEaseOut(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        }\n        else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n        }\n        else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n        }\n        else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n        }\n    },\n    BounceEaseIn(t, b, c, d) {\n        return c - exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    BounceEaseInOut(t, b, c, d) {\n        if (t < d / 2) {\n            return exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n        }\n        else {\n            return exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n        }\n    },\n    EaseIn(t, b, c, d) {\n        return c * (t /= d) * t + b;\n    },\n    EaseOut(t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    },\n    EaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t + b;\n        }\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\n    },\n    StrongEaseIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    },\n    StrongEaseOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    StrongEaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t * t * t * t + b;\n        }\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    Linear(t, b, c, d) {\n        return (c * t) / d + b;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Arc = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nclass Arc extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var angle = Global_1.Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Global_1.Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nexports.Arc = Arc;\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_2._registerNode)(Arc);\nFactory_1.Factory.addGetterSetter(Arc, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'clockwise', false, (0, Validators_1.getBooleanValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Arrow = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Line_1 = require(\"./Line\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nconst Path_1 = require(\"./Path\");\nclass Arrow extends Line_1.Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path_1.Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path_1.Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nexports.Arrow = Arrow;\nArrow.prototype.className = 'Arrow';\n(0, Global_1._registerNode)(Arrow);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerLength', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerWidth', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Line = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nclass Line extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n(0, Global_1._registerNode)(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], (0, Validators_1.getNumberArrayValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\nclass Path extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n        });\n    }\n    _readDataAttribute() {\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = Path.getPathLength(this.dataArray);\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPathLength(dataArray) {\n        let pathLength = 0;\n        for (var i = 0; i < dataArray.length; ++i) {\n            pathLength += dataArray[i].pathLength;\n        }\n        return pathLength;\n    }\n    static getPointAtLengthOfDataArray(length, dataArray) {\n        var point, i = 0, ii = dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > dataArray[i].pathLength) {\n            length -= dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n            case 'Q':\n                return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.t2length = exports.getQuadraticArcLength = exports.getCubicArcLength = exports.binomialCoefficients = exports.cValues = exports.tValues = void 0;\nexports.tValues = [\n    [],\n    [],\n    [\n        -0.5773502691896257645091487805019574556476,\n        0.5773502691896257645091487805019574556476,\n    ],\n    [\n        0, -0.7745966692414833770358530799564799221665,\n        0.7745966692414833770358530799564799221665,\n    ],\n    [\n        -0.3399810435848562648026657591032446872005,\n        0.3399810435848562648026657591032446872005,\n        -0.8611363115940525752239464888928095050957,\n        0.8611363115940525752239464888928095050957,\n    ],\n    [\n        0, -0.5384693101056830910363144207002088049672,\n        0.5384693101056830910363144207002088049672,\n        -0.9061798459386639927976268782993929651256,\n        0.9061798459386639927976268782993929651256,\n    ],\n    [\n        0.6612093864662645136613995950199053470064,\n        -0.6612093864662645136613995950199053470064,\n        -0.2386191860831969086305017216807119354186,\n        0.2386191860831969086305017216807119354186,\n        -0.9324695142031520278123015544939946091347,\n        0.9324695142031520278123015544939946091347,\n    ],\n    [\n        0, 0.4058451513773971669066064120769614633473,\n        -0.4058451513773971669066064120769614633473,\n        -0.7415311855993944398638647732807884070741,\n        0.7415311855993944398638647732807884070741,\n        -0.9491079123427585245261896840478512624007,\n        0.9491079123427585245261896840478512624007,\n    ],\n    [\n        -0.1834346424956498049394761423601839806667,\n        0.1834346424956498049394761423601839806667,\n        -0.5255324099163289858177390491892463490419,\n        0.5255324099163289858177390491892463490419,\n        -0.7966664774136267395915539364758304368371,\n        0.7966664774136267395915539364758304368371,\n        -0.9602898564975362316835608685694729904282,\n        0.9602898564975362316835608685694729904282,\n    ],\n    [\n        0, -0.8360311073266357942994297880697348765441,\n        0.8360311073266357942994297880697348765441,\n        -0.9681602395076260898355762029036728700494,\n        0.9681602395076260898355762029036728700494,\n        -0.3242534234038089290385380146433366085719,\n        0.3242534234038089290385380146433366085719,\n        -0.6133714327005903973087020393414741847857,\n        0.6133714327005903973087020393414741847857,\n    ],\n    [\n        -0.1488743389816312108848260011297199846175,\n        0.1488743389816312108848260011297199846175,\n        -0.4333953941292471907992659431657841622,\n        0.4333953941292471907992659431657841622,\n        -0.6794095682990244062343273651148735757692,\n        0.6794095682990244062343273651148735757692,\n        -0.8650633666889845107320966884234930485275,\n        0.8650633666889845107320966884234930485275,\n        -0.9739065285171717200779640120844520534282,\n        0.9739065285171717200779640120844520534282,\n    ],\n    [\n        0, -0.2695431559523449723315319854008615246796,\n        0.2695431559523449723315319854008615246796,\n        -0.5190961292068118159257256694586095544802,\n        0.5190961292068118159257256694586095544802,\n        -0.7301520055740493240934162520311534580496,\n        0.7301520055740493240934162520311534580496,\n        -0.8870625997680952990751577693039272666316,\n        0.8870625997680952990751577693039272666316,\n        -0.9782286581460569928039380011228573907714,\n        0.9782286581460569928039380011228573907714,\n    ],\n    [\n        -0.1252334085114689154724413694638531299833,\n        0.1252334085114689154724413694638531299833,\n        -0.3678314989981801937526915366437175612563,\n        0.3678314989981801937526915366437175612563,\n        -0.587317954286617447296702418940534280369,\n        0.587317954286617447296702418940534280369,\n        -0.7699026741943046870368938332128180759849,\n        0.7699026741943046870368938332128180759849,\n        -0.9041172563704748566784658661190961925375,\n        0.9041172563704748566784658661190961925375,\n        -0.9815606342467192506905490901492808229601,\n        0.9815606342467192506905490901492808229601,\n    ],\n    [\n        0, -0.2304583159551347940655281210979888352115,\n        0.2304583159551347940655281210979888352115,\n        -0.4484927510364468528779128521276398678019,\n        0.4484927510364468528779128521276398678019,\n        -0.6423493394403402206439846069955156500716,\n        0.6423493394403402206439846069955156500716,\n        -0.8015780907333099127942064895828598903056,\n        0.8015780907333099127942064895828598903056,\n        -0.9175983992229779652065478365007195123904,\n        0.9175983992229779652065478365007195123904,\n        -0.9841830547185881494728294488071096110649,\n        0.9841830547185881494728294488071096110649,\n    ],\n    [\n        -0.1080549487073436620662446502198347476119,\n        0.1080549487073436620662446502198347476119,\n        -0.3191123689278897604356718241684754668342,\n        0.3191123689278897604356718241684754668342,\n        -0.5152486363581540919652907185511886623088,\n        0.5152486363581540919652907185511886623088,\n        -0.6872929048116854701480198030193341375384,\n        0.6872929048116854701480198030193341375384,\n        -0.8272013150697649931897947426503949610397,\n        0.8272013150697649931897947426503949610397,\n        -0.928434883663573517336391139377874264477,\n        0.928434883663573517336391139377874264477,\n        -0.986283808696812338841597266704052801676,\n        0.986283808696812338841597266704052801676,\n    ],\n    [\n        0, -0.2011940939974345223006283033945962078128,\n        0.2011940939974345223006283033945962078128,\n        -0.3941513470775633698972073709810454683627,\n        0.3941513470775633698972073709810454683627,\n        -0.5709721726085388475372267372539106412383,\n        0.5709721726085388475372267372539106412383,\n        -0.7244177313601700474161860546139380096308,\n        0.7244177313601700474161860546139380096308,\n        -0.8482065834104272162006483207742168513662,\n        0.8482065834104272162006483207742168513662,\n        -0.9372733924007059043077589477102094712439,\n        0.9372733924007059043077589477102094712439,\n        -0.9879925180204854284895657185866125811469,\n        0.9879925180204854284895657185866125811469,\n    ],\n    [\n        -0.0950125098376374401853193354249580631303,\n        0.0950125098376374401853193354249580631303,\n        -0.281603550779258913230460501460496106486,\n        0.281603550779258913230460501460496106486,\n        -0.45801677765722738634241944298357757354,\n        0.45801677765722738634241944298357757354,\n        -0.6178762444026437484466717640487910189918,\n        0.6178762444026437484466717640487910189918,\n        -0.7554044083550030338951011948474422683538,\n        0.7554044083550030338951011948474422683538,\n        -0.8656312023878317438804678977123931323873,\n        0.8656312023878317438804678977123931323873,\n        -0.9445750230732325760779884155346083450911,\n        0.9445750230732325760779884155346083450911,\n        -0.9894009349916499325961541734503326274262,\n        0.9894009349916499325961541734503326274262,\n    ],\n    [\n        0, -0.1784841814958478558506774936540655574754,\n        0.1784841814958478558506774936540655574754,\n        -0.3512317634538763152971855170953460050405,\n        0.3512317634538763152971855170953460050405,\n        -0.5126905370864769678862465686295518745829,\n        0.5126905370864769678862465686295518745829,\n        -0.6576711592166907658503022166430023351478,\n        0.6576711592166907658503022166430023351478,\n        -0.7815140038968014069252300555204760502239,\n        0.7815140038968014069252300555204760502239,\n        -0.8802391537269859021229556944881556926234,\n        0.8802391537269859021229556944881556926234,\n        -0.9506755217687677612227169578958030214433,\n        0.9506755217687677612227169578958030214433,\n        -0.9905754753144173356754340199406652765077,\n        0.9905754753144173356754340199406652765077,\n    ],\n    [\n        -0.0847750130417353012422618529357838117333,\n        0.0847750130417353012422618529357838117333,\n        -0.2518862256915055095889728548779112301628,\n        0.2518862256915055095889728548779112301628,\n        -0.4117511614628426460359317938330516370789,\n        0.4117511614628426460359317938330516370789,\n        -0.5597708310739475346078715485253291369276,\n        0.5597708310739475346078715485253291369276,\n        -0.6916870430603532078748910812888483894522,\n        0.6916870430603532078748910812888483894522,\n        -0.8037049589725231156824174550145907971032,\n        0.8037049589725231156824174550145907971032,\n        -0.8926024664975557392060605911271455154078,\n        0.8926024664975557392060605911271455154078,\n        -0.9558239495713977551811958929297763099728,\n        0.9558239495713977551811958929297763099728,\n        -0.9915651684209309467300160047061507702525,\n        0.9915651684209309467300160047061507702525,\n    ],\n    [\n        0, -0.1603586456402253758680961157407435495048,\n        0.1603586456402253758680961157407435495048,\n        -0.3165640999636298319901173288498449178922,\n        0.3165640999636298319901173288498449178922,\n        -0.4645707413759609457172671481041023679762,\n        0.4645707413759609457172671481041023679762,\n        -0.6005453046616810234696381649462392798683,\n        0.6005453046616810234696381649462392798683,\n        -0.7209661773352293786170958608237816296571,\n        0.7209661773352293786170958608237816296571,\n        -0.8227146565371428249789224867127139017745,\n        0.8227146565371428249789224867127139017745,\n        -0.9031559036148179016426609285323124878093,\n        0.9031559036148179016426609285323124878093,\n        -0.960208152134830030852778840687651526615,\n        0.960208152134830030852778840687651526615,\n        -0.9924068438435844031890176702532604935893,\n        0.9924068438435844031890176702532604935893,\n    ],\n    [\n        -0.0765265211334973337546404093988382110047,\n        0.0765265211334973337546404093988382110047,\n        -0.227785851141645078080496195368574624743,\n        0.227785851141645078080496195368574624743,\n        -0.3737060887154195606725481770249272373957,\n        0.3737060887154195606725481770249272373957,\n        -0.5108670019508270980043640509552509984254,\n        0.5108670019508270980043640509552509984254,\n        -0.6360536807265150254528366962262859367433,\n        0.6360536807265150254528366962262859367433,\n        -0.7463319064601507926143050703556415903107,\n        0.7463319064601507926143050703556415903107,\n        -0.8391169718222188233945290617015206853296,\n        0.8391169718222188233945290617015206853296,\n        -0.9122344282513259058677524412032981130491,\n        0.9122344282513259058677524412032981130491,\n        -0.963971927277913791267666131197277221912,\n        0.963971927277913791267666131197277221912,\n        -0.9931285991850949247861223884713202782226,\n        0.9931285991850949247861223884713202782226,\n    ],\n    [\n        0, -0.1455618541608950909370309823386863301163,\n        0.1455618541608950909370309823386863301163,\n        -0.288021316802401096600792516064600319909,\n        0.288021316802401096600792516064600319909,\n        -0.4243421202074387835736688885437880520964,\n        0.4243421202074387835736688885437880520964,\n        -0.551618835887219807059018796724313286622,\n        0.551618835887219807059018796724313286622,\n        -0.667138804197412319305966669990339162597,\n        0.667138804197412319305966669990339162597,\n        -0.7684399634756779086158778513062280348209,\n        0.7684399634756779086158778513062280348209,\n        -0.8533633645833172836472506385875676702761,\n        0.8533633645833172836472506385875676702761,\n        -0.9200993341504008287901871337149688941591,\n        0.9200993341504008287901871337149688941591,\n        -0.9672268385663062943166222149076951614246,\n        0.9672268385663062943166222149076951614246,\n        -0.9937521706203895002602420359379409291933,\n        0.9937521706203895002602420359379409291933,\n    ],\n    [\n        -0.0697392733197222212138417961186280818222,\n        0.0697392733197222212138417961186280818222,\n        -0.2078604266882212854788465339195457342156,\n        0.2078604266882212854788465339195457342156,\n        -0.3419358208920842251581474204273796195591,\n        0.3419358208920842251581474204273796195591,\n        -0.4693558379867570264063307109664063460953,\n        0.4693558379867570264063307109664063460953,\n        -0.5876404035069115929588769276386473488776,\n        0.5876404035069115929588769276386473488776,\n        -0.6944872631866827800506898357622567712673,\n        0.6944872631866827800506898357622567712673,\n        -0.7878168059792081620042779554083515213881,\n        0.7878168059792081620042779554083515213881,\n        -0.8658125777203001365364256370193787290847,\n        0.8658125777203001365364256370193787290847,\n        -0.9269567721871740005206929392590531966353,\n        0.9269567721871740005206929392590531966353,\n        -0.9700604978354287271239509867652687108059,\n        0.9700604978354287271239509867652687108059,\n        -0.994294585482399292073031421161298980393,\n        0.994294585482399292073031421161298980393,\n    ],\n    [\n        0, -0.1332568242984661109317426822417661370104,\n        0.1332568242984661109317426822417661370104,\n        -0.264135680970344930533869538283309602979,\n        0.264135680970344930533869538283309602979,\n        -0.390301038030290831421488872880605458578,\n        0.390301038030290831421488872880605458578,\n        -0.5095014778460075496897930478668464305448,\n        0.5095014778460075496897930478668464305448,\n        -0.6196098757636461563850973116495956533871,\n        0.6196098757636461563850973116495956533871,\n        -0.7186613631319501944616244837486188483299,\n        0.7186613631319501944616244837486188483299,\n        -0.8048884016188398921511184069967785579414,\n        0.8048884016188398921511184069967785579414,\n        -0.8767523582704416673781568859341456716389,\n        0.8767523582704416673781568859341456716389,\n        -0.9329710868260161023491969890384229782357,\n        0.9329710868260161023491969890384229782357,\n        -0.9725424712181152319560240768207773751816,\n        0.9725424712181152319560240768207773751816,\n        -0.9947693349975521235239257154455743605736,\n        0.9947693349975521235239257154455743605736,\n    ],\n    [\n        -0.0640568928626056260850430826247450385909,\n        0.0640568928626056260850430826247450385909,\n        -0.1911188674736163091586398207570696318404,\n        0.1911188674736163091586398207570696318404,\n        -0.3150426796961633743867932913198102407864,\n        0.3150426796961633743867932913198102407864,\n        -0.4337935076260451384870842319133497124524,\n        0.4337935076260451384870842319133497124524,\n        -0.5454214713888395356583756172183723700107,\n        0.5454214713888395356583756172183723700107,\n        -0.6480936519369755692524957869107476266696,\n        0.6480936519369755692524957869107476266696,\n        -0.7401241915785543642438281030999784255232,\n        0.7401241915785543642438281030999784255232,\n        -0.8200019859739029219539498726697452080761,\n        0.8200019859739029219539498726697452080761,\n        -0.8864155270044010342131543419821967550873,\n        0.8864155270044010342131543419821967550873,\n        -0.9382745520027327585236490017087214496548,\n        0.9382745520027327585236490017087214496548,\n        -0.9747285559713094981983919930081690617411,\n        0.9747285559713094981983919930081690617411,\n        -0.9951872199970213601799974097007368118745,\n        0.9951872199970213601799974097007368118745,\n    ],\n];\nexports.cValues = [\n    [],\n    [],\n    [1.0, 1.0],\n    [\n        0.8888888888888888888888888888888888888888,\n        0.5555555555555555555555555555555555555555,\n        0.5555555555555555555555555555555555555555,\n    ],\n    [\n        0.6521451548625461426269360507780005927646,\n        0.6521451548625461426269360507780005927646,\n        0.3478548451374538573730639492219994072353,\n        0.3478548451374538573730639492219994072353,\n    ],\n    [\n        0.5688888888888888888888888888888888888888,\n        0.4786286704993664680412915148356381929122,\n        0.4786286704993664680412915148356381929122,\n        0.2369268850561890875142640407199173626432,\n        0.2369268850561890875142640407199173626432,\n    ],\n    [\n        0.3607615730481386075698335138377161116615,\n        0.3607615730481386075698335138377161116615,\n        0.4679139345726910473898703439895509948116,\n        0.4679139345726910473898703439895509948116,\n        0.1713244923791703450402961421727328935268,\n        0.1713244923791703450402961421727328935268,\n    ],\n    [\n        0.4179591836734693877551020408163265306122,\n        0.3818300505051189449503697754889751338783,\n        0.3818300505051189449503697754889751338783,\n        0.2797053914892766679014677714237795824869,\n        0.2797053914892766679014677714237795824869,\n        0.1294849661688696932706114326790820183285,\n        0.1294849661688696932706114326790820183285,\n    ],\n    [\n        0.3626837833783619829651504492771956121941,\n        0.3626837833783619829651504492771956121941,\n        0.3137066458778872873379622019866013132603,\n        0.3137066458778872873379622019866013132603,\n        0.2223810344533744705443559944262408844301,\n        0.2223810344533744705443559944262408844301,\n        0.1012285362903762591525313543099621901153,\n        0.1012285362903762591525313543099621901153,\n    ],\n    [\n        0.3302393550012597631645250692869740488788,\n        0.1806481606948574040584720312429128095143,\n        0.1806481606948574040584720312429128095143,\n        0.0812743883615744119718921581105236506756,\n        0.0812743883615744119718921581105236506756,\n        0.3123470770400028400686304065844436655987,\n        0.3123470770400028400686304065844436655987,\n        0.2606106964029354623187428694186328497718,\n        0.2606106964029354623187428694186328497718,\n    ],\n    [\n        0.295524224714752870173892994651338329421,\n        0.295524224714752870173892994651338329421,\n        0.2692667193099963550912269215694693528597,\n        0.2692667193099963550912269215694693528597,\n        0.2190863625159820439955349342281631924587,\n        0.2190863625159820439955349342281631924587,\n        0.1494513491505805931457763396576973324025,\n        0.1494513491505805931457763396576973324025,\n        0.0666713443086881375935688098933317928578,\n        0.0666713443086881375935688098933317928578,\n    ],\n    [\n        0.272925086777900630714483528336342189156,\n        0.2628045445102466621806888698905091953727,\n        0.2628045445102466621806888698905091953727,\n        0.2331937645919904799185237048431751394317,\n        0.2331937645919904799185237048431751394317,\n        0.1862902109277342514260976414316558916912,\n        0.1862902109277342514260976414316558916912,\n        0.1255803694649046246346942992239401001976,\n        0.1255803694649046246346942992239401001976,\n        0.0556685671161736664827537204425485787285,\n        0.0556685671161736664827537204425485787285,\n    ],\n    [\n        0.2491470458134027850005624360429512108304,\n        0.2491470458134027850005624360429512108304,\n        0.2334925365383548087608498989248780562594,\n        0.2334925365383548087608498989248780562594,\n        0.2031674267230659217490644558097983765065,\n        0.2031674267230659217490644558097983765065,\n        0.160078328543346226334652529543359071872,\n        0.160078328543346226334652529543359071872,\n        0.1069393259953184309602547181939962242145,\n        0.1069393259953184309602547181939962242145,\n        0.047175336386511827194615961485017060317,\n        0.047175336386511827194615961485017060317,\n    ],\n    [\n        0.2325515532308739101945895152688359481566,\n        0.2262831802628972384120901860397766184347,\n        0.2262831802628972384120901860397766184347,\n        0.2078160475368885023125232193060527633865,\n        0.2078160475368885023125232193060527633865,\n        0.1781459807619457382800466919960979955128,\n        0.1781459807619457382800466919960979955128,\n        0.1388735102197872384636017768688714676218,\n        0.1388735102197872384636017768688714676218,\n        0.0921214998377284479144217759537971209236,\n        0.0921214998377284479144217759537971209236,\n        0.0404840047653158795200215922009860600419,\n        0.0404840047653158795200215922009860600419,\n    ],\n    [\n        0.2152638534631577901958764433162600352749,\n        0.2152638534631577901958764433162600352749,\n        0.2051984637212956039659240656612180557103,\n        0.2051984637212956039659240656612180557103,\n        0.1855383974779378137417165901251570362489,\n        0.1855383974779378137417165901251570362489,\n        0.1572031671581935345696019386238421566056,\n        0.1572031671581935345696019386238421566056,\n        0.1215185706879031846894148090724766259566,\n        0.1215185706879031846894148090724766259566,\n        0.0801580871597602098056332770628543095836,\n        0.0801580871597602098056332770628543095836,\n        0.0351194603317518630318328761381917806197,\n        0.0351194603317518630318328761381917806197,\n    ],\n    [\n        0.2025782419255612728806201999675193148386,\n        0.1984314853271115764561183264438393248186,\n        0.1984314853271115764561183264438393248186,\n        0.1861610000155622110268005618664228245062,\n        0.1861610000155622110268005618664228245062,\n        0.1662692058169939335532008604812088111309,\n        0.1662692058169939335532008604812088111309,\n        0.1395706779261543144478047945110283225208,\n        0.1395706779261543144478047945110283225208,\n        0.1071592204671719350118695466858693034155,\n        0.1071592204671719350118695466858693034155,\n        0.0703660474881081247092674164506673384667,\n        0.0703660474881081247092674164506673384667,\n        0.0307532419961172683546283935772044177217,\n        0.0307532419961172683546283935772044177217,\n    ],\n    [\n        0.1894506104550684962853967232082831051469,\n        0.1894506104550684962853967232082831051469,\n        0.1826034150449235888667636679692199393835,\n        0.1826034150449235888667636679692199393835,\n        0.1691565193950025381893120790303599622116,\n        0.1691565193950025381893120790303599622116,\n        0.1495959888165767320815017305474785489704,\n        0.1495959888165767320815017305474785489704,\n        0.1246289712555338720524762821920164201448,\n        0.1246289712555338720524762821920164201448,\n        0.0951585116824927848099251076022462263552,\n        0.0951585116824927848099251076022462263552,\n        0.0622535239386478928628438369943776942749,\n        0.0622535239386478928628438369943776942749,\n        0.0271524594117540948517805724560181035122,\n        0.0271524594117540948517805724560181035122,\n    ],\n    [\n        0.1794464703562065254582656442618856214487,\n        0.1765627053669926463252709901131972391509,\n        0.1765627053669926463252709901131972391509,\n        0.1680041021564500445099706637883231550211,\n        0.1680041021564500445099706637883231550211,\n        0.1540457610768102880814315948019586119404,\n        0.1540457610768102880814315948019586119404,\n        0.1351363684685254732863199817023501973721,\n        0.1351363684685254732863199817023501973721,\n        0.1118838471934039710947883856263559267358,\n        0.1118838471934039710947883856263559267358,\n        0.0850361483171791808835353701910620738504,\n        0.0850361483171791808835353701910620738504,\n        0.0554595293739872011294401653582446605128,\n        0.0554595293739872011294401653582446605128,\n        0.0241483028685479319601100262875653246916,\n        0.0241483028685479319601100262875653246916,\n    ],\n    [\n        0.1691423829631435918406564701349866103341,\n        0.1691423829631435918406564701349866103341,\n        0.1642764837458327229860537764659275904123,\n        0.1642764837458327229860537764659275904123,\n        0.1546846751262652449254180038363747721932,\n        0.1546846751262652449254180038363747721932,\n        0.1406429146706506512047313037519472280955,\n        0.1406429146706506512047313037519472280955,\n        0.1225552067114784601845191268002015552281,\n        0.1225552067114784601845191268002015552281,\n        0.1009420441062871655628139849248346070628,\n        0.1009420441062871655628139849248346070628,\n        0.0764257302548890565291296776166365256053,\n        0.0764257302548890565291296776166365256053,\n        0.0497145488949697964533349462026386416808,\n        0.0497145488949697964533349462026386416808,\n        0.0216160135264833103133427102664524693876,\n        0.0216160135264833103133427102664524693876,\n    ],\n    [\n        0.1610544498487836959791636253209167350399,\n        0.1589688433939543476499564394650472016787,\n        0.1589688433939543476499564394650472016787,\n        0.152766042065859666778855400897662998461,\n        0.152766042065859666778855400897662998461,\n        0.1426067021736066117757461094419029724756,\n        0.1426067021736066117757461094419029724756,\n        0.1287539625393362276755157848568771170558,\n        0.1287539625393362276755157848568771170558,\n        0.1115666455473339947160239016817659974813,\n        0.1115666455473339947160239016817659974813,\n        0.0914900216224499994644620941238396526609,\n        0.0914900216224499994644620941238396526609,\n        0.0690445427376412265807082580060130449618,\n        0.0690445427376412265807082580060130449618,\n        0.0448142267656996003328381574019942119517,\n        0.0448142267656996003328381574019942119517,\n        0.0194617882297264770363120414644384357529,\n        0.0194617882297264770363120414644384357529,\n    ],\n    [\n        0.1527533871307258506980843319550975934919,\n        0.1527533871307258506980843319550975934919,\n        0.1491729864726037467878287370019694366926,\n        0.1491729864726037467878287370019694366926,\n        0.1420961093183820513292983250671649330345,\n        0.1420961093183820513292983250671649330345,\n        0.1316886384491766268984944997481631349161,\n        0.1316886384491766268984944997481631349161,\n        0.118194531961518417312377377711382287005,\n        0.118194531961518417312377377711382287005,\n        0.1019301198172404350367501354803498761666,\n        0.1019301198172404350367501354803498761666,\n        0.0832767415767047487247581432220462061001,\n        0.0832767415767047487247581432220462061001,\n        0.0626720483341090635695065351870416063516,\n        0.0626720483341090635695065351870416063516,\n        0.040601429800386941331039952274932109879,\n        0.040601429800386941331039952274932109879,\n        0.0176140071391521183118619623518528163621,\n        0.0176140071391521183118619623518528163621,\n    ],\n    [\n        0.1460811336496904271919851476833711882448,\n        0.1445244039899700590638271665537525436099,\n        0.1445244039899700590638271665537525436099,\n        0.1398873947910731547221334238675831108927,\n        0.1398873947910731547221334238675831108927,\n        0.132268938633337461781052574496775604329,\n        0.132268938633337461781052574496775604329,\n        0.1218314160537285341953671771257335983563,\n        0.1218314160537285341953671771257335983563,\n        0.1087972991671483776634745780701056420336,\n        0.1087972991671483776634745780701056420336,\n        0.0934444234560338615532897411139320884835,\n        0.0934444234560338615532897411139320884835,\n        0.0761001136283793020170516533001831792261,\n        0.0761001136283793020170516533001831792261,\n        0.0571344254268572082836358264724479574912,\n        0.0571344254268572082836358264724479574912,\n        0.0369537897708524937999506682993296661889,\n        0.0369537897708524937999506682993296661889,\n        0.0160172282577743333242246168584710152658,\n        0.0160172282577743333242246168584710152658,\n    ],\n    [\n        0.1392518728556319933754102483418099578739,\n        0.1392518728556319933754102483418099578739,\n        0.1365414983460151713525738312315173965863,\n        0.1365414983460151713525738312315173965863,\n        0.1311735047870623707329649925303074458757,\n        0.1311735047870623707329649925303074458757,\n        0.1232523768105124242855609861548144719594,\n        0.1232523768105124242855609861548144719594,\n        0.1129322960805392183934006074217843191142,\n        0.1129322960805392183934006074217843191142,\n        0.1004141444428809649320788378305362823508,\n        0.1004141444428809649320788378305362823508,\n        0.0859416062170677274144436813727028661891,\n        0.0859416062170677274144436813727028661891,\n        0.0697964684245204880949614189302176573987,\n        0.0697964684245204880949614189302176573987,\n        0.0522933351526832859403120512732112561121,\n        0.0522933351526832859403120512732112561121,\n        0.0337749015848141547933022468659129013491,\n        0.0337749015848141547933022468659129013491,\n        0.0146279952982722006849910980471854451902,\n        0.0146279952982722006849910980471854451902,\n    ],\n    [\n        0.1336545721861061753514571105458443385831,\n        0.132462039404696617371642464703316925805,\n        0.132462039404696617371642464703316925805,\n        0.1289057221880821499785953393997936532597,\n        0.1289057221880821499785953393997936532597,\n        0.1230490843067295304675784006720096548158,\n        0.1230490843067295304675784006720096548158,\n        0.1149966402224113649416435129339613014914,\n        0.1149966402224113649416435129339613014914,\n        0.1048920914645414100740861850147438548584,\n        0.1048920914645414100740861850147438548584,\n        0.0929157660600351474770186173697646486034,\n        0.0929157660600351474770186173697646486034,\n        0.0792814117767189549228925247420432269137,\n        0.0792814117767189549228925247420432269137,\n        0.0642324214085258521271696151589109980391,\n        0.0642324214085258521271696151589109980391,\n        0.0480376717310846685716410716320339965612,\n        0.0480376717310846685716410716320339965612,\n        0.0309880058569794443106942196418845053837,\n        0.0309880058569794443106942196418845053837,\n        0.0134118594871417720813094934586150649766,\n        0.0134118594871417720813094934586150649766,\n    ],\n    [\n        0.1279381953467521569740561652246953718517,\n        0.1279381953467521569740561652246953718517,\n        0.1258374563468282961213753825111836887264,\n        0.1258374563468282961213753825111836887264,\n        0.121670472927803391204463153476262425607,\n        0.121670472927803391204463153476262425607,\n        0.1155056680537256013533444839067835598622,\n        0.1155056680537256013533444839067835598622,\n        0.1074442701159656347825773424466062227946,\n        0.1074442701159656347825773424466062227946,\n        0.0976186521041138882698806644642471544279,\n        0.0976186521041138882698806644642471544279,\n        0.086190161531953275917185202983742667185,\n        0.086190161531953275917185202983742667185,\n        0.0733464814110803057340336152531165181193,\n        0.0733464814110803057340336152531165181193,\n        0.0592985849154367807463677585001085845412,\n        0.0592985849154367807463677585001085845412,\n        0.0442774388174198061686027482113382288593,\n        0.0442774388174198061686027482113382288593,\n        0.0285313886289336631813078159518782864491,\n        0.0285313886289336631813078159518782864491,\n        0.0123412297999871995468056670700372915759,\n        0.0123412297999871995468056670700372915759,\n    ],\n];\nexports.binomialCoefficients = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]];\nconst getCubicArcLength = (xs, ys, t) => {\n    let z;\n    let sum;\n    let correctedT;\n    const n = 20;\n    z = t / 2;\n    sum = 0;\n    for (let i = 0; i < n; i++) {\n        correctedT = z * exports.tValues[n][i] + z;\n        sum += exports.cValues[n][i] * BFunc(xs, ys, correctedT);\n    }\n    return z * sum;\n};\nexports.getCubicArcLength = getCubicArcLength;\nconst getQuadraticArcLength = (xs, ys, t) => {\n    if (t === undefined) {\n        t = 1;\n    }\n    const ax = xs[0] - 2 * xs[1] + xs[2];\n    const ay = ys[0] - 2 * ys[1] + ys[2];\n    const bx = 2 * xs[1] - 2 * xs[0];\n    const by = 2 * ys[1] - 2 * ys[0];\n    const A = 4 * (ax * ax + ay * ay);\n    const B = 4 * (ax * bx + ay * by);\n    const C = bx * bx + by * by;\n    if (A === 0) {\n        return (t * Math.sqrt(Math.pow(xs[2] - xs[0], 2) + Math.pow(ys[2] - ys[0], 2)));\n    }\n    const b = B / (2 * A);\n    const c = C / A;\n    const u = t + b;\n    const k = c - b * b;\n    const uuk = u * u + k > 0 ? Math.sqrt(u * u + k) : 0;\n    const bbk = b * b + k > 0 ? Math.sqrt(b * b + k) : 0;\n    const term = b + Math.sqrt(b * b + k) !== 0\n        ? k * Math.log(Math.abs((u + uuk) / (b + bbk)))\n        : 0;\n    return (Math.sqrt(A) / 2) * (u * uuk - b * bbk + term);\n};\nexports.getQuadraticArcLength = getQuadraticArcLength;\nfunction BFunc(xs, ys, t) {\n    const xbase = getDerivative(1, t, xs);\n    const ybase = getDerivative(1, t, ys);\n    const combined = xbase * xbase + ybase * ybase;\n    return Math.sqrt(combined);\n}\nconst getDerivative = (derivative, t, vs) => {\n    const n = vs.length - 1;\n    let _vs;\n    let value;\n    if (n === 0) {\n        return 0;\n    }\n    if (derivative === 0) {\n        value = 0;\n        for (let k = 0; k <= n; k++) {\n            value +=\n                exports.binomialCoefficients[n][k] *\n                    Math.pow(1 - t, n - k) *\n                    Math.pow(t, k) *\n                    vs[k];\n        }\n        return value;\n    }\n    else {\n        _vs = new Array(n);\n        for (let k = 0; k < n; k++) {\n            _vs[k] = n * (vs[k + 1] - vs[k]);\n        }\n        return getDerivative(derivative - 1, t, _vs);\n    }\n};\nconst t2length = (length, totalLength, func) => {\n    let error = 1;\n    let t = length / totalLength;\n    let step = (length - func(t)) / totalLength;\n    let numIterations = 0;\n    while (error > 0.001) {\n        const increasedTLength = func(t + step);\n        const increasedTError = Math.abs(length - increasedTLength) / totalLength;\n        if (increasedTError < error) {\n            error = increasedTError;\n            t += step;\n        }\n        else {\n            const decreasedTLength = func(t - step);\n            const decreasedTError = Math.abs(length - decreasedTLength) / totalLength;\n            if (decreasedTError < error) {\n                error = decreasedTError;\n                t -= step;\n            }\n            else {\n                step /= 2;\n            }\n        }\n        numIterations++;\n        if (numIterations > 500) {\n            break;\n        }\n    }\n    return t;\n};\nexports.t2length = t2length;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Circle = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Circle extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nexports.Circle = Circle;\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(Circle);\nFactory_1.Factory.addGetterSetter(Circle, 'radius', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ellipse = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Ellipse extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nexports.Ellipse = Ellipse;\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n(0, Global_1._registerNode)(Ellipse);\nFactory_1.Factory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusY', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Image = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nclass Image extends Shape_1.Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const cornerRadius = this.cornerRadius();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\n            context.beginPath();\n            cornerRadius\n                ? Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius)\n                : context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (cornerRadius) {\n                context.clip();\n            }\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = Util_1.Util.createImageElement();\n        img.onload = function () {\n            var image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nexports.Image = Image;\nImage.prototype.className = 'Image';\n(0, Global_1._registerNode)(Image);\nFactory_1.Factory.addGetterSetter(Image, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\nFactory_1.Factory.addGetterSetter(Image, 'image');\nFactory_1.Factory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory_1.Factory.addGetterSetter(Image, 'cropX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropHeight', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.Label = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Group_1 = require(\"../Group\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'pointerDirection',\n    'pointerWidth',\n    'pointerHeight',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nexports.Label = Label;\nLabel.prototype.className = 'Label';\n(0, Global_1._registerNode)(Label);\nclass Tag extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nexports.Tag = Tag;\nTag.prototype.className = 'Tag';\n(0, Global_1._registerNode)(Tag);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rect = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nclass Rect extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nexports.Rect = Rect;\nRect.prototype.className = 'Rect';\n(0, Global_1._registerNode)(Rect);\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegularPolygon = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass RegularPolygon extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nexports.RegularPolygon = RegularPolygon;\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(RegularPolygon);\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ring = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nvar PIx2 = Math.PI * 2;\nclass Ring extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nexports.Ring = Ring;\nRing.prototype.className = 'Ring';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Ring);\nFactory_1.Factory.addGetterSetter(Ring, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ring, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sprite = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Animation_1 = require(\"../Animation\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Sprite extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation_1.Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nexports.Sprite = Sprite;\nSprite.prototype.className = 'Sprite';\n(0, Global_1._registerNode)(Sprite);\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Star = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Star extends Shape_1.Shape {\n    _sceneFunc(context) {\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for (var n = 1; n < numPoints * 2; n++) {\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\n            var x = radius * Math.sin((n * Math.PI) / numPoints);\n            var y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nexports.Star = Star;\nStar.prototype.className = 'Star';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Star);\nFactory_1.Factory.addGetterSetter(Star, 'numPoints', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = exports.stringToArray = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nfunction stringToArray(string) {\n    return Array.from(string);\n}\nexports.stringToArray = stringToArray;\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing',\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n    return fontFamily\n        .split(',')\n        .map((family) => {\n        family = family.trim();\n        const hasSpace = family.indexOf(' ') >= 0;\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n        if (hasSpace && !hasQuotes) {\n            family = `\"${family}\"`;\n        }\n        return family;\n    })\n        .join(', ');\n}\nvar dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.setAttr('miterLimit', 2);\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nclass Text extends Shape_1.Shape {\n    constructor(config) {\n        super(checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for (var n = 0; n < attrChangeListLen; n++) {\n            this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n        }\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        var textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) {\n            return;\n        }\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', MIDDLE);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(' ').length - 1;\n                var array = stringToArray(text);\n                for (var li = 0; li < array.length; li++) {\n                    var letter = array[li];\n                    if (letter === ' ' && !lastLine && align === JUSTIFY) {\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    }\n    _hitFunc(context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        var str = Util_1.Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? ''\n                : text + '';\n        this._setAttr(TEXT, str);\n        return this;\n    }\n    getWidth() {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize,\n        };\n    }\n    _getContextFont() {\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            (this.fontSize() + PX_SPACE) +\n            normalizeFontFamily(this.fontFamily()));\n    }\n    _addTextLine(line) {\n        const align = this.align();\n        if (align === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({\n            text: line,\n            width: width,\n            lastInParagraph: false,\n        });\n    }\n    _getTextWidth(text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    }\n    _setTextData() {\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr;\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        var shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\n                        if (shouldHandleEllipsis) {\n                            this._tryToAddEllipsisToLastLine();\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) {\n                    this._tryToAddEllipsisToLastLine();\n                }\n            }\n            if (this.textArr[this.textArr.length - 1]) {\n                this.textArr[this.textArr.length - 1].lastInParagraph = true;\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    _shouldHandleEllipsis(currentHeightPx) {\n        var fontSize = +this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, height = this.attrs.height, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxHeightPx = height - padding * 2, wrap = this.wrap(), shouldWrap = wrap !== NONE;\n        return (!shouldWrap ||\n            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx));\n    }\n    _tryToAddEllipsisToLastLine() {\n        var width = this.attrs.width, fixedWidth = width !== AUTO && width !== undefined, padding = this.padding(), maxWidth = width - padding * 2, shouldAddEllipsis = this.ellipsis();\n        var lastLine = this.textArr[this.textArr.length - 1];\n        if (!lastLine || !shouldAddEllipsis) {\n            return;\n        }\n        if (fixedWidth) {\n            var haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n            if (!haveSpace) {\n                lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n            }\n        }\n        this.textArr.splice(this.textArr.length - 1, 1);\n        this._addTextLine(lastLine.text + ELLIPSIS);\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n}\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight',\n    'letterSpacing',\n];\n(0, Global_1._registerNode)(Text);\nFactory_1.Factory.overWriteSetter(Text, 'width', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.overWriteSetter(Text, 'height', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextPath = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Path_1 = require(\"./Path\");\nconst Text_1 = require(\"./Text\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nvar EMPTY_STRING = '', NORMAL = 'normal';\nfunction _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nclass TextPath extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dummyCanvas = Util_1.Util.createCanvasElement();\n        this.dataArray = [];\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n            this._setTextData();\n        });\n        this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\n        this._setTextData();\n    }\n    _getTextPathLength() {\n        return Path_1.Path.getPathLength(this.dataArray);\n    }\n    _getPointAtLength(length) {\n        if (!this.attrs.data) {\n            return null;\n        }\n        const totalLength = this.pathLength;\n        if (length - 1 > totalLength) {\n            return null;\n        }\n        return Path_1.Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    _readDataAttribute() {\n        this.dataArray = Path_1.Path.parsePathData(this.attrs.data);\n        this.pathLength = this._getTextPathLength();\n    }\n    _sceneFunc(context) {\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', this.textBaseline());\n        context.setAttr('textAlign', 'left');\n        context.save();\n        var textDecoration = this.textDecoration();\n        var fill = this.fill();\n        var fontSize = this.fontSize();\n        var glyphInfo = this.glyphInfo;\n        if (textDecoration === 'underline') {\n            context.beginPath();\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            context.save();\n            var p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === 'underline') {\n                if (i === 0) {\n                    context.moveTo(0, fontSize / 2 + 1);\n                }\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === 'underline') {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        var glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            var p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr('lineWidth', this.fontSize());\n        context.setAttr('strokeStyle', this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    setText(text) {\n        return Text_1.Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return Text_1.Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        var dummyCanvas = this.dummyCanvas;\n        var _context = dummyCanvas.getContext('2d');\n        _context.save();\n        _context.font = this._getContextFont();\n        var metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(`${this.fontSize()}`, 10),\n        };\n    }\n    _setTextData() {\n        const { width, height } = this._getTextSize(this.attrs.text);\n        this.textWidth = width;\n        this.textHeight = height;\n        this.glyphInfo = [];\n        if (!this.attrs.data) {\n            return null;\n        }\n        const letterSpacing = this.letterSpacing();\n        const align = this.align();\n        const kerningFunc = this.kerningFunc();\n        const textWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\n        let offset = 0;\n        if (align === 'center') {\n            offset = Math.max(0, this.pathLength / 2 - textWidth / 2);\n        }\n        if (align === 'right') {\n            offset = Math.max(0, this.pathLength - textWidth);\n        }\n        const charArr = (0, Text_1.stringToArray)(this.text());\n        let offsetToGlyph = offset;\n        for (var i = 0; i < charArr.length; i++) {\n            const charStartPoint = this._getPointAtLength(offsetToGlyph);\n            if (!charStartPoint)\n                return;\n            let glyphWidth = this._getTextSize(charArr[i]).width + letterSpacing;\n            if (charArr[i] === ' ' && align === 'justify') {\n                const numberOfSpaces = this.text().split(' ').length - 1;\n                glyphWidth += (this.pathLength - textWidth) / numberOfSpaces;\n            }\n            const charEndPoint = this._getPointAtLength(offsetToGlyph + glyphWidth);\n            if (!charEndPoint)\n                return;\n            const width = Path_1.Path.getLineLength(charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            let kern = 0;\n            if (kerningFunc) {\n                try {\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n                }\n                catch (e) {\n                    kern = 0;\n                }\n            }\n            charStartPoint.x += kern;\n            charEndPoint.x += kern;\n            this.textWidth += kern;\n            const midpoint = Path_1.Path.getPointOnLine(kern + width / 2.0, charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            const rotation = Math.atan2(charEndPoint.y - charStartPoint.y, charEndPoint.x - charStartPoint.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: charStartPoint,\n                p1: charEndPoint,\n            });\n            offsetToGlyph += glyphWidth;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) {\n            return {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        var points = [];\n        this.glyphInfo.forEach(function (info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        var minX = points[0] || 0;\n        var maxX = points[0] || 0;\n        var minY = points[1] || 0;\n        var maxY = points[1] || 0;\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        var fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize,\n        };\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.dummyCanvas);\n        return super.destroy();\n    }\n}\nexports.TextPath = TextPath;\nTextPath.prototype._fillFunc = _fillFunc;\nTextPath.prototype._strokeFunc = _strokeFunc;\nTextPath.prototype._fillFuncHit = _fillFunc;\nTextPath.prototype._strokeFuncHit = _strokeFunc;\nTextPath.prototype.className = 'TextPath';\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\n(0, Global_1._registerNode)(TextPath);\nFactory_1.Factory.addGetterSetter(TextPath, 'data');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'align', 'left');\nFactory_1.Factory.addGetterSetter(TextPath, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'textBaseline', 'middle');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\nFactory_1.Factory.addGetterSetter(TextPath, 'textDecoration', null);\nFactory_1.Factory.addGetterSetter(TextPath, 'kerningFunc', null);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transformer = void 0;\nconst Util_1 = require(\"../Util\");\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Shape_1 = require(\"../Shape\");\nconst Rect_1 = require(\"./Rect\");\nconst Group_1 = require(\"../Group\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n    'anchorStyleFuncChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Global_1.Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nclass Transformer extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        const filteredNodes = nodes.filter((node) => {\n            if (node.isAncestorOf(this)) {\n                Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n                return false;\n            }\n            return true;\n        });\n        this._nodes = nodes = filteredNodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Global_1.Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var shiftBehavior = this.shiftBehavior();\n        var keepProportion;\n        if (shiftBehavior === 'inverted') {\n            keepProportion = this.keepRatio() && !e.shiftKey;\n        }\n        else if (shiftBehavior === 'none') {\n            keepProportion = this.keepRatio();\n        }\n        else {\n            keepProportion = this.keepRatio() || e.shiftKey;\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire('transformend', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        const anchors = this.find('._anchor');\n        anchors.forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        const styleFunc = this.anchorStyleFunc();\n        if (styleFunc) {\n            anchors.forEach((node) => {\n                styleFunc(node);\n            });\n        }\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node_1.Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        var node = Node_1.Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wedge = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_2 = require(\"../Global\");\nclass Wedge extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Global_1.Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nexports.Wedge = Wedge;\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n(0, Global_2._registerNode)(Wedge);\nFactory_1.Factory.addGetterSetter(Wedge, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'clockwise', false);\nFactory_1.Factory.backCompat(Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle',\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Blur = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259,\n];\nvar shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nconst Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nexports.Blur = Blur;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Brighten = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Brighten = function (imageData) {\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\nexports.Brighten = Brighten;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'brightness', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contrast = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Contrast = function (imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nexports.Contrast = Contrast;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emboss = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Enhance = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nconst Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nexports.Enhance = Enhance;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grayscale = void 0;\nconst Grayscale = function (imageData) {\n    var data = imageData.data, len = data.length, i, brightness;\n    for (i = 0; i < len; i += 4) {\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\nexports.Grayscale = Grayscale;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HSL = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'luminance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nconst HSL = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\nexports.HSL = HSL;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HSV = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst HSV = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nexports.HSV = HSV;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'value', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Invert = void 0;\nconst Invert = function (imageData) {\n    var data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\nexports.Invert = Invert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Kaleidoscope = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nvar ToPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar FromPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nconst Kaleidoscope = function (imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    var tempCanvas = Util_1.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n        .getContext('2d')\n        .getImageData(0, 0, xSize, ySize);\n    Util_1.Util.releaseCanvas(tempCanvas);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2,\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nexports.Kaleidoscope = Kaleidoscope;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mask = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nconst Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nexports.Mask = Mask;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Noise = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Noise = function (imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for (i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nexports.Noise = Noise;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pixelate = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Util_1 = require(\"../Util\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util_1.Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nexports.Pixelate = Pixelate;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Posterize = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Posterize = function (imageData) {\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = Math.floor(data[i] / scale) * scale;\n    }\n};\nexports.Posterize = Posterize;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'levels', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RGB = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nexports.RGB = RGB;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RGBA = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nexports.RGBA = RGBA;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sepia = void 0;\nconst Sepia = function (imageData) {\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\nexports.Sepia = Sepia;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Solarize = void 0;\nconst Solarize = function (imageData) {\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    do {\n        var offsetY = (y - 1) * w4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var r = data[offset];\n            var g = data[offset + 1];\n            var b = data[offset + 2];\n            if (r > 127) {\n                r = 255 - r;\n            }\n            if (g > 127) {\n                g = 255 - g;\n            }\n            if (b > 127) {\n                b = 255 - b;\n            }\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        } while (--x);\n    } while (--y);\n};\nexports.Solarize = Solarize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Threshold = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Validators_1 = require(\"../Validators\");\nconst Threshold = function (imageData) {\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = data[i] < level ? 0 : 255;\n    }\n};\nexports.Threshold = Threshold;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n"],"names":["$8173247af08db530$var$dummyContext","$parcel$interopDefault","a","__esModule","default","$648854cc6bfe0991$var$_pixelRatio","$a9317926b4b08128$var$dummyContext","$parcel$global","globalThis","self","window","global","$590c77a791d51802$exports","Object","defineProperty","value","$32614abcc186d4fe$exports","Konva","$489e46baf1687eb2$exports","$3c4258a611a19cfb$exports","_registerNode","glob","$3c4258a611a19cfb$var$PI_OVER_180","Math","PI","WorkerGlobalScope","_global","version","isBrowser","toString","call","isUnminified","test","param","dblClickWindow","getAngle","angle","angleDeg","enableTrace","pointerEventsEnabled","autoDrawEnabled","hitOnDragEnabled","capturePointerEventsEnabled","_mouseListenClick","_touchListenClick","_pointerListenClick","_mouseInDblClickWindow","_touchInDblClickWindow","_pointerInDblClickWindow","_mouseDblClickPointerId","_touchDblClickPointerId","_pointerDblClickPointerId","pixelRatio","devicePixelRatio","dragDistance","showWarnings","dragButtons","isDragging","isDragReady","node","releaseCanvasOnDestroy","document","_injectGlobal","NodeClass","prototype","getClassName","$27d6a996859d86c8$exports","Util","Transform","$27d6a996859d86c8$var$Transform","constructor","m","dirty","slice","reset","copy","copyInto","tr","point","x","y","translate","scale","sx","sy","rotate","rad","c","cos","s","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","d","m0","m1","m2","m3","m4","m5","getMatrix","decompose","b","e","f","delta","result","rotation","scaleX","scaleY","skewX","skewY","r","sqrt","acos","_getRotation","$27d6a996859d86c8$var$PI_OVER_DEG180","$27d6a996859d86c8$var$DEG180_OVER_PI","$27d6a996859d86c8$var$KONVA_ERROR","$27d6a996859d86c8$var$COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$27d6a996859d86c8$var$RGB_REGEX","$27d6a996859d86c8$var$animQueue","$27d6a996859d86c8$var$req","requestAnimationFrame","setTimeout","_isElement","obj","nodeType","_isFunction","apply","_isPlainObject","_isArray","_isNumber","isNaN","isFinite","_isString","_isBoolean","isObject","val","isValidSelector","selector","firstChar","toUpperCase","_sign","number","requestAnimFrame","callback","push","length","queue","forEach","cb","createCanvasElement","canvas","createElement","style","createImageElement","_isInDocument","el","parentNode","_urlToImage","url","imageObj","onload","src","_rgbToHex","g","_hexToRgb","hex","bigint","parseInt","replace","getRandomColor","randColor","random","$27d6a996859d86c8$var$ZERO","$27d6a996859d86c8$var$HASH","getRGB","color","rgb","substring","substr","exec","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex4ColorToRGBA","_hex6ColorToRGBA","_hex8ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","_hslColorToRGBA","toLowerCase","indexOf","parts","match","split","map","Number","n","index","t2","t3","_","hsl","h","l","round","t1","i","haveIntersection","r1","r2","width","height","cloneObject","retObj","key","cloneArray","arr","degToRad","deg","radToDeg","_degToRad","warn","_radToDeg","radians","_capitalize","charAt","throw","Error","error","console","$27d6a996859d86c8$var$KONVA_WARNING","each","func","_inRange","left","right","_getProjectionToSegment","x1","y1","x2","y2","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","start","end","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","hasOwnProperty","getOwnPropertyDescriptor","configurable","_assign","target","source","_getFirstPointerId","evt","touches","changedTouches","identifier","pointerId","releaseCanvas","canvases","drawRoundedRectPath","context","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","min","moveTo","lineTo","arc","$03fc3abdfa907317$exports","Node","$9a603088dcd0ec15$exports","Factory","$44f336646fbbdff8$exports","$44f336646fbbdff8$var$_formatValue","getComponentValidator","getBooleanValidator","getNumberArrayValidator","getFunctionValidator","getStringOrGradientValidator","getStringValidator","getNumberOrAutoValidator","getNumberOrArrayOfNumbersValidator","getNumberValidator","alphaComponent","RGBComponent","attr","noOfElements","isNumber","isValidArray","isAuto","isString","isGradient","addColorStop","TypedArray","Int8Array","getPrototypeOf","item","components","addGetterSetter","def","validator","after","addGetter","addSetter","addOverloadedGetterSetter","method","$9a603088dcd0ec15$var$GET","attrs","undefined","$9a603088dcd0ec15$var$SET","overWriteSetter","_setAttr","addComponentsGetterSetter","component","len","capitalize","getter","setter","ret","getAttr","basicValidator","oldVal","_fireChangeEvent","capitalizedAttr","arguments","addDeprecatedGetterSetter","message","backCompat","methods","oldMethodName","newMethodName","oldGetter","oldSetter","deprecated","afterSetFilter","_filterUpToDate","$648854cc6bfe0991$exports","HitCanvas","SceneCanvas","Canvas","$4dca1ff09e7fd160$exports","HitContext","SceneContext","Context","$4dca1ff09e7fd160$var$CONTEXT_METHODS","$4dca1ff09e7fd160$var$Context","traceArr","_enableTrace","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","fillAfterStrokeEnabled","getTrace","relaxed","rounded","trace","args","$4dca1ff09e7fd160$var$OPEN_PAREN_BRACKET","join","floor","$4dca1ff09e7fd160$var$OPEN_PAREN","property","$4dca1ff09e7fd160$var$EQUALS","clearTrace","_trace","shift","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","getWidth","getHeight","_applyLineCap","lineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","_context","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","path","fillRule","fill","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","rect","putImageData","quadraticCurveTo","restore","save","setLineDash","getLineDash","stroke","path2d","strokeText","transform","that","origSetter","methodName","origMethod","$4dca1ff09e7fd160$var$simplifyArray","retArr","util","Array","prop","_applyGlobalCompositeOperation","op","globalCompositeOperation","$4dca1ff09e7fd160$var$CONTEXT_PROPERTIES","get","set","willReadFrequently","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","getStrokeLinearGradientStartPoint","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","abs","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit","$648854cc6bfe0991$var$Canvas","config","isCache","conf","$648854cc6bfe0991$var$getDevicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","padding","margin","border","background","position","top","setPixelRatio","previousRatio","setSize","setWidth","setHeight","toDataURL","mimeType","quality","err","hitCanvas","$ab7119121af4a2ff$exports","DD","flag","_dragElements","elem","dragStatus","justDragged","Map","_drag","nodesToFireEvents","stage","getStage","setPointersPositions","pos","_changedPointerPositions","find","id","max","startPointerPos","startDrag","_setDragPosition","fire","type","_endDragBefore","drawNodes","drawNode","getLayer","draw","_endDragAfter","delete","addEventListener","$03fc3abdfa907317$var$ABSOLUTE_OPACITY","$03fc3abdfa907317$var$ALL_LISTENERS","$03fc3abdfa907317$var$ABSOLUTE_TRANSFORM","$03fc3abdfa907317$var$ABSOLUTE_SCALE","$03fc3abdfa907317$var$CANVAS","$03fc3abdfa907317$var$LISTENING","$03fc3abdfa907317$var$MOUSEENTER","$03fc3abdfa907317$var$MOUSELEAVE","$03fc3abdfa907317$var$SHAPE","$03fc3abdfa907317$var$STAGE","$03fc3abdfa907317$var$TRANSFORM","$03fc3abdfa907317$var$VISIBLE","$03fc3abdfa907317$var$idCounter","$03fc3abdfa907317$var$Node","_id","eventListeners","_allEventListeners","parent","_cache","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","hasChildren","_clearCache","_getCache","privateGetter","cache","isTransform","_calculate","name","deps","depsString","dep","on","_getCanvasCache","_clearSelfAndDescendantCache","clearCache","has","scene","filter","hit","_requestDraw","getClientRect","skipTransform","relativeTo","getParent","ceil","drawBorder","hitCanvasPixelRatio","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","hitContext","imageSmoothingEnabled","drawScene","drawHit","isCached","_transformedRect","minX","minY","maxX","maxY","points","trans","getAbsoluteTransform","transformed","_drawCachedSceneCanvas","canvasCache","cacheCanvas","_getCachedSceneCanvas","_drawCachedHitCanvas","imageData","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","evtStr","handler","_delegate","baseEvent","events","event","off","t","_off","dispatchEvent","removeEventListener","stopNode","targets","findAncestors","currentTarget","remove","stopDrag","_remove","_clearCaches","children","splice","_setChildrenIndices","destroy","getAncestors","ancestors","getAttrs","_batchTransformChanges","$03fc3abdfa907317$var$SET","isListening","_isListening","listening","isVisible","_isVisible","visible","shouldDrawHit","skipDragCheck","layer","layerUnderDrag","dragSkip","show","hide","getZIndex","getAbsoluteZIndex","nodes","child","depth","getDepth","addChildren","concat","getChildren","setPosition","getPosition","getRelativePointerPosition","getPointerPosition","getAbsolutePosition","haveCachedParent","absoluteMatrix","absoluteTransform","setAbsolutePosition","origTrans","_clearTransform","it","_getAbsoluteTransform","_setTransform","offsetX","offsetY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","theta","moveToTop","moveUp","moveDown","moveToBottom","setZIndex","zIndex","_getAbsoluteOpacity","opacity","newContainer","add","toObject","defaultValue","className","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","isAncestorOf","findAncestor","sel","selectorArr","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","transformsEnabled","getTransform","getAbsoluteRotation","_getTransform","clone","allListeners","listener","_toKonvaCanvas","box","toCanvas","toImage","Promise","resolve","reject","img","toBlob","blob","size","getSize","getType","getDragDistance","evtName","evtListeners","newVal","addName","oldName","newName","fullName","names","removeName","batchDraw","_setComponentAttr","compareShape","stopBubble","cancelBubble","_getProtoListeners","hierarchyEvents","topListeners","selfListeners","_createDragElement","ap","_getPointerById","bubbleEvent","newNodePos","dbf","dragBoundFunc","bounded","setDraggable","draggable","_dragChange","_listenDrag","_dragCleanup","hasDraggingChild","dragElement","isReady","isClientRectOnScreen","screenRect","create","data","container","parse","_createNode","no","Class","_attrsAffectingSize","$03fc3abdfa907317$var$addGetterSetter","rotateDeg","setRotationDeg","getRotationDeg","$50e33e7b8fd8ffb7$exports","Container","$50e33e7b8fd8ffb7$var$Container","filterFunc","results","removeChildren","destroyChildren","_validateAdd","_generalFind","findOne","_descendants","valid","fn","getAllIntersections","intersects","can","caching","_drawChildren","drawMethod","clipWidth","clipHeight","clipFunc","hasClip","selfCache","clipArgs","clipX","clipY","hasComposition","selfRect","Infinity","skipShadow","skipStroke","shapes","hasVisible","$69c01c495bcf49b7$exports","Stage","stages","$fb730314bff2d43b$exports","releaseCapture","setPointerCapture","hasPointerCapture","createEvent","getCapturedShape","$fb730314bff2d43b$var$Captures","$fb730314bff2d43b$var$SUPPORT_POINTER_EVENTS","$fb730314bff2d43b$var$createEvent","$fb730314bff2d43b$var$releaseCapture","content","PointerEvent","$69c01c495bcf49b7$var$MOUSELEAVE","$69c01c495bcf49b7$var$MOUSEOVER","$69c01c495bcf49b7$var$MOUSEENTER","$69c01c495bcf49b7$var$MOUSEMOVE","$69c01c495bcf49b7$var$MOUSEDOWN","$69c01c495bcf49b7$var$MOUSEUP","$69c01c495bcf49b7$var$POINTERMOVE","$69c01c495bcf49b7$var$POINTERDOWN","$69c01c495bcf49b7$var$POINTERUP","$69c01c495bcf49b7$var$POINTERCANCEL","$69c01c495bcf49b7$var$POINTEROUT","$69c01c495bcf49b7$var$POINTERLEAVE","$69c01c495bcf49b7$var$POINTEROVER","$69c01c495bcf49b7$var$POINTERENTER","$69c01c495bcf49b7$var$CONTEXTMENU","$69c01c495bcf49b7$var$TOUCHSTART","$69c01c495bcf49b7$var$TOUCHEND","$69c01c495bcf49b7$var$TOUCHMOVE","$69c01c495bcf49b7$var$TOUCHCANCEL","$69c01c495bcf49b7$var$WHEEL","$69c01c495bcf49b7$var$EVENTS","$69c01c495bcf49b7$var$EVENTS_MAP","mouse","pointerclick","pointerdblclick","touch","pointer","$69c01c495bcf49b7$var$getEventType","$69c01c495bcf49b7$var$getEventsMap","$69c01c495bcf49b7$var$checkNoClip","$69c01c495bcf49b7$var$Stage","_pointerPositions","_buildDOM","_bindContentEvents","_resizeDOM","_checkVisibility","isLayer","isFastLayer","display","setContainer","getElementsByClassName","getElementById","parentElement","removeChild","appendChild","layers","bufferCanvas","bufferHitCanvas","p","getPointersPositions","getContent","layerCanvas","getIntersection","rest","getLayers","passive","_pointerenter","pointerenter","_pointerover","pointerover","_getTargetShape","evenType","_pointerleave","targetShape","eventsEnabled","pointerout","pointerleave","pointerPos","_pointerdown","triggeredOnShape","hasShape","pointerdown","isTouch","preventDefault","cancelable","_pointermove","processedShapesIds","differentTarget","assign","pointermove","_pointerup","clickStartShape","clickEndShape","fireDblClick","clearTimeout","pointerup","_contextmenu","_wheel","_pointercancel","_lostpointercapture","contentPosition","_getContentPosition","clientX","clientY","_setPointerPosition","getBoundingClientRect","clientWidth","clientHeight","innerHTML","userSelect","setAttribute","$cd8daa9108e9dd62$exports","Layer","$8173247af08db530$exports","Shape","$8173247af08db530$var$HAS_SHADOW","$8173247af08db530$var$SHADOW_RGBA","$8173247af08db530$var$patternImage","$8173247af08db530$var$linearGradient","$8173247af08db530$var$radialGradient","$8173247af08db530$var$getDummyContext","$8173247af08db530$var$Shape","getSceneFunc","sceneFunc","getHitFunc","hitFunc","hasShadow","_hasShadow","shadowEnabled","shadowOpacity","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","__getFillPattern","fillPatternImage","ctx","pattern","fillPatternRepeat","fillPatternX","fillPatternY","fillPatternRotation","fillPatternScaleX","fillPatternScaleY","fillPatternOffsetX","fillPatternOffsetY","DOMMatrix","__getLinearGradient","fillLinearGradientColorStops","fillLinearGradientStartPoint","fillLinearGradientEndPoint","__getRadialGradient","fillRadialGradientColorStops","fillRadialGradientStartPoint","fillRadialGradientEndPoint","fillRadialGradientStartRadius","fillRadialGradientEndRadius","_getShadowRGBA","rgba","hasFill","strokeEnabled","strokeLinearGradientColorStops","_useBufferCanvas","forceFill","perfectDrawEnabled","isTransparent","strokeForShadow","shadowForStrokeEnabled","setStrokeHitEnabled","getStrokeHitEnabled","getSelfRect","_centroid","applyStroke","fillAndStrokeWidth","fillAndStrokeHeight","applyShadow","preWidth","preHeight","blurRadius","bufferContext","drawFunc","skipBuffer","cachingSelf","o","drawHitFromCache","alphaThreshold","hitImageData","hitData","rgbColorKey","hitWidth","hitHeight","alpha","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc","$cd8daa9108e9dd62$var$INTERSECTION_OFFSETS","$cd8daa9108e9dd62$var$INTERSECTION_OFFSETS_LEN","$cd8daa9108e9dd62$var$Layer","_waitingForDraw","_setSmoothEnabled","createPNGStream","getNativeCanvasElement","getHitCanvas","insertBefore","spiralSearchDistance","continueSearch","intersectionOffset","_getIntersection","antialiased","p3","$cd8daa9108e9dd62$var$HASH","clearBeforeDraw","enableHitGraph","hitGraphEnabled","disableHitGraph","setHitGraphEnabled","getHitGraphEnabled","toggleHitCanvas","$83d23d5ca4759aa4$exports","FastLayer","$83d23d5ca4759aa4$var$FastLayer","$da8e70b72825bd12$exports","Group","$da8e70b72825bd12$var$Group","$3688513f3eaf48af$exports","Animation","$3688513f3eaf48af$var$now","performance","now","Date","getTime","$3688513f3eaf48af$var$Animation","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","addLayer","isRunning","animations","stop","_addAnimation","_removeAnimation","_updateFrameObject","anim","_handleAnimation","_runFrames","layersLen","layerHash","_animationLoop","Anim","animRunning","$48089d56c7429c2d$exports","Easings","Tween","$48089d56c7429c2d$var$blacklist","duration","easing","onFinish","yoyo","$48089d56c7429c2d$var$idCounter","$48089d56c7429c2d$var$colorAttrs","$48089d56c7429c2d$var$TweenEngine","propFunc","begin","finish","_pos","_change","prevPos","_time","_position","_startTime","_finish","pause","setTime","reverse","play","update","state","getTimer","onEnterFrame","seek","$48089d56c7429c2d$var$Tween","nodeId","Linear","tween","_tweenFunc","_addListeners","tweens","_addAttr","onReset","onUpdate","diff","tweenId","trueEnd","trueStart","endRGBA","closed","startRGBA","onPlay","onReverse","onPause","thisId","to","params","BackEaseIn","BackEaseOut","BackEaseInOut","ElasticEaseIn","asin","pow","ElasticEaseOut","ElasticEaseInOut","BounceEaseOut","BounceEaseIn","BounceEaseInOut","EaseIn","EaseOut","EaseInOut","StrongEaseIn","StrongEaseOut","StrongEaseInOut","$2d67c1a1a72b8ce1$exports","Arc","$2d67c1a1a72b8ce1$var$Arc","_sceneFunc","clockwise","outerRadius","innerRadius","boundLeftRatio","boundTopRatio","boundBottomRatio","boundLeft","boundTop","boundBottom","boundRight","$d0c80a6fe5fa4728$exports","Arrow","$5217a1f06c18ba48$exports","$5217a1f06c18ba48$var$getControlPoints","x0","y0","d01","d12","fa","fb","$5217a1f06c18ba48$var$expandPoints","tension","cp","allPoints","Line","$5217a1f06c18ba48$var$Line","tp","bezier","getTensionPoints","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","$b423ec4e2dd4644d$exports","Path","$c3ba1e298013d19b$exports","t2length","getQuadraticArcLength","getCubicArcLength","binomialCoefficients","cValues","tValues","xs","ys","z","sum","correctedT","$c3ba1e298013d19b$var$BFunc","xbase","$c3ba1e298013d19b$var$getDerivative","ybase","ax","ay","bx","by","A","B","k","uuk","bbk","log","derivative","vs","_vs","totalLength","step","numIterations","increasedTLength","increasedTError","decreasedTLength","decreasedTError","$b423ec4e2dd4644d$var$Path","dataArray","pathLength","_readDataAttribute","parsePathData","getPathLength","ca","command","cx","cy","rx","ry","dTheta","psi","fs","inc","getPointOnEllipticalArc","getPointOnCubicBezier","getLength","getPointAtLength","getPointAtLengthOfDataArray","getLineLength","ii","getPointOnLine","getPointOnQuadraticBezier","P1x","P1y","P2x","P2y","fromX","fromY","run","rise","ix","iy","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB3","cosPsi","sinPsi","cs","cc","RegExp","coords","cpx","cpy","re","j","jlen","parsed","parseFloat","prevCmd","ctlPtx","ctlPty","cmd","startX","startY","idx","convertEndpointToCenterParameterization","calcLength","psiDeg","xp","yp","lambda","cxp","cyp","vMag","v","vRatio","vAngle","$d0c80a6fe5fa4728$var$Arrow","PI2","fromTension","pointerLength","lp","lastLength","previous","atan2","pointerWidth","pointerAtEnding","__fillStroke","pointerAtBeginning","isDashEnabled","lineRect","$04480eaa32079d19$exports","Circle","$04480eaa32079d19$var$Circle","radius","$736e07c6c47b1470$exports","Ellipse","$736e07c6c47b1470$var$Ellipse","radiusX","radiusY","$5a9745b05ab2385a$exports","Image","$5a9745b05ab2385a$var$Image","_setImageLoad","image","complete","readyState","cropWidth","cropHeight","cropX","cropY","_hitFunc","fromURL","onError","onerror","crossOrigin","$5fe52d077064716d$exports","Tag","Label","$5fe52d077064716d$var$ATTR_CHANGE_LIST","$5fe52d077064716d$var$RIGHT","$5fe52d077064716d$var$DOWN","$5fe52d077064716d$var$LEFT","$5fe52d077064716d$var$attrChangeListLen","$5fe52d077064716d$var$Label","_sync","getText","getTag","pointerDirection","pointerHeight","tag","$5fe52d077064716d$var$Tag","direction","$07185923f893a775$exports","Rect","$07185923f893a775$var$Rect","$0f8c5d6ae2dc1fde$exports","RegularPolygon","$0f8c5d6ae2dc1fde$var$RegularPolygon","_getPoints","sides","$b49fcfc41be2e2d7$exports","Ring","$b49fcfc41be2e2d7$var$PIx2","$b49fcfc41be2e2d7$var$Ring","$f274d880ee17c436$exports","Sprite","$f274d880ee17c436$var$Sprite","_updated","updated","frameIndex","clearInterval","interval","_setInterval","animation","ix4","offsets","frameOffsets","ix2","setInterval","_updateIndex","getIndex","setIndex","$14349c1993cbf05e$exports","Star","$14349c1993cbf05e$var$Star","numPoints","$a9317926b4b08128$exports","$a9317926b4b08128$var$stringToArray","string","from","Text","stringToArray","$a9317926b4b08128$var$AUTO","$a9317926b4b08128$var$JUSTIFY","$a9317926b4b08128$var$LEFT","$a9317926b4b08128$var$MIDDLE","$a9317926b4b08128$var$NORMAL","$a9317926b4b08128$var$NONE","$a9317926b4b08128$var$ATTR_CHANGE_LIST","$a9317926b4b08128$var$attrChangeListLen","$a9317926b4b08128$var$getDummyContext","$a9317926b4b08128$var$Text","$a9317926b4b08128$var$checkDefaultFill","_partialTextX","_partialTextY","_setTextData","textArr","textArrLen","fontSize","lineHeightPx","lineHeight","verticalAlign","alignY","align","totalWidth","letterSpacing","textDecoration","shouldUnderline","shouldLineThrough","translateY","lineTranslateX","lineTranslateY","_getContextFont","spacesNumber","oneWord","lineWidth","lastLine","lastInParagraph","gradient","strokeStyle","array","li","letter","_partialText","measureSize","setText","getTextWidth","textWidth","getTextHeight","textHeight","metrics","font","fontStyle","fontVariant","fontFamily","trim","hasSpace","hasQuotes","_addTextLine","_getTextWidth","lines","fixedWidth","fixedHeight","maxHeightPx","currentHeightPx","wrap","wrapAtWord","shouldAddEllipsis","ellipsis","additionalWidth","low","high","matchWidth","mid","substrWidth","wrapIndex","nextChar","nextIsSpaceOrDash","lastIndexOf","trimRight","_shouldHandleEllipsis","_tryToAddEllipsisToLastLine","trimLeft","$cd9310de5b54c82f$exports","TextPath","$cd9310de5b54c82f$var$NORMAL","$cd9310de5b54c82f$var$_fillFunc","partialText","$cd9310de5b54c82f$var$_strokeFunc","$cd9310de5b54c82f$var$TextPath","dummyCanvas","_getTextPathLength","_getPointAtLength","textBaseline","glyphInfo","p0","_getTextSize","kerningFunc","charArr","offsetToGlyph","charStartPoint","glyphWidth","numberOfSpaces","charEndPoint","kern","midpoint","transposeX","transposeY","info","$fbebca90c6857f1d$exports","Transformer","$fbebca90c6857f1d$var$EVENTS_NAME","$fbebca90c6857f1d$var$ATTR_CHANGE_LIST","$fbebca90c6857f1d$var$NODES_RECT","$fbebca90c6857f1d$var$TRANSFORM_CHANGE_STR","$fbebca90c6857f1d$var$ANGLES","$fbebca90c6857f1d$var$TOUCH_DEVICE","$fbebca90c6857f1d$var$ANCHORS_NAMES","$fbebca90c6857f1d$var$rotateAroundPoint","angleRad","$fbebca90c6857f1d$var$Transformer","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","getNode","attachTo","setNode","setNodes","_nodes","_getEventNamespace","detach","filteredNodes","useSingleNodeRotation","onChange","_resetTransformCache","additionalEvents","_proxyDrag","lastPos","otherNode","otherAbs","getNodes","getActiveAnchor","_movingAnchorName","_getNodeRect","__getNodeRect","__getNodeShape","rot","relative","ignoreStroke","absScale","absPos","totalPoints","getX","getY","_createBack","_createAnchor","anchor","_handleMouseDown","cursor","$fbebca90c6857f1d$var$getCursor","anchorName","_cursorChange","back","rotateEnabled","rotateAnchorOffset","shouldOverdrawWholeArea","hypotenuse","_anchorDragOffset","newHypotenuse","keepProportion","anchorNode","pp","oldAbs","anchorDragBoundFunc","newAbs","oldRotation","newRotation","tol","rotationSnapTolerance","snappedRot","$fbebca90c6857f1d$var$getSnap","snaps","newRotationRad","snapped","absDiff","dif","rotationSnaps","$fbebca90c6857f1d$var$rotateAroundCenter","deltaRad","center","_fitNodesInto","shiftBehavior","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","_removeEvents","newAttrs","oldAttrs","allowNegativeScale","flipEnabled","boundBoxFunc","oldTr","newTr","parentTransform","localTransform","newLocalTransform","forceUpdate","_batchChangeChild","enabledAnchors","resizeEnabled","anchorSize","anchors","anchorStroke","anchorStrokeWidth","anchorFill","anchorCornerRadius","borderEnabled","borderStroke","borderStrokeWidth","borderDash","styleFunc","anchorStyleFunc","isTransforming","stopTransform","lineEnabled","rotateHandlerOffset","enabledHandlers","$8505864c4c1aa7c5$exports","Wedge","$8505864c4c1aa7c5$var$Wedge","getAngleDeg","setAngleDeg","$a22379f0b858a0ef$exports","$a22379f0b858a0ef$var$BlurStack","next","Blur","$a22379f0b858a0ef$var$mul_table","$a22379f0b858a0ef$var$shg_table","$a22379f0b858a0ef$var$filterGaussBlurRGBA","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stack","stackIn","stackOut","mul_sum","shg_sum","$6e99d3a7c3be0513$exports","Brighten","brightness","$5dc0c636e0e21849$exports","Contrast","adjust","contrast","nPixels","$a67f5007962e021c$exports","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","embossDirection","blend","embossBlend","dirY","dirX","w","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","absDif","absB","$20e6d0743b694e8f$exports","$20e6d0743b694e8f$var$remap","fromValue","fromMin","fromMax","toMin","toMax","fromRange","toRange","Enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","$c69dea07f4d559c5$exports","Grayscale","$5ce98f132547ea01$exports","HSL","saturation","hue","luminance","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","$364507ec698b9fef$exports","HSV","$8addd5b6397a9b1f$exports","Invert","$55755e5ba856d2db$exports","Kaleidoscope","$55755e5ba856d2db$var$ToPolar","dst","opt","srcPixels","dstPixels","xSize","ySize","xMid","polarCenterX","yMid","polarCenterY","conversion","$55755e5ba856d2db$var$FromPolar","phaseShift","polarRotation","xoff","srcPos","dstPos","power","kaleidoscopePower","kaleidoscopeAngle","tempCanvas","scratchData","minSectionSize","sectionSize","xStart","xEnd","xDelta","$7ed7c0dcd9880c84$exports","$7ed7c0dcd9880c84$var$pixelAt","idata","$7ed7c0dcd9880c84$var$rgbDistance","Mask","mask","$7ed7c0dcd9880c84$var$backgroundMask","threshold","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mean","$7ed7c0dcd9880c84$var$rgbMean","pTab","$7ed7c0dcd9880c84$var$smoothEdgeMask","sw","sh","weights","side","halfSide","maskResult","so","scy","scx","srcOff","wt","$7ed7c0dcd9880c84$var$dilateMask","$7ed7c0dcd9880c84$var$erodeMask","$7ed7c0dcd9880c84$var$applyMask","$719bd5eb4ff7a25d$exports","Noise","amount","noise","half","$d4d269af6c62c62b$exports","Pixelate","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","nBinsX","nBinsY","$0f5e5467a57f15eb$exports","Posterize","levels","$1a03251528af5732$exports","RGB","$0b8dafa17fe830a1$exports","RGBA","ia","$529ffc80d3d1853d$exports","Sepia","$99e814b66379ac83$exports","Solarize","$0ffe6a4831fef991$exports","Threshold","level","Filters","$e73bf42412feb220$var$stage","innerWidth","innerHeight","$e73bf42412feb220$var$layer","$e73bf42412feb220$var$canSnapTo","thisRect","otherRect","snapDistance","otherXRight","otherXLeft","otherYBottom","otherYTop","distanceToRedRight","distanceToRedLeft","distanceToRedBottom","distanceToRedTop","xWithinSnap","yWithinSnap","body","classList","zoomIn","wheelDeltaY","factor","$e73bf42412feb220$var$snap","sameRect","$e73bf42412feb220$var$highlightSnap","snapFound","canSnap"],"version":3,"file":"index.2caeb376.js.map"}